{
  "id": "253aba196f140ab10becf8417081205b",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Test/Imports.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"@brinkninja/core/contracts/Account/Account.sol\";\nimport \"@brinkninja/core/contracts/Account/AccountFactory.sol\";\nimport \"@brinkninja/core/contracts/Deployers/SaltedDeployer.sol\";\nimport \"@brinkninja/core/contracts/Test/AccountWithTestCalls.sol\";\nimport \"@brinkninja/core/contracts/Test/TestERC20.sol\";\n\ncontract Imports { }\n"
      },
      "@brinkninja/core/contracts/Account/Account.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"./EIP712SignerRecovery.sol\";\nimport \"./EIP1271Validator.sol\";\n\n/// @title Brink account core\n/// @notice Deployed once and used by many proxy contracts as the implementation contract. External functions in this\n/// contract are intended to be called by `delegatecall` from proxy contracts deployed by AccountFactory.\ncontract Account is EIP712SignerRecovery, EIP1271Validator {\n  /// @dev Revert if signer of a transaction or EIP712 message signer is not the proxy owner\n  /// @param signer The address that is not the owner\n  error NotOwner(address signer);\n\n  /// @dev Revert if EIP1271 hash and signature is invalid\n  /// @param hash Hash of the data to be validated\n  /// @param signature Signature byte array associated with hash\n  error InvalidSignature(bytes32 hash, bytes signature);\n\n  /// @dev Revert if the Account.sol implementation contract is called directly\n  error NotDelegateCall();\n\n  /// @dev Typehash for signed metaDelegateCall() messages\n  bytes32 internal immutable META_DELEGATE_CALL_TYPEHASH;\n\n  /// @dev Typehash for signed metaDelegateCall_EIP1271() messages\n  bytes32 internal immutable META_DELEGATE_CALL_EIP1271_TYPEHASH;\n\n  /// @dev Deployment address of the implementation Account.sol contract. Used to enforce onlyDelegateCallable.\n  address internal immutable deploymentAddress = address(this);\n\n  /// @dev Used by external functions to revert if they are called directly on the implementation Account.sol contract\n  modifier onlyDelegateCallable() {\n    if (address(this) == deploymentAddress) {\n      revert NotDelegateCall();\n    }\n    _;\n  }\n\n  /// @dev Constructor sets immutable constants\n  constructor() { \n    META_DELEGATE_CALL_TYPEHASH = keccak256(\"MetaDelegateCall(address to,bytes data)\");\n    META_DELEGATE_CALL_EIP1271_TYPEHASH = keccak256(\"MetaDelegateCall_EIP1271(address to,bytes data)\");\n  }\n\n  /// @dev Makes a call to an external contract\n  /// @dev Only executable directly by the proxy owner\n  /// @param value Amount of wei to send with the call\n  /// @param to Address of the external contract to call\n  /// @param data Call data to execute\n  function externalCall(uint256 value, address to, bytes memory data) external payable onlyDelegateCallable {\n    if (proxyOwner() != msg.sender) {\n      revert NotOwner(msg.sender);\n    }\n\n    assembly {\n      let result := call(gas(), to, value, add(data, 0x20), mload(data), 0, 0)\n      returndatacopy(0, 0, returndatasize())\n      switch result\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n\n  /// @dev Makes a delegatecall to an external contract\n  /// @param to Address of the external contract to delegatecall\n  /// @param data Call data to execute\n  function delegateCall(address to, bytes memory data) external payable onlyDelegateCallable {\n    if (proxyOwner() != msg.sender) {\n      revert NotOwner(msg.sender);\n    }\n\n    assembly {\n      let result := delegatecall(gas(), to, add(data, 0x20), mload(data), 0, 0)\n      returndatacopy(0, 0, returndatasize())\n      switch result\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n\n  /// @dev Allows execution of a delegatecall with a valid signature from the proxyOwner. Uses EIP-712\n  /// (https://github.com/ethereum/EIPs/pull/712) signer recovery.\n  /// @param to Address of the external contract to delegatecall, signed by the proxyOwner\n  /// @param data Call data to include in the delegatecall, signed by the proxyOwner\n  /// @param signature Signature of the proxyOwner\n  /// @param unsignedData Unsigned call data appended to the delegatecall\n  /// @notice WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded\n  /// `callData`. If the proxyOwner signs a delegatecall to a malicious contract, this could result in total loss of\n  /// their account.\n  function metaDelegateCall(\n    address to, bytes calldata data, bytes calldata signature, bytes calldata unsignedData\n  ) external payable onlyDelegateCallable {\n    address signer = _recoverSigner(\n      keccak256(abi.encode(META_DELEGATE_CALL_TYPEHASH, to, keccak256(data))),\n      signature\n    );\n    if (proxyOwner() != signer) {\n      revert NotOwner(signer);\n    }\n\n    bytes memory callData = abi.encodePacked(data, unsignedData);\n\n    assembly {\n      let result := delegatecall(gas(), to, add(callData, 0x20), mload(callData), 0, 0)\n      returndatacopy(0, 0, returndatasize())\n      switch result\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n\n  /// @dev Allows execution of a delegatecall if proxyOwner is a smart contract. Uses EIP-1271\n  /// (https://eips.ethereum.org/EIPS/eip-1271) signer validation.\n  /// @param to Address of the external contract to delegatecall, validated by the proxyOwner contract\n  /// @param data Call data to include in the delegatecall, validated by the proxyOwner contract\n  /// @param signature Signature that will be validated by the proxyOwner contract\n  /// @param unsignedData Unsigned call data appended to the delegatecall\n  /// @notice WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded\n  /// `callData`. If the proxyOwner contract validates a delegatecall to a malicious contract, this could result in\n  /// total loss of the account.\n  function metaDelegateCall_EIP1271(\n    address to, bytes calldata data, bytes calldata signature, bytes calldata unsignedData\n  ) external payable onlyDelegateCallable {\n    bytes32 hash = keccak256(abi.encode(META_DELEGATE_CALL_EIP1271_TYPEHASH, to, keccak256(data)));\n    if(!_isValidSignature(proxyOwner(), hash, signature)) {\n      revert InvalidSignature(hash, signature);\n    }\n\n    bytes memory callData = abi.encodePacked(data, unsignedData);\n\n    assembly {\n      let result := delegatecall(gas(), to, add(callData, 0x20), mload(callData), 0, 0)\n      returndatacopy(0, 0, returndatasize())\n      switch result\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n\n  /// @dev Returns the owner address for the proxy\n  /// @return _proxyOwner The owner address for the proxy\n  function proxyOwner() internal view returns (address _proxyOwner) {\n    assembly {\n      // copies to \"scratch space\" 0 memory pointer\n      extcodecopy(address(), 0, 0x28, 0x14)\n      _proxyOwner := shr(0x60, mload(0))\n    }\n  }\n\n  receive() external payable { }\n}\n"
      },
      "@brinkninja/core/contracts/Account/AccountFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\n/// @title Brink account factory\n/// @notice This is a factory contract used for deployment of Brink proxy accounts\ncontract AccountFactory {\n  error DeployFailed();\n\n  /// @dev Deploys a Proxy account for the given owner\n  /// @param owner Owner of the Proxy account\n  /// @return account Address of the deployed Proxy account\n  /// @notice This deploys a \"minimal proxy\" contract with the proxy owner address added to the deployed bytecode. The\n  /// owner address can be read within a delegatecall by using `extcodecopy`. Minimal proxy bytecode is from\n  /// https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48 and https://eips.ethereum.org/EIPS/eip-1167. It\n  /// utilizes the \"vanity address optimization\" from EIP 1167\n  function deployAccount(address owner) external returns (address account) {\n    bytes memory initCode = abi.encodePacked(\n      //  [* constructor **] [** minimal proxy ***] [******* implementation *******] [**** minimal proxy *****]\n      hex'603c3d8160093d39f3_3d3d3d3d363d3d37363d6f_afcbce78c080f96032a5c1cb1b832d7b_5af43d3d93803e602657fd5bf3',\n      owner\n    );\n    assembly {\n      account := create2(0, add(initCode, 0x20), mload(initCode), 0)\n    }\n    if(account == address(0)) {\n      revert DeployFailed();\n    }\n  }\n}\n"
      },
      "@brinkninja/core/contracts/Deployers/SaltedDeployer.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"../Interfaces/ISingletonFactory.sol\";\n\n/// @title Deploys contracts using the canonical SingletonFactory and a hardcoded bytes32 salt. Includes custom events\n/// and errors.\ncontract SaltedDeployer {\n  /// @dev Emit when contract is deployed successfully\n  event Deployed(address deployAddress);\n\n  /// @dev Revert when SingletonFactory deploy returns 0 address\n  error DeployFailed();\n\n  /// @dev Revert when initCode is already deployed\n  error DeploymentExists();\n\n  /// @dev Salt used for salted deployments\n  bytes32 constant SALT = 0xd2a5b1e84cb7a6df481438c61ec4144631172d3d29b2a30fe7c5f0fbf4e51735;\n\n  /// @dev Canonical SingletonFactory address\n  /// @notice https://eips.ethereum.org/EIPS/eip-2470\n  ISingletonFactory constant SINGLETON_FACTORY = ISingletonFactory(0xce0042B868300000d44A59004Da54A005ffdcf9f);\n\n  /// @dev Computes the salted deploy address of contract with initCode\n  /// @return deployAddress Address where the contract with initCode will be deployed\n  function getDeployAddress (bytes memory initCode) public pure returns (address deployAddress) {\n    bytes32 hash = keccak256(\n      abi.encodePacked(bytes1(0xff), address(SINGLETON_FACTORY), SALT, keccak256(initCode))\n    );\n    deployAddress = address(uint160(uint(hash)));\n  }\n\n  /// @dev Deploys the contract with initCode\n  /// @param initCode The initCode to deploy\n  function deploy(bytes memory initCode) external {\n    if (_isContract(getDeployAddress(initCode))) {\n      revert DeploymentExists();\n    }\n    address deployAddress = SINGLETON_FACTORY.deploy(initCode, SALT);\n    if (deployAddress == address(0)) {\n      revert DeployFailed();\n    }\n    emit Deployed(deployAddress);\n  }\n\n  function _isContract(address account) internal view returns (bool) {\n    return account.code.length > 0;\n  }\n}\n"
      },
      "@brinkninja/core/contracts/Test/AccountWithTestCalls.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"../Account/Account.sol\";\nimport \"./TestAccountCalls.sol\";\n\nabstract contract AccountWithTestCalls is Account, TestAccountCalls {\n\n}\n"
      },
      "@brinkninja/core/contracts/Test/TestERC20.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\ncontract TestERC20 {\n  bool public _broken;\n\n  string public name;\n  string public symbol;\n  uint8 public decimals = 18;\n\n  uint  public totalSupply;\n  mapping(address => uint) public balanceOf;\n  mapping(address => mapping(address => uint)) public allowance;\n\n  bytes32 public DOMAIN_SEPARATOR;\n  // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n  mapping(address => uint) public nonces;\n\n  event Approval(address indexed owner, address indexed spender, uint value);\n  event Transfer(address indexed from, address indexed to, uint value);\n\n  constructor (string memory _name, string memory _symbol, uint8 _decimals) {\n    uint chainId;\n    assembly {\n      chainId := chainid()\n    }\n    DOMAIN_SEPARATOR = keccak256(\n      abi.encode(\n        keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n        keccak256(bytes(_name)),\n        keccak256(bytes('1')),\n        chainId,\n        address(this)\n      )\n    );\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n  }\n\n  function breakMe() external {\n    _broken = true;\n  }\n\n  function mint(address to, uint value) external {\n    require(to != address(0), \"ERC20: mint to the zero address\");\n\n    totalSupply += value;\n    balanceOf[to] += value;\n    emit Transfer(address(0), to, value);\n  }\n\n  function burn(address from, uint value) external {\n    require(from != address(0), \"ERC20: burn from the zero address\");\n\n    balanceOf[from] -= value;\n    totalSupply -= value;\n    emit Transfer(from, address(0), value);\n  }\n\n  function approve(address spender, uint value) external returns (bool) {\n    _approve(msg.sender, spender, value);\n    return true;\n  }\n\n  function transfer(address to, uint value) external returns (bool) {\n    _transfer(msg.sender, to, value);\n    return true;\n  }\n\n  function transferFrom(address from, address to, uint value) external returns (bool) {\n    _transfer(from, to, value);\n\n    uint256 currentAllowance = allowance[from][msg.sender];\n    require(currentAllowance >= value, \"TestERC20: transfer value exceeds allowance\");\n    _approve(from, msg.sender, currentAllowance - value);\n\n    return true;\n  }\n\n  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n    require(deadline >= block.timestamp, 'EXPIRED');\n    bytes32 digest = keccak256(\n        abi.encodePacked(\n            '\\x19\\x01',\n            DOMAIN_SEPARATOR,\n            keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n        )\n    );\n    address recoveredAddress = ecrecover(digest, v, r, s);\n    require(recoveredAddress != address(0) && recoveredAddress == owner, 'INVALID_SIGNATURE');\n    _approve(owner, spender, value);\n  }\n\n  function _approve(address owner, address spender, uint value) private {\n    require(!_broken, \"TestERC20._approve: Token is broken\");\n    require(owner != address(0), \"ERC20: approve from the zero address\");\n    require(spender != address(0), \"ERC20: approve to the zero address\");\n\n    allowance[owner][spender] = value;\n    emit Approval(owner, spender, value);\n  }\n\n  function _transfer(address from, address to, uint value) private {\n    require(!_broken, \"TestERC20._transfer: Token is broken\");\n    require(from != address(0), \"ERC20: transfer from the zero address\");\n    require(to != address(0), \"ERC20: transfer to the zero address\");\n    require(balanceOf[from] >= value, \"ERC20: transfer amount exceeds balance\");\n\n    balanceOf[from] -= value;\n    balanceOf[to] += value;\n    emit Transfer(from, to, value);\n  }\n}\n"
      },
      "@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"./ECDSA.sol\";\n\n/// @title Provides signer address recovery for EIP-712 signed messages\n/// @notice https://github.com/ethereum/EIPs/pull/712\nabstract contract EIP712SignerRecovery {\n  /// @dev Recovers the signer address for an EIP-712 signed message\n  /// @param dataHash Hash of the data included in the message\n  /// @param signature An EIP-712 signature\n  function _recoverSigner(bytes32 dataHash, bytes calldata signature) internal view returns (address) {\n    // generate the hash for the signed message\n    bytes32 messageHash = keccak256(abi.encodePacked(\n      \"\\x19\\x01\",\n      // hash the EIP712 domain separator\n      keccak256(abi.encode(\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n        keccak256(\"BrinkAccount\"),\n        keccak256(\"1\"),\n        block.chainid,\n        address(this)\n      )),\n      dataHash\n    ));\n\n    // recover the signer address from the signed messageHash and return\n    return ECDSA.recover(messageHash, signature);\n  }\n}\n"
      },
      "@brinkninja/core/contracts/Account/EIP1271Validator.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"../Interfaces/IERC1271.sol\";\n\n/// @title Provides a validation check on a signer contract that implements EIP-1271\n/// @notice https://github.com/ethereum/EIPs/issues/1271\nabstract contract EIP1271Validator {\n\n  bytes4 constant internal MAGICVALUE = bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"));\n\n  /**\n   * @dev Should return whether the signature provided is valid for the provided hash\n   * @param signer Address of a contract that implements EIP-1271\n   * @param hash Hash of the data to be validated\n   * @param signature Signature byte array associated with hash\n   */ \n  function _isValidSignature(address signer, bytes32 hash, bytes calldata signature) internal view returns (bool) {\n    return IERC1271(signer).isValidSignature(hash, signature) == MAGICVALUE;\n  }\n}\n"
      },
      "@brinkninja/core/contracts/Account/ECDSA.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        // Check the signature length\n        if (signature.length != 65) {\n            revert(\"ECDSA: invalid signature length\");\n        }\n\n        // Divide the signature in r, s and v variables\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        // ecrecover takes the signature parameters, and the only way to get them\n        // currently is to use assembly.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        return recover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover-bytes32-bytes-} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        require(uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0, \"ECDSA: invalid signature 's' value\");\n        require(v == 27 || v == 28, \"ECDSA: invalid signature 'v' value\");\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        require(signer != address(0), \"ECDSA: invalid signature\");\n\n        return signer;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * replicates the behavior of the\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\n     * JSON-RPC method.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n}\n"
      },
      "@brinkninja/core/contracts/Interfaces/IERC1271.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\ninterface IERC1271 {\n  function isValidSignature(bytes32 _hash, bytes memory _signature) external view returns (bytes4 magicValue);\n}\n"
      },
      "@brinkninja/core/contracts/Interfaces/ISingletonFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\ninterface ISingletonFactory {\n  function deploy(bytes memory _initCode, bytes32 _salt) external returns (address payable createdContract);\n}\n"
      },
      "@brinkninja/core/contracts/Test/TestAccountCalls.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\ncontract TestAccountCalls {\n  bool private _called;\n\n  event ExecutedTestCall();\n  event MockParamEvent(uint256 mockUint);\n  event MockParamsEvent(uint256 mockUint, int24 mockInt, address mockAddress);\n\n  function testRevert(bool forceRevert) external {\n    require(!forceRevert, \"TestAccountCalls: reverted\");\n    _called = true;\n    emit ExecutedTestCall();\n  }\n\n  function testTransferETH (uint256 amount, address recipient) external {\n    bool success;\n    (success, ) = recipient.call{value: amount}(\"\");\n    require(success, \"TestAccountCalls: testTransferETH call failed\");\n  }\n\n  function testEvent (uint256 mockUint) external {\n    emit MockParamEvent(mockUint);\n  }\n\n  function testEvent (uint256 mockUint, int24 mockInt, address mockAddress) external {\n    emit MockParamsEvent(mockUint, mockInt, mockAddress);\n  }\n\n  function testStore (uint256 mockUint) external {\n    bytes32 ptr = keccak256('mockUint');\n    assembly {\n      sstore(ptr, mockUint)\n    }\n  }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@brinkninja/core/contracts/Account/Account.sol": {
        "Account": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "InvalidSignature",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotDelegateCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "name": "NotOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "delegateCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "externalCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "unsignedData",
                  "type": "bytes"
                }
              ],
              "name": "metaDelegateCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "unsignedData",
                  "type": "bytes"
                }
              ],
              "name": "metaDelegateCall_EIP1271",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_70": {
                  "entryPoint": null,
                  "id": 70,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60e06040523060c05234801561001457600080fd5b507f023ce5d01636bb12b4ffde3c4f5a66fb1044aa0dbc251394e60f0a26f15910436080527f1d3b50d88adeb95016e86033ab418b64b7ecd66b70783b0dca7b0afc8bfb8a1e60a05260805160a05160c051610c3c6100a16000396000818161041501528181610593015281816106cb0152610769015260006105d60152600061045b0152610c3c6000f3fe6080604052600436106100435760003560e01c80631f6f42021461004f5780632867a68d1461017557806356e7b7aa14610299578063bbfeeeb51461034f57600080fd5b3661004a57005b600080fd5b6101736004803603608081101561006557600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561009057600080fd5b8201836020820111156100a257600080fd5b803590602001918460018302840111640100000000831117156100c457600080fd5b9193909290916020810190356401000000008111156100e257600080fd5b8201836020820111156100f457600080fd5b8035906020019184600183028401116401000000008311171561011657600080fd5b91939092909160208101903564010000000081111561013457600080fd5b82018360208201111561014657600080fd5b8035906020019184600183028401116401000000008311171561016857600080fd5b50909250905061040a565b005b6101736004803603608081101561018b57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101b657600080fd5b8201836020820111156101c857600080fd5b803590602001918460018302840111640100000000831117156101ea57600080fd5b91939092909160208101903564010000000081111561020857600080fd5b82018360208201111561021a57600080fd5b8035906020019184600183028401116401000000008311171561023c57600080fd5b91939092909160208101903564010000000081111561025a57600080fd5b82018360208201111561026c57600080fd5b8035906020019184600183028401116401000000008311171561028e57600080fd5b509092509050610588565b610173600480360360408110156102af57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106c0945050505050565b6101736004803603606081101561036557600080fd5b8135916001600160a01b036020820135169181019060608101604082013564010000000081111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460018302840111640100000000831117156103c957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061075e945050505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610454576040516327844c6960e11b815260040160405180910390fd5b60006104de7f0000000000000000000000000000000000000000000000000000000000000000898989604051808383808284378083019250505092505050604051809103902060405160200180848152602001836001600160a01b0316815260200182815260200193505050506040516020818303038152906040528051906020012086866107fd565b9050806001600160a01b03166104f261091a565b6001600160a01b031614610529576040805163245aecd360e01b81526001600160a01b038316600482015290519081900360240190fd5b600087878585604051602001808585808284379190910190508383808284378083019250505094505050505060405160208183030381529060405290506000808251602084018c5af43d6000803e808015610583573d6000f35b3d6000fd5b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105d2576040516327844c6960e11b815260040160405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000888888604051808383808284378083019250505092505050604051809103902060405160200180848152602001836001600160a01b03168152602001828152602001935050505060405160208183030381529060405280519060200120905061066761065f61091a565b82878761092e565b61052957808585604051638f4a234f60e01b815260040180848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050fd5b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561070a576040516327844c6960e11b815260040160405180910390fd5b3361071361091a565b6001600160a01b031614610741576040805163245aecd360e01b815233600482015290519081900360240190fd5b600080825160208401855af43d6000803e808015610583573d6000f35b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107a8576040516327844c6960e11b815260040160405180910390fd5b336107b161091a565b6001600160a01b0316146107df576040805163245aecd360e01b815233600482015290519081900360240190fd5b60008082516020840186865af13d6000803e808015610583573d6000f35b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6020808301919091527f977bbc96a0db0d97b4b08241f0db5937a7503966a121e611507f9a616f95651f828401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a0808401919091528351808403909101815260c08301845280519082012061190160f01b60e084015260e2830152610102808301879052835180840390910181526101228301808552815191830191909120610142601f8701849004909302840183019094528481526000939261091192849291889188918291018382808284376000920191909152506109f692505050565b95945050505050565b6000601460286000303c5060005160601c90565b60408051630b135d3f60e11b80825260048201868152602483019384526044830185905260009391926001600160a01b03891692631626ba7e9289928992899291606401848480828437600083820152604051601f909101601f19169092019650602095509093505050818403905081865afa1580156109b2573d6000803e3d6000fd5b505050506040513d60208110156109c857600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000161495945050505050565b60008151604114610a4e576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a610a6c86828585610a76565b9695505050505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610ad75760405162461bcd60e51b8152600401808060200182810382526022815260200180610bec6022913960400191505060405180910390fd5b8360ff16601b1480610aec57508360ff16601c145b610b275760405162461bcd60e51b8152600401808060200182810382526022815260200180610c0e6022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610b83573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610911576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fdfe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a164736f6c634300080a000a",
              "opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0xC0 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x23CE5D01636BB12B4FFDE3C4F5A66FB1044AA0DBC251394E60F0A26F1591043 PUSH1 0x80 MSTORE PUSH32 0x1D3B50D88ADEB95016E86033AB418B64B7ECD66B70783B0DCA7B0AFC8BFB8A1E PUSH1 0xA0 MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0xC3C PUSH2 0xA1 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x415 ADD MSTORE DUP2 DUP2 PUSH2 0x593 ADD MSTORE DUP2 DUP2 PUSH2 0x6CB ADD MSTORE PUSH2 0x769 ADD MSTORE PUSH1 0x0 PUSH2 0x5D6 ADD MSTORE PUSH1 0x0 PUSH2 0x45B ADD MSTORE PUSH2 0xC3C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F6F4202 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x2867A68D EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x56E7B7AA EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xBBFEEEB5 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x40A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x588 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6C0 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x75E SWAP5 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4DE PUSH32 0x0 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 DUP7 PUSH2 0x7FD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F2 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x529 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP6 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP1 POP DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP13 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x667 PUSH2 0x65F PUSH2 0x91A JUMP JUMPDEST DUP3 DUP8 DUP8 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x529 JUMPI DUP1 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH4 0x8F4A234F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x713 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP6 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x7B1 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 DUP7 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x977BBC96A0DB0D97B4B08241F0DB5937A7503966A121E611507F9A616F95651F DUP3 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 DUP4 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE2 DUP4 ADD MSTORE PUSH2 0x102 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x122 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x142 PUSH1 0x1F DUP8 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP5 DUP2 MSTORE PUSH1 0x0 SWAP4 SWAP3 PUSH2 0x911 SWAP3 DUP5 SWAP3 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP3 SWAP2 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x9F6 SWAP3 POP POP POP JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x28 PUSH1 0x0 ADDRESS EXTCODECOPY POP PUSH1 0x0 MLOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0x44 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP3 PUSH4 0x1626BA7E SWAP3 DUP10 SWAP3 DUP10 SWAP3 DUP10 SWAP3 SWAP2 PUSH1 0x64 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD SWAP7 POP PUSH1 0x20 SWAP6 POP SWAP1 SWAP4 POP POP POP DUP2 DUP5 SUB SWAP1 POP DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0xA4E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xA6C DUP7 DUP3 DUP6 DUP6 PUSH2 0xA76 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBEC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xAEC JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xB27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC0E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x911 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "416:6255:0:-:0;;;1421:4;1366:60;;1730:212;;;;;;;;;-1:-1:-1;1781:52:0;1751:82;;1877:60;1839:98;;416:6255;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_233": {
                  "entryPoint": null,
                  "id": 233,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_isValidSignature_423": {
                  "entryPoint": 2350,
                  "id": 423,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@_recoverSigner_476": {
                  "entryPoint": 2045,
                  "id": 476,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@delegateCall_120": {
                  "entryPoint": 1728,
                  "id": 120,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@externalCall_96": {
                  "entryPoint": 1886,
                  "id": 96,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@metaDelegateCall_170": {
                  "entryPoint": 1034,
                  "id": 170,
                  "parameterSlots": 7,
                  "returnSlots": 0
                },
                "@metaDelegateCall_EIP1271_221": {
                  "entryPoint": 1416,
                  "id": 221,
                  "parameterSlots": 7,
                  "returnSlots": 0
                },
                "@proxyOwner_229": {
                  "entryPoint": 2330,
                  "id": 229,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@recover_312": {
                  "entryPoint": 2550,
                  "id": 312,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@recover_369": {
                  "entryPoint": 2678,
                  "id": 369,
                  "parameterSlots": 4,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "27": [
                  {
                    "length": 32,
                    "start": 1115
                  }
                ],
                "30": [
                  {
                    "length": 32,
                    "start": 1494
                  }
                ],
                "37": [
                  {
                    "length": 32,
                    "start": 1045
                  },
                  {
                    "length": 32,
                    "start": 1427
                  },
                  {
                    "length": 32,
                    "start": 1739
                  },
                  {
                    "length": 32,
                    "start": 1897
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436106100435760003560e01c80631f6f42021461004f5780632867a68d1461017557806356e7b7aa14610299578063bbfeeeb51461034f57600080fd5b3661004a57005b600080fd5b6101736004803603608081101561006557600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561009057600080fd5b8201836020820111156100a257600080fd5b803590602001918460018302840111640100000000831117156100c457600080fd5b9193909290916020810190356401000000008111156100e257600080fd5b8201836020820111156100f457600080fd5b8035906020019184600183028401116401000000008311171561011657600080fd5b91939092909160208101903564010000000081111561013457600080fd5b82018360208201111561014657600080fd5b8035906020019184600183028401116401000000008311171561016857600080fd5b50909250905061040a565b005b6101736004803603608081101561018b57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101b657600080fd5b8201836020820111156101c857600080fd5b803590602001918460018302840111640100000000831117156101ea57600080fd5b91939092909160208101903564010000000081111561020857600080fd5b82018360208201111561021a57600080fd5b8035906020019184600183028401116401000000008311171561023c57600080fd5b91939092909160208101903564010000000081111561025a57600080fd5b82018360208201111561026c57600080fd5b8035906020019184600183028401116401000000008311171561028e57600080fd5b509092509050610588565b610173600480360360408110156102af57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106c0945050505050565b6101736004803603606081101561036557600080fd5b8135916001600160a01b036020820135169181019060608101604082013564010000000081111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460018302840111640100000000831117156103c957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061075e945050505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610454576040516327844c6960e11b815260040160405180910390fd5b60006104de7f0000000000000000000000000000000000000000000000000000000000000000898989604051808383808284378083019250505092505050604051809103902060405160200180848152602001836001600160a01b0316815260200182815260200193505050506040516020818303038152906040528051906020012086866107fd565b9050806001600160a01b03166104f261091a565b6001600160a01b031614610529576040805163245aecd360e01b81526001600160a01b038316600482015290519081900360240190fd5b600087878585604051602001808585808284379190910190508383808284378083019250505094505050505060405160208183030381529060405290506000808251602084018c5af43d6000803e808015610583573d6000f35b3d6000fd5b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105d2576040516327844c6960e11b815260040160405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000888888604051808383808284378083019250505092505050604051809103902060405160200180848152602001836001600160a01b03168152602001828152602001935050505060405160208183030381529060405280519060200120905061066761065f61091a565b82878761092e565b61052957808585604051638f4a234f60e01b815260040180848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050fd5b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561070a576040516327844c6960e11b815260040160405180910390fd5b3361071361091a565b6001600160a01b031614610741576040805163245aecd360e01b815233600482015290519081900360240190fd5b600080825160208401855af43d6000803e808015610583573d6000f35b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107a8576040516327844c6960e11b815260040160405180910390fd5b336107b161091a565b6001600160a01b0316146107df576040805163245aecd360e01b815233600482015290519081900360240190fd5b60008082516020840186865af13d6000803e808015610583573d6000f35b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6020808301919091527f977bbc96a0db0d97b4b08241f0db5937a7503966a121e611507f9a616f95651f828401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a0808401919091528351808403909101815260c08301845280519082012061190160f01b60e084015260e2830152610102808301879052835180840390910181526101228301808552815191830191909120610142601f8701849004909302840183019094528481526000939261091192849291889188918291018382808284376000920191909152506109f692505050565b95945050505050565b6000601460286000303c5060005160601c90565b60408051630b135d3f60e11b80825260048201868152602483019384526044830185905260009391926001600160a01b03891692631626ba7e9289928992899291606401848480828437600083820152604051601f909101601f19169092019650602095509093505050818403905081865afa1580156109b2573d6000803e3d6000fd5b505050506040513d60208110156109c857600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000161495945050505050565b60008151604114610a4e576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a610a6c86828585610a76565b9695505050505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610ad75760405162461bcd60e51b8152600401808060200182810382526022815260200180610bec6022913960400191505060405180910390fd5b8360ff16601b1480610aec57508360ff16601c145b610b275760405162461bcd60e51b8152600401808060200182810382526022815260200180610c0e6022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610b83573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610911576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fdfe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F6F4202 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x2867A68D EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x56E7B7AA EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xBBFEEEB5 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x40A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x588 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6C0 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x75E SWAP5 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4DE PUSH32 0x0 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 DUP7 PUSH2 0x7FD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F2 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x529 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP6 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP1 POP DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP13 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x667 PUSH2 0x65F PUSH2 0x91A JUMP JUMPDEST DUP3 DUP8 DUP8 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x529 JUMPI DUP1 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH4 0x8F4A234F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x713 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP6 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x7B1 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 DUP7 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x977BBC96A0DB0D97B4B08241F0DB5937A7503966A121E611507F9A616F95651F DUP3 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 DUP4 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE2 DUP4 ADD MSTORE PUSH2 0x102 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x122 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x142 PUSH1 0x1F DUP8 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP5 DUP2 MSTORE PUSH1 0x0 SWAP4 SWAP3 PUSH2 0x911 SWAP3 DUP5 SWAP3 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP3 SWAP2 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x9F6 SWAP3 POP POP POP JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x28 PUSH1 0x0 ADDRESS EXTCODECOPY POP PUSH1 0x0 MLOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0x44 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP3 PUSH4 0x1626BA7E SWAP3 DUP10 SWAP3 DUP10 SWAP3 DUP10 SWAP3 SWAP2 PUSH1 0x64 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD SWAP7 POP PUSH1 0x20 SWAP6 POP SWAP1 SWAP4 POP POP POP DUP2 DUP5 SUB SWAP1 POP DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0xA4E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xA6C DUP7 DUP3 DUP6 DUP6 PUSH2 0xA76 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBEC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xAEC JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xB27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC0E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x911 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "416:6255:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:736;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4025:736:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4025:736:0;;-1:-1:-1;4025:736:0;-1:-1:-1;4025:736:0;:::i;:::-;;5545:748;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5545:748:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5545:748:0;;-1:-1:-1;5545:748:0;-1:-1:-1;5545:748:0;:::i;2839:461::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2839:461:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2839:461:0;;-1:-1:-1;2839:461:0;;-1:-1:-1;;;;;2839:461:0:i;2200:475::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2200:475:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2200:475:0;;-1:-1:-1;2200:475:0;;-1:-1:-1;;;;;2200:475:0:i;4025:736::-;1600:4;-1:-1:-1;;;;;1609:17:0;1592:34;;1588:79;;;1643:17;;-1:-1:-1;;;1643:17:0;;;;;;;;;;;1588:79;4191:14:::1;4208:116;4251:27;4280:2;4294:4;;4284:15;;;;;;;;;;;;;;;;;;;;;;;;;;;4240:60;;;;;;;;;;;-1:-1:-1::0;;;;;4240:60:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;4230:71;;;;;;4309:9;;4208:14;:116::i;:::-;4191:133;;4350:6;-1:-1:-1::0;;;;;4334:22:0::1;:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;4334:22:0::1;;4330:66;;4373:16;::::0;;-1:-1:-1;;;4373:16:0;;-1:-1:-1;;;;;4373:16:0;::::1;;::::0;::::1;::::0;;;;;;;;;;::::1;4330:66;4402:21;4443:4;;4449:12;;4426:36;;;;;;;;;;;::::0;;;::::1;::::0;-1:-1:-1;4426:36:0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;4402:60;;4565:1;4562::::0;4551:8:::1;4545:15;4538:4;4528:8;4524:19;4520:2;4513:5;4500:67;4595:16;4592:1;4589::::0;4574:38:::1;4626:6:::0;4639:52;;::::1;;4726:16;4723:1;4716:27;4639:52;4666:16;4663:1;4656:27;5545:748:::0;1600:4;-1:-1:-1;;;;;1609:17:0;1592:34;;1588:79;;;1643:17;;-1:-1:-1;;;1643:17:0;;;;;;;;;;;1588:79;5719:12:::1;5755:35;5792:2;5806:4;;5796:15;;;;;;;;;;;;;;;;;;;;;;;;;;;5744:68;;;;;;;;;;;-1:-1:-1::0;;;;;5744:68:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;5734:79;;;;;;5719:94;;5823:48;5841:12;:10;:12::i;:::-;5855:4;5861:9;;5823:17;:48::i;:::-;5819:109;;5905:4;5911:9;;5888:33;;-1:-1:-1::0;;;5888:33:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;5888:33:0::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;5888:33:0;;-1:-1:-1;;;;;5888:33:0::1;2839:461:::0;1600:4;-1:-1:-1;;;;;1609:17:0;1592:34;;1588:79;;;1643:17;;-1:-1:-1;;;1643:17:0;;;;;;;;;;;1588:79;2956:10:::1;2940:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;2940:26:0::1;;2936:74;;2983:20;::::0;;-1:-1:-1;;;2983:20:0;;2992:10:::1;2983:20;::::0;::::1;::::0;;;;;;;;;;::::1;2936:74;3104:1;3101::::0;3094:4:::1;3088:11;3081:4;3075;3071:15;3067:2;3060:5;3047:59;3134:16;3131:1;3128::::0;3113:38:::1;3165:6:::0;3178:52;;::::1;;3265:16;3262:1;3255:27;2200:475:::0;1600:4;-1:-1:-1;;;;;1609:17:0;1592:34;;1588:79;;;1643:17;;-1:-1:-1;;;1643:17:0;;;;;;;;;;;1588:79;2332:10:::1;2316:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;2316:26:0::1;;2312:74;;2359:20;::::0;;-1:-1:-1;;;2359:20:0;;2368:10:::1;2359:20;::::0;::::1;::::0;;;;;;;;;;::::1;2312:74;2479:1;2476::::0;2469:4:::1;2463:11;2456:4;2450;2446:15;2439:5;2435:2;2428:5;2423:58;2509:16;2506:1;2503::::0;2488:38:::1;2540:6:::0;2553:52;;::::1;;2640:16;2637:1;2630:27;459:661:4::0;739:228;;;759:95;739:228;;;;;;;;864:25;739:228;;;;899:14;739:228;;;;923:13;739:228;;;;954:4;739:228;;;;;;;;;;;;;;;;;;;;;;;729:239;;;;;;-1:-1:-1;;;645:345:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:356;;;;;;;;;1078:37;;;;;;;;;;;;;;;;;;;;550:7;;635:356;1078:37;;635:356;;645:345;1105:9;;;;;;1078:37;1105:9;;;;1078:37;;;;;;;;;-1:-1:-1;1078:13:4;;-1:-1:-1;;;1078:37:4:i;:::-;1071:44;459:661;-1:-1:-1;;;;;459:661:4:o;6406:229:0:-;6451:19;6579:4;6573;6570:1;6559:9;6547:37;-1:-1:-1;6622:1:0;6616:8;6610:4;6606:19;;6406:229::o;685:194:3:-;810:50;;;-1:-1:-1;;;810:50:3;;;;;;;;;;;;;;;;;;;;;791:4;;810:64;;-1:-1:-1;;;;;810:33:3;;;;;844:4;;850:9;;;;810:50;;;850:9;;;;810:50;;;;;;;;;;;;;-1:-1:-1;;810:50:3;;;;;-1:-1:-1;810:50:3;;-1:-1:-1;810:50:3;;-1:-1:-1;;;810:50:3;;;;-1:-1:-1;810:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;810:50:3;:64;;;;685:194;-1:-1:-1;;;;;685:194:3:o;1097:740:2:-;1175:7;1236:9;:16;1256:2;1236:22;1232:94;;1274:41;;;-1:-1:-1;;;1274:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:94;1676:4;1661:20;;1655:27;1721:4;1706:20;;1700:27;1774:4;1759:20;;1753:27;1392:9;1745:36;1808:22;1816:4;1745:36;1655:27;1700;1808:7;:22::i;:::-;1801:29;1097:740;-1:-1:-1;;;;;;1097:740:2:o;1985:1414::-;2070:7;2985:66;2971:80;;;2963:127;;;;-1:-1:-1;;;2963:127:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3108:1;:7;;3113:2;3108:7;:18;;;;3119:1;:7;;3124:2;3119:7;3108:18;3100:65;;;;-1:-1:-1;;;3100:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3260:14;3277:24;3287:4;3293:1;3296;3299;3277:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3277:24:2;;-1:-1:-1;;3277:24:2;;;-1:-1:-1;;;;;;;3319:20:2;;3311:57;;;;;-1:-1:-1;;;3311:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "delegateCall(address,bytes)": "56e7b7aa",
              "externalCall(uint256,address,bytes)": "bbfeeeb5",
              "metaDelegateCall(address,bytes,bytes,bytes)": "1f6f4202",
              "metaDelegateCall_EIP1271(address,bytes,bytes,bytes)": "2867a68d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDelegateCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"unsignedData\",\"type\":\"bytes\"}],\"name\":\"metaDelegateCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"unsignedData\",\"type\":\"bytes\"}],\"name\":\"metaDelegateCall_EIP1271\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidSignature(bytes32,bytes)\":[{\"details\":\"Revert if EIP1271 hash and signature is invalid\",\"params\":{\"hash\":\"Hash of the data to be validated\",\"signature\":\"Signature byte array associated with hash\"}}],\"NotDelegateCall()\":[{\"details\":\"Revert if the Account.sol implementation contract is called directly\"}],\"NotOwner(address)\":[{\"details\":\"Revert if signer of a transaction or EIP712 message signer is not the proxy owner\",\"params\":{\"signer\":\"The address that is not the owner\"}}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor sets immutable constants\"},\"delegateCall(address,bytes)\":{\"details\":\"Makes a delegatecall to an external contract\",\"params\":{\"data\":\"Call data to execute\",\"to\":\"Address of the external contract to delegatecall\"}},\"externalCall(uint256,address,bytes)\":{\"details\":\"Makes a call to an external contractOnly executable directly by the proxy owner\",\"params\":{\"data\":\"Call data to execute\",\"to\":\"Address of the external contract to call\",\"value\":\"Amount of wei to send with the call\"}},\"metaDelegateCall(address,bytes,bytes,bytes)\":{\"details\":\"Allows execution of a delegatecall with a valid signature from the proxyOwner. Uses EIP-712 (https://github.com/ethereum/EIPs/pull/712) signer recovery.\",\"params\":{\"data\":\"Call data to include in the delegatecall, signed by the proxyOwner\",\"signature\":\"Signature of the proxyOwner\",\"to\":\"Address of the external contract to delegatecall, signed by the proxyOwner\",\"unsignedData\":\"Unsigned call data appended to the delegatecall\"}},\"metaDelegateCall_EIP1271(address,bytes,bytes,bytes)\":{\"details\":\"Allows execution of a delegatecall if proxyOwner is a smart contract. Uses EIP-1271 (https://eips.ethereum.org/EIPS/eip-1271) signer validation.\",\"params\":{\"data\":\"Call data to include in the delegatecall, validated by the proxyOwner contract\",\"signature\":\"Signature that will be validated by the proxyOwner contract\",\"to\":\"Address of the external contract to delegatecall, validated by the proxyOwner contract\",\"unsignedData\":\"Unsigned call data appended to the delegatecall\"}}},\"stateVariables\":{\"META_DELEGATE_CALL_EIP1271_TYPEHASH\":{\"details\":\"Typehash for signed metaDelegateCall_EIP1271() messages\"},\"META_DELEGATE_CALL_TYPEHASH\":{\"details\":\"Typehash for signed metaDelegateCall() messages\"},\"deploymentAddress\":{\"details\":\"Deployment address of the implementation Account.sol contract. Used to enforce onlyDelegateCallable.\"}},\"title\":\"Brink account core\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"metaDelegateCall(address,bytes,bytes,bytes)\":{\"notice\":\"WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded `callData`. If the proxyOwner signs a delegatecall to a malicious contract, this could result in total loss of their account.\"},\"metaDelegateCall_EIP1271(address,bytes,bytes,bytes)\":{\"notice\":\"WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded `callData`. If the proxyOwner contract validates a delegatecall to a malicious contract, this could result in total loss of the account.\"}},\"notice\":\"Deployed once and used by many proxy contracts as the implementation contract. External functions in this contract are intended to be called by `delegatecall` from proxy contracts deployed by AccountFactory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Account/Account.sol\":\"Account\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Account/Account.sol\":{\"keccak256\":\"0xbe5ec06df0259ff1402de372166ef35f8a6fccf70fdda8e568eb51f266f0a4d7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387fdb06efb55f40c8240d627d743bfbcf7d36148b87a1ed2a9455940a45d69\",\"dweb:/ipfs/QmQ4QR5n5w3zqh4xz8t46kkFRCUcNyKRqM8v9ire8u7ubK\"]},\"@brinkninja/core/contracts/Account/ECDSA.sol\":{\"keccak256\":\"0xab2afc69f30e37bdd93becfb44abc8160e44e7cf9b4ee76fa86b64deac5e173d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://033351d52ff49364a466fba3babb24c8ebf34cddcb6f25069b6c47fa612d7698\",\"dweb:/ipfs/QmVnpr58oTMJdx1tRCJPCABfZCZY75VGo6TztwFM7hPDsQ\"]},\"@brinkninja/core/contracts/Account/EIP1271Validator.sol\":{\"keccak256\":\"0xf20e72bde23d6b1543e7e79fdf021b65e26967c7d95662b09c6373e01049f476\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b3acec18907293ada18949ead31a020d448f6d8be55f9f8ac08d3be1cd5946d\",\"dweb:/ipfs/QmVWkMttMRxny1hyHoRvtzSdwBbxgTTWjMKck8zAU5h3Sn\"]},\"@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol\":{\"keccak256\":\"0x2348325f509e8292fb37561f6f675ae5dde47da19c31c026b61125cbf2b91f5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d044a3ef8f897bc0e9d7667edbd8070f24b1adbb7f1861ed66c715384c4243ef\",\"dweb:/ipfs/QmfAFNPcqR87cNPZ4z1aamNC1GB3Mkci4nXLJhPxsqjjhM\"]},\"@brinkninja/core/contracts/Interfaces/IERC1271.sol\":{\"keccak256\":\"0xccdfc04dcee6c5610b9b06deba4b6e55e0c7713b3e3d6277973f84ffd457889e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f866c88c0749f303cb6a68df93df17aa973575f732300e3ecff1c48f5147c7d0\",\"dweb:/ipfs/QmdDJicRP95ov7hw6kaZCiDs7wA1EcXTax82kfZgXYZZbf\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Account/AccountFactory.sol": {
        "AccountFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "DeployFailed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "deployAccount",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610126806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da9fc1ae14610030575b600080fd5b6100566004803603602081101561004657600080fd5b50356001600160a01b0316610072565b604080516001600160a01b039092168252519081900360200190f35b6000808260405160200180806100e960319139603101826001600160a01b031660601b8152601401915050604051602081830303815290604052905060008151602083016000f591506001600160a01b0382166100e25760405163b4f5411160e01b815260040160405180910390fd5b5091905056fe603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA9FC1AE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0xE9 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x31 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE2 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB4F54111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x3C RETURNDATASIZE DUP2 PUSH1 0x9 RETURNDATASIZE CODECOPY RETURN RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATACOPY CALLDATASIZE RETURNDATASIZE PUSH16 0xAFCBCE78C080F96032A5C1CB1B832D7B GAS DELEGATECALL RETURNDATASIZE RETURNDATASIZE SWAP4 DUP1 RETURNDATACOPY PUSH1 0x26 JUMPI REVERT JUMPDEST RETURN LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "207:1152:1:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@deployAccount_269": {
                  "entryPoint": 114,
                  "id": 269,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da9fc1ae14610030575b600080fd5b6100566004803603602081101561004657600080fd5b50356001600160a01b0316610072565b604080516001600160a01b039092168252519081900360200190f35b6000808260405160200180806100e960319139603101826001600160a01b031660601b8152601401915050604051602081830303815290604052905060008151602083016000f591506001600160a01b0382166100e25760405163b4f5411160e01b815260040160405180910390fd5b5091905056fe603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA9FC1AE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0xE9 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x31 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE2 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB4F54111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x3C RETURNDATASIZE DUP2 PUSH1 0x9 RETURNDATASIZE CODECOPY RETURN RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATACOPY CALLDATASIZE RETURNDATASIZE PUSH16 0xAFCBCE78C080F96032A5C1CB1B832D7B GAS DELEGATECALL RETURNDATASIZE RETURNDATASIZE SWAP4 DUP1 RETURNDATACOPY PUSH1 0x26 JUMPI REVERT JUMPDEST RETURN LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "207:1152:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:526;;;;;;;;;;;;;;;;-1:-1:-1;831:526:1;-1:-1:-1;;;;;831:526:1;;:::i;:::-;;;;-1:-1:-1;;;;;831:526:1;;;;;;;;;;;;;;;887:15;910:21;1184:5;934:261;;;;;;;;;;;;;-1:-1:-1;;;;;934:261:1;;;;;;;;;;;;;;;;;;;;;;910:285;;1278:1;1267:8;1261:15;1254:4;1244:8;1240:19;1237:1;1229:51;1218:62;-1:-1:-1;;;;;;1294:21:1;;1291:62;;1332:14;;-1:-1:-1;;;1332:14:1;;;;;;;;;;;1291:62;904:453;831:526;;;:::o"
            },
            "methodIdentifiers": {
              "deployAccount(address)": "da9fc1ae"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DeployFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deployAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deployAccount(address)\":{\"details\":\"Deploys a Proxy account for the given owner\",\"params\":{\"owner\":\"Owner of the Proxy account\"},\"returns\":{\"account\":\"Address of the deployed Proxy account\"}}},\"title\":\"Brink account factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployAccount(address)\":{\"notice\":\"This deploys a \\\"minimal proxy\\\" contract with the proxy owner address added to the deployed bytecode. The owner address can be read within a delegatecall by using `extcodecopy`. Minimal proxy bytecode is from https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48 and https://eips.ethereum.org/EIPS/eip-1167. It utilizes the \\\"vanity address optimization\\\" from EIP 1167\"}},\"notice\":\"This is a factory contract used for deployment of Brink proxy accounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Account/AccountFactory.sol\":\"AccountFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Account/AccountFactory.sol\":{\"keccak256\":\"0xecc5b2bb62c369f0184e32d50453e279a79535c44164ae88bf7516c7d6b14568\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://41c9dbc0613e63f14177b9f6ce9040db44fb7ac250a1bd2b624e938b5096808e\",\"dweb:/ipfs/QmWCZidpP7Jx692hpF2qcsUnSQCKxCdSg5nbCSqeZm933j\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Account/ECDSA.sol": {
        "ECDSA": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "297:3633:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:3633:2;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080a000a",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "297:3633:2:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Account/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Account/ECDSA.sol\":{\"keccak256\":\"0xab2afc69f30e37bdd93becfb44abc8160e44e7cf9b4ee76fa86b64deac5e173d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://033351d52ff49364a466fba3babb24c8ebf34cddcb6f25069b6c47fa612d7698\",\"dweb:/ipfs/QmVnpr58oTMJdx1tRCJPCABfZCZY75VGo6TztwFM7hPDsQ\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Account/EIP1271Validator.sol": {
        "EIP1271Validator": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides a validation check on a signer contract that implements EIP-1271\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"https://github.com/ethereum/EIPs/issues/1271\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Account/EIP1271Validator.sol\":\"EIP1271Validator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Account/EIP1271Validator.sol\":{\"keccak256\":\"0xf20e72bde23d6b1543e7e79fdf021b65e26967c7d95662b09c6373e01049f476\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b3acec18907293ada18949ead31a020d448f6d8be55f9f8ac08d3be1cd5946d\",\"dweb:/ipfs/QmVWkMttMRxny1hyHoRvtzSdwBbxgTTWjMKck8zAU5h3Sn\"]},\"@brinkninja/core/contracts/Interfaces/IERC1271.sol\":{\"keccak256\":\"0xccdfc04dcee6c5610b9b06deba4b6e55e0c7713b3e3d6277973f84ffd457889e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f866c88c0749f303cb6a68df93df17aa973575f732300e3ecff1c48f5147c7d0\",\"dweb:/ipfs/QmdDJicRP95ov7hw6kaZCiDs7wA1EcXTax82kfZgXYZZbf\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol": {
        "EIP712SignerRecovery": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides signer address recovery for EIP-712 signed messages\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"https://github.com/ethereum/EIPs/pull/712\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol\":\"EIP712SignerRecovery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Account/ECDSA.sol\":{\"keccak256\":\"0xab2afc69f30e37bdd93becfb44abc8160e44e7cf9b4ee76fa86b64deac5e173d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://033351d52ff49364a466fba3babb24c8ebf34cddcb6f25069b6c47fa612d7698\",\"dweb:/ipfs/QmVnpr58oTMJdx1tRCJPCABfZCZY75VGo6TztwFM7hPDsQ\"]},\"@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol\":{\"keccak256\":\"0x2348325f509e8292fb37561f6f675ae5dde47da19c31c026b61125cbf2b91f5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d044a3ef8f897bc0e9d7667edbd8070f24b1adbb7f1861ed66c715384c4243ef\",\"dweb:/ipfs/QmfAFNPcqR87cNPZ4z1aamNC1GB3Mkci4nXLJhPxsqjjhM\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Deployers/SaltedDeployer.sol": {
        "SaltedDeployer": {
          "abi": [
            {
              "inputs": [],
              "name": "DeployFailed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "DeploymentExists",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "deployAddress",
                  "type": "address"
                }
              ],
              "name": "Deployed",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                }
              ],
              "name": "deploy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                }
              ],
              "name": "getDeployAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "deployAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610486806100206000396000f3fe608060405234801561001057600080fd5b50600436106100355760003560e01c80627743601461003a578063361ab6af146100e2575b600080fd5b6100e06004803603602081101561005057600080fd5b81019060208101813564010000000081111561006b57600080fd5b82018360208201111561007d57600080fd5b8035906020019184600183028401116401000000008311171561009f57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101a4945050505050565b005b610188600480360360208110156100f857600080fd5b81019060208101813564010000000081111561011357600080fd5b82018360208201111561012557600080fd5b8035906020019184600183028401116401000000008311171561014757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103dc945050505050565b604080516001600160a01b039092168252519081900360200190f35b610257610248828051602091820120604080517fff00000000000000000000000000000000000000000000000000000000000000818501527fce0042b868300000d44a59004da54a005ffdcf9f00000000000000000000000060218201527fd2a5b1e84cb7a6df481438c61ec4144631172d3d29b2a30fe7c5f0fbf4e517356035820152605580820193909352815180820390930183526075019052805191012090565b6001600160a01b03163b151590565b15610275576040516392b220f360e01b815260040160405180910390fd5b6040805163257b1f8160e11b81527fd2a5b1e84cb7a6df481438c61ec4144631172d3d29b2a30fe7c5f0fbf4e51735602482018190526004820192835283516044830152835160009373ce0042b868300000d44a59004da54a005ffdcf9f93634af63f02938793909291829160649091019060208601908083838c5b838110156103095781810151838201526020016102f1565b50505050905090810190601f1680156103365780820380516001836020036101000a031916815260200191505b5093505050506020604051808303816000875af115801561035b573d6000803e3d6000fd5b505050506040513d602081101561037157600080fd5b505190506001600160a01b03811661039c5760405163b4f5411160e01b815260040160405180910390fd5b604080516001600160a01b038316815290517ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e9181900360200190a15050565b8051602091820120604080517fff00000000000000000000000000000000000000000000000000000000000000818501527fce0042b868300000d44a59004da54a005ffdcf9f00000000000000000000000060218201527fd2a5b1e84cb7a6df481438c61ec4144631172d3d29b2a30fe7c5f0fbf4e51735603582015260558082019390935281518082039093018352607501905280519101209056fea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x774360 EQ PUSH2 0x3A JUMPI DUP1 PUSH4 0x361AB6AF EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1A4 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x3DC SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH2 0x248 DUP3 DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP6 ADD MSTORE PUSH32 0xCE0042B868300000D44A59004DA54A005FFDCF9F000000000000000000000000 PUSH1 0x21 DUP3 ADD MSTORE PUSH32 0xD2A5B1E84CB7A6DF481438C61EC4144631172D3D29B2A30FE7C5F0FBF4E51735 PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x75 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH4 0x92B220F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x257B1F81 PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0xD2A5B1E84CB7A6DF481438C61EC4144631172D3D29B2A30FE7C5F0FBF4E51735 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x0 SWAP4 PUSH20 0xCE0042B868300000D44A59004DA54A005FFDCF9F SWAP4 PUSH4 0x4AF63F02 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 SWAP2 DUP3 SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 DUP13 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x336 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH4 0xB4F54111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0xF40FCEC21964FFB566044D083B4073F29F7F7929110EA19E1B3EBE375D89055E SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP6 ADD MSTORE PUSH32 0xCE0042B868300000D44A59004DA54A005FFDCF9F000000000000000000000000 PUSH1 0x21 DUP3 ADD MSTORE PUSH32 0xD2A5B1E84CB7A6DF481438C61EC4144631172D3D29B2A30FE7C5F0FBF4E51735 PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x75 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "273:1614:5:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_isContract_600": {
                  "entryPoint": null,
                  "id": 600,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@deploy_586": {
                  "entryPoint": 420,
                  "id": 586,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@getDeployAddress_546": {
                  "entryPoint": 988,
                  "id": 546,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100355760003560e01c80627743601461003a578063361ab6af146100e2575b600080fd5b6100e06004803603602081101561005057600080fd5b81019060208101813564010000000081111561006b57600080fd5b82018360208201111561007d57600080fd5b8035906020019184600183028401116401000000008311171561009f57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101a4945050505050565b005b610188600480360360208110156100f857600080fd5b81019060208101813564010000000081111561011357600080fd5b82018360208201111561012557600080fd5b8035906020019184600183028401116401000000008311171561014757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103dc945050505050565b604080516001600160a01b039092168252519081900360200190f35b610257610248828051602091820120604080517fff00000000000000000000000000000000000000000000000000000000000000818501527fce0042b868300000d44a59004da54a005ffdcf9f00000000000000000000000060218201527fd2a5b1e84cb7a6df481438c61ec4144631172d3d29b2a30fe7c5f0fbf4e517356035820152605580820193909352815180820390930183526075019052805191012090565b6001600160a01b03163b151590565b15610275576040516392b220f360e01b815260040160405180910390fd5b6040805163257b1f8160e11b81527fd2a5b1e84cb7a6df481438c61ec4144631172d3d29b2a30fe7c5f0fbf4e51735602482018190526004820192835283516044830152835160009373ce0042b868300000d44a59004da54a005ffdcf9f93634af63f02938793909291829160649091019060208601908083838c5b838110156103095781810151838201526020016102f1565b50505050905090810190601f1680156103365780820380516001836020036101000a031916815260200191505b5093505050506020604051808303816000875af115801561035b573d6000803e3d6000fd5b505050506040513d602081101561037157600080fd5b505190506001600160a01b03811661039c5760405163b4f5411160e01b815260040160405180910390fd5b604080516001600160a01b038316815290517ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e9181900360200190a15050565b8051602091820120604080517fff00000000000000000000000000000000000000000000000000000000000000818501527fce0042b868300000d44a59004da54a005ffdcf9f00000000000000000000000060218201527fd2a5b1e84cb7a6df481438c61ec4144631172d3d29b2a30fe7c5f0fbf4e51735603582015260558082019390935281518082039093018352607501905280519101209056fea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x774360 EQ PUSH2 0x3A JUMPI DUP1 PUSH4 0x361AB6AF EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1A4 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x3DC SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH2 0x248 DUP3 DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP6 ADD MSTORE PUSH32 0xCE0042B868300000D44A59004DA54A005FFDCF9F000000000000000000000000 PUSH1 0x21 DUP3 ADD MSTORE PUSH32 0xD2A5B1E84CB7A6DF481438C61EC4144631172D3D29B2A30FE7C5F0FBF4E51735 PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x75 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH4 0x92B220F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x257B1F81 PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0xD2A5B1E84CB7A6DF481438C61EC4144631172D3D29B2A30FE7C5F0FBF4E51735 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x0 SWAP4 PUSH20 0xCE0042B868300000D44A59004DA54A005FFDCF9F SWAP4 PUSH4 0x4AF63F02 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 SWAP2 DUP3 SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 DUP13 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x336 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH4 0xB4F54111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0xF40FCEC21964FFB566044D083B4073F29F7F7929110EA19E1B3EBE375D89055E SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP6 ADD MSTORE PUSH32 0xCE0042B868300000D44A59004DA54A005FFDCF9F000000000000000000000000 PUSH1 0x21 DUP3 ADD MSTORE PUSH32 0xD2A5B1E84CB7A6DF481438C61EC4144631172D3D29B2A30FE7C5F0FBF4E51735 PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x75 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "273:1614:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1452:321:5;;-1:-1:-1;1452:321:5;;-1:-1:-1;;;;;1452:321:5:i;:::-;;1079:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1079:278:5;;-1:-1:-1;1079:278:5;;-1:-1:-1;;;;;1079:278:5:i;:::-;;;;-1:-1:-1;;;;;1079:278:5;;;;;;;;;;;;;;1452:321;1510:39;1522:26;1539:8;1276:19;;;;;;;1211:85;;;1228:12;1211:85;;;;;;;;;637:66;1211:85;;;;;;;;;;;;;;;;;;;;;;;;;;1194:108;;;;;;1079:278;1522:26;-1:-1:-1;;;;;1857:19:5;;:23;;;1777:108;1510:39;1506:85;;;1566:18;;-1:-1:-1;;;1566:18:5;;;;;;;;;;;1506:85;1620:40;;;-1:-1:-1;;;1620:40:5;;637:66;1620:40;;;;;;;;;;;;;;;;;;;;1596:21;;873:42;;1620:24;;1645:8;;637:66;;1620:40;;;;;;;;;;;;;;;1596:21;1620:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1620:40:5;;-1:-1:-1;;;;;;1670:27:5;;1666:69;;1714:14;;-1:-1:-1;;;1714:14:5;;;;;;;;;;;1666:69;1745:23;;;-1:-1:-1;;;;;1745:23:5;;;;;;;;;;;;;;;1500:273;1452:321;:::o;1079:278::-;1276:19;;;;;;;1211:85;;;1228:12;1211:85;;;;;;;;;637:66;1211:85;;;;;;;;;;;;;;;;;;;;;;;;;;1194:108;;;;;;1079:278::o"
            },
            "methodIdentifiers": {
              "deploy(bytes)": "00774360",
              "getDeployAddress(bytes)": "361ab6af"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DeployFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployAddress\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getDeployAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployAddress\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"DeployFailed()\":[{\"details\":\"Revert when SingletonFactory deploy returns 0 address\"}],\"DeploymentExists()\":[{\"details\":\"Revert when initCode is already deployed\"}]},\"events\":{\"Deployed(address)\":{\"details\":\"Emit when contract is deployed successfully\"}},\"kind\":\"dev\",\"methods\":{\"deploy(bytes)\":{\"details\":\"Deploys the contract with initCode\",\"params\":{\"initCode\":\"The initCode to deploy\"}},\"getDeployAddress(bytes)\":{\"details\":\"Computes the salted deploy address of contract with initCode\",\"returns\":{\"deployAddress\":\"Address where the contract with initCode will be deployed\"}}},\"stateVariables\":{\"SALT\":{\"details\":\"Salt used for salted deployments\"},\"SINGLETON_FACTORY\":{\"details\":\"Canonical SingletonFactory address\"}},\"title\":\"Deploys contracts using the canonical SingletonFactory and a hardcoded bytes32 salt. Includes custom events and errors.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Deployers/SaltedDeployer.sol\":\"SaltedDeployer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Deployers/SaltedDeployer.sol\":{\"keccak256\":\"0xb6d85dcdbaf22c03edbac2d03b3efe8dce077dd3f2255d8b950aeb4260b150db\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://777ced15487b77d3b13792f56ed00f9ebc75ffa1291fe0c21afcec5bd690f9af\",\"dweb:/ipfs/QmfYmQG4gEMbnUmRC7LfhAoSFqYPLpZwV3TeU9sXThcyv8\"]},\"@brinkninja/core/contracts/Interfaces/ISingletonFactory.sol\":{\"keccak256\":\"0x73e1b7dcba2f8e69564b2d2b78a14860001553be39511ad1d7da71ceac327c10\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1be69a6776937ecf9f163bc248e73fc4abbdc280fcd71594a03b97ea265a4efd\",\"dweb:/ipfs/QmfPwW7ESevMBawrnBkB5JSLGgZrnMjB6rDcxyJkhktiLH\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Interfaces/IERC1271.sol": {
        "IERC1271": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "isValidSignature",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "isValidSignature(bytes32,bytes)": "1626ba7e"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Interfaces/IERC1271.sol\":{\"keccak256\":\"0xccdfc04dcee6c5610b9b06deba4b6e55e0c7713b3e3d6277973f84ffd457889e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f866c88c0749f303cb6a68df93df17aa973575f732300e3ecff1c48f5147c7d0\",\"dweb:/ipfs/QmdDJicRP95ov7hw6kaZCiDs7wA1EcXTax82kfZgXYZZbf\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Interfaces/ISingletonFactory.sol": {
        "ISingletonFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "_initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "_salt",
                  "type": "bytes32"
                }
              ],
              "name": "deploy",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "createdContract",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deploy(bytes,bytes32)": "4af63f02"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"createdContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Interfaces/ISingletonFactory.sol\":\"ISingletonFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Interfaces/ISingletonFactory.sol\":{\"keccak256\":\"0x73e1b7dcba2f8e69564b2d2b78a14860001553be39511ad1d7da71ceac327c10\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1be69a6776937ecf9f163bc248e73fc4abbdc280fcd71594a03b97ea265a4efd\",\"dweb:/ipfs/QmfPwW7ESevMBawrnBkB5JSLGgZrnMjB6rDcxyJkhktiLH\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Test/AccountWithTestCalls.sol": {
        "AccountWithTestCalls": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "InvalidSignature",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotDelegateCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "name": "NotOwner",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "ExecutedTestCall",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "MockParamEvent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "mockInt",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "mockAddress",
                  "type": "address"
                }
              ],
              "name": "MockParamsEvent",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "delegateCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "externalCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "unsignedData",
                  "type": "bytes"
                }
              ],
              "name": "metaDelegateCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "unsignedData",
                  "type": "bytes"
                }
              ],
              "name": "metaDelegateCall_EIP1271",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "mockInt",
                  "type": "int24"
                },
                {
                  "internalType": "address",
                  "name": "mockAddress",
                  "type": "address"
                }
              ],
              "name": "testEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "testEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "forceRevert",
                  "type": "bool"
                }
              ],
              "name": "testRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "testStore",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "testTransferETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "delegateCall(address,bytes)": "56e7b7aa",
              "externalCall(uint256,address,bytes)": "bbfeeeb5",
              "metaDelegateCall(address,bytes,bytes,bytes)": "1f6f4202",
              "metaDelegateCall_EIP1271(address,bytes,bytes,bytes)": "2867a68d",
              "testEvent(uint256)": "dcd9c7fa",
              "testEvent(uint256,int24,address)": "6ea4b40d",
              "testRevert(bool)": "29d0bec0",
              "testStore(uint256)": "25a687bc",
              "testTransferETH(uint256,address)": "9e02f294"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDelegateCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ExecutedTestCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"MockParamEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"mockInt\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mockAddress\",\"type\":\"address\"}],\"name\":\"MockParamsEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"unsignedData\",\"type\":\"bytes\"}],\"name\":\"metaDelegateCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"unsignedData\",\"type\":\"bytes\"}],\"name\":\"metaDelegateCall_EIP1271\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"mockInt\",\"type\":\"int24\"},{\"internalType\":\"address\",\"name\":\"mockAddress\",\"type\":\"address\"}],\"name\":\"testEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"testEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"forceRevert\",\"type\":\"bool\"}],\"name\":\"testRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"testStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"testTransferETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidSignature(bytes32,bytes)\":[{\"details\":\"Revert if EIP1271 hash and signature is invalid\",\"params\":{\"hash\":\"Hash of the data to be validated\",\"signature\":\"Signature byte array associated with hash\"}}],\"NotDelegateCall()\":[{\"details\":\"Revert if the Account.sol implementation contract is called directly\"}],\"NotOwner(address)\":[{\"details\":\"Revert if signer of a transaction or EIP712 message signer is not the proxy owner\",\"params\":{\"signer\":\"The address that is not the owner\"}}]},\"kind\":\"dev\",\"methods\":{\"delegateCall(address,bytes)\":{\"details\":\"Makes a delegatecall to an external contract\",\"params\":{\"data\":\"Call data to execute\",\"to\":\"Address of the external contract to delegatecall\"}},\"externalCall(uint256,address,bytes)\":{\"details\":\"Makes a call to an external contractOnly executable directly by the proxy owner\",\"params\":{\"data\":\"Call data to execute\",\"to\":\"Address of the external contract to call\",\"value\":\"Amount of wei to send with the call\"}},\"metaDelegateCall(address,bytes,bytes,bytes)\":{\"details\":\"Allows execution of a delegatecall with a valid signature from the proxyOwner. Uses EIP-712 (https://github.com/ethereum/EIPs/pull/712) signer recovery.\",\"params\":{\"data\":\"Call data to include in the delegatecall, signed by the proxyOwner\",\"signature\":\"Signature of the proxyOwner\",\"to\":\"Address of the external contract to delegatecall, signed by the proxyOwner\",\"unsignedData\":\"Unsigned call data appended to the delegatecall\"}},\"metaDelegateCall_EIP1271(address,bytes,bytes,bytes)\":{\"details\":\"Allows execution of a delegatecall if proxyOwner is a smart contract. Uses EIP-1271 (https://eips.ethereum.org/EIPS/eip-1271) signer validation.\",\"params\":{\"data\":\"Call data to include in the delegatecall, validated by the proxyOwner contract\",\"signature\":\"Signature that will be validated by the proxyOwner contract\",\"to\":\"Address of the external contract to delegatecall, validated by the proxyOwner contract\",\"unsignedData\":\"Unsigned call data appended to the delegatecall\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"metaDelegateCall(address,bytes,bytes,bytes)\":{\"notice\":\"WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded `callData`. If the proxyOwner signs a delegatecall to a malicious contract, this could result in total loss of their account.\"},\"metaDelegateCall_EIP1271(address,bytes,bytes,bytes)\":{\"notice\":\"WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded `callData`. If the proxyOwner contract validates a delegatecall to a malicious contract, this could result in total loss of the account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Test/AccountWithTestCalls.sol\":\"AccountWithTestCalls\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Account/Account.sol\":{\"keccak256\":\"0xbe5ec06df0259ff1402de372166ef35f8a6fccf70fdda8e568eb51f266f0a4d7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387fdb06efb55f40c8240d627d743bfbcf7d36148b87a1ed2a9455940a45d69\",\"dweb:/ipfs/QmQ4QR5n5w3zqh4xz8t46kkFRCUcNyKRqM8v9ire8u7ubK\"]},\"@brinkninja/core/contracts/Account/ECDSA.sol\":{\"keccak256\":\"0xab2afc69f30e37bdd93becfb44abc8160e44e7cf9b4ee76fa86b64deac5e173d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://033351d52ff49364a466fba3babb24c8ebf34cddcb6f25069b6c47fa612d7698\",\"dweb:/ipfs/QmVnpr58oTMJdx1tRCJPCABfZCZY75VGo6TztwFM7hPDsQ\"]},\"@brinkninja/core/contracts/Account/EIP1271Validator.sol\":{\"keccak256\":\"0xf20e72bde23d6b1543e7e79fdf021b65e26967c7d95662b09c6373e01049f476\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b3acec18907293ada18949ead31a020d448f6d8be55f9f8ac08d3be1cd5946d\",\"dweb:/ipfs/QmVWkMttMRxny1hyHoRvtzSdwBbxgTTWjMKck8zAU5h3Sn\"]},\"@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol\":{\"keccak256\":\"0x2348325f509e8292fb37561f6f675ae5dde47da19c31c026b61125cbf2b91f5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d044a3ef8f897bc0e9d7667edbd8070f24b1adbb7f1861ed66c715384c4243ef\",\"dweb:/ipfs/QmfAFNPcqR87cNPZ4z1aamNC1GB3Mkci4nXLJhPxsqjjhM\"]},\"@brinkninja/core/contracts/Interfaces/IERC1271.sol\":{\"keccak256\":\"0xccdfc04dcee6c5610b9b06deba4b6e55e0c7713b3e3d6277973f84ffd457889e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f866c88c0749f303cb6a68df93df17aa973575f732300e3ecff1c48f5147c7d0\",\"dweb:/ipfs/QmdDJicRP95ov7hw6kaZCiDs7wA1EcXTax82kfZgXYZZbf\"]},\"@brinkninja/core/contracts/Test/AccountWithTestCalls.sol\":{\"keccak256\":\"0x98d5d935e3222b449b6512a371a66295fd7a437c40a9f590158eb833c31cd425\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6fb1157539cd790370091a29ea63a66f1485c8d25ebd47a022ad4b2ad8e450ed\",\"dweb:/ipfs/QmTsQefxbT8wgn6eCmUSVgNLWRMRw3Wiz6p8nUHc5o1WEv\"]},\"@brinkninja/core/contracts/Test/TestAccountCalls.sol\":{\"keccak256\":\"0xc5791396bbeea3b6ef33cb95d0967d782190d9f3b2b9cf323320dd9781850300\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://591a0b250c9b82a61f5e5e5027237f4a37e153b3f99df2d519d59bbd7eceecda\",\"dweb:/ipfs/QmUEkvWrmW8qPvpQbeWVhkhe2NHKzWFrjg5R7kbWwioq6S\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Test/TestAccountCalls.sol": {
        "TestAccountCalls": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [],
              "name": "ExecutedTestCall",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "MockParamEvent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "mockInt",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "mockAddress",
                  "type": "address"
                }
              ],
              "name": "MockParamsEvent",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "mockInt",
                  "type": "int24"
                },
                {
                  "internalType": "address",
                  "name": "mockAddress",
                  "type": "address"
                }
              ],
              "name": "testEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "testEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "forceRevert",
                  "type": "bool"
                }
              ],
              "name": "testRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "testStore",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "testTransferETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610328806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80636ea4b40d116100505780636ea4b40d146100c95780639e02f294146100fe578063dcd9c7fa1461012a57600080fd5b806325a687bc1461006c57806329d0bec0146100aa575b600080fd5b6100a86004803603602081101561008257600080fd5b50357f94a02aa970f44cb624bd9f8f6d45117d09bef87e3b6959977c67468c9517e9c855565b005b6100a8600480360360208110156100c057600080fd5b50351515610147565b6100a8600480360360608110156100df57600080fd5b50803590602081013560020b90604001356001600160a01b03166101d1565b6100a86004803603604081101561011457600080fd5b50803590602001356001600160a01b0316610221565b6100a86004803603602081101561014057600080fd5b50356102b8565b801561019a576040805162461bcd60e51b815260206004820152601a60248201527f546573744163636f756e7443616c6c733a207265766572746564000000000000604482015290519081900360640190fd5b6000805460ff191660011781556040517f662cb85973fdb79e2d2f4eeb5469a9d6d134907eda738447230622ac68d931189190a150565b60408051848152600284900b60208201526001600160a01b0383168183015290517f18755b9299299a84afaa61822309446b04383054bab38fba1511799ac7ac7c709181900360600190a1505050565b6040516000906001600160a01b0383169084908381818185875af1925050503d806000811461026c576040519150601f19603f3d011682016040523d82523d6000602084013e610271565b606091505b505080915050806102b35760405162461bcd60e51b815260040180806020018281038252602d8152602001806102ef602d913960400191505060405180910390fd5b505050565b6040805182815290517f22585f0c30ff0967db7d012d9ce509b18c6b8bc965f5ee791652a1b2c5d292379181900360200190a15056fe546573744163636f756e7443616c6c733a20746573745472616e736665724554482063616c6c206661696c6564a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EA4B40D GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x6EA4B40D EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x9E02F294 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xDCD9C7FA EQ PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x25A687BC EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x29D0BEC0 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0x94A02AA970F44CB624BD9F8F6D45117D09BEF87E3B6959977C67468C9517E9C8 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x147 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 SIGNEXTEND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x221 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546573744163636F756E7443616C6C733A207265766572746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x662CB85973FDB79E2D2F4EEB5469A9D6D134907EDA738447230622AC68D93118 SWAP2 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x2 DUP5 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x18755B9299299A84AFAA61822309446B04383054BAB38FBA1511799AC7AC7C70 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x271 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP2 POP POP DUP1 PUSH2 0x2B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EF PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x22585F0C30FF0967DB7D012D9CE509B18C6B8BC965F5EE791652A1B2C5D29237 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP INVALID SLOAD PUSH6 0x73744163636F PUSH22 0x6E7443616C6C733A20746573745472616E7366657245 SLOAD BASEFEE KECCAK256 PUSH4 0x616C6C20 PUSH7 0x61696C6564A164 PUSH20 0x6F6C634300080A000A0000000000000000000000 ",
              "sourceMap": "91:973:9:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@testEvent_711": {
                  "entryPoint": 696,
                  "id": 711,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@testEvent_727": {
                  "entryPoint": 465,
                  "id": 727,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@testRevert_675": {
                  "entryPoint": 327,
                  "id": 675,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@testStore_740": {
                  "entryPoint": null,
                  "id": 740,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@testTransferETH_701": {
                  "entryPoint": 545,
                  "id": 701,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100675760003560e01c80636ea4b40d116100505780636ea4b40d146100c95780639e02f294146100fe578063dcd9c7fa1461012a57600080fd5b806325a687bc1461006c57806329d0bec0146100aa575b600080fd5b6100a86004803603602081101561008257600080fd5b50357f94a02aa970f44cb624bd9f8f6d45117d09bef87e3b6959977c67468c9517e9c855565b005b6100a8600480360360208110156100c057600080fd5b50351515610147565b6100a8600480360360608110156100df57600080fd5b50803590602081013560020b90604001356001600160a01b03166101d1565b6100a86004803603604081101561011457600080fd5b50803590602001356001600160a01b0316610221565b6100a86004803603602081101561014057600080fd5b50356102b8565b801561019a576040805162461bcd60e51b815260206004820152601a60248201527f546573744163636f756e7443616c6c733a207265766572746564000000000000604482015290519081900360640190fd5b6000805460ff191660011781556040517f662cb85973fdb79e2d2f4eeb5469a9d6d134907eda738447230622ac68d931189190a150565b60408051848152600284900b60208201526001600160a01b0383168183015290517f18755b9299299a84afaa61822309446b04383054bab38fba1511799ac7ac7c709181900360600190a1505050565b6040516000906001600160a01b0383169084908381818185875af1925050503d806000811461026c576040519150601f19603f3d011682016040523d82523d6000602084013e610271565b606091505b505080915050806102b35760405162461bcd60e51b815260040180806020018281038252602d8152602001806102ef602d913960400191505060405180910390fd5b505050565b6040805182815290517f22585f0c30ff0967db7d012d9ce509b18c6b8bc965f5ee791652a1b2c5d292379181900360200190a15056fe546573744163636f756e7443616c6c733a20746573745472616e736665724554482063616c6c206661696c6564a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EA4B40D GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x6EA4B40D EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x9E02F294 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xDCD9C7FA EQ PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x25A687BC EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x29D0BEC0 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0x94A02AA970F44CB624BD9F8F6D45117D09BEF87E3B6959977C67468C9517E9C8 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x147 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 SIGNEXTEND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x221 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546573744163636F756E7443616C6C733A207265766572746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x662CB85973FDB79E2D2F4EEB5469A9D6D134907EDA738447230622AC68D93118 SWAP2 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x2 DUP5 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x18755B9299299A84AFAA61822309446B04383054BAB38FBA1511799AC7AC7C70 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x271 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP2 POP POP DUP1 PUSH2 0x2B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EF PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x22585F0C30FF0967DB7D012D9CE509B18C6B8BC965F5EE791652A1B2C5D29237 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP INVALID SLOAD PUSH6 0x73744163636F PUSH22 0x6E7443616C6C733A20746573745472616E7366657245 SLOAD BASEFEE KECCAK256 PUSH4 0x616C6C20 PUSH7 0x61696C6564A164 PUSH20 0x6F6C634300080A000A0000000000000000000000 ",
              "sourceMap": "91:973:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;920:142;;;;;;;;;;;;;;;;-1:-1:-1;920:142:9;987:21;1031;920:142;;;296:158;;;;;;;;;;;;;;;;-1:-1:-1;296:158:9;;;;:::i;770:146::-;;;;;;;;;;;;;;;;-1:-1:-1;770:146:9;;;;;;;;;;;;;-1:-1:-1;;;;;770:146:9;;:::i;458:217::-;;;;;;;;;;;;;;;;-1:-1:-1;458:217:9;;;;;;-1:-1:-1;;;;;458:217:9;;:::i;679:87::-;;;;;;;;;;;;;;;;-1:-1:-1;679:87:9;;:::i;296:158::-;358:11;357:12;349:51;;;;;-1:-1:-1;;;349:51:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:7;:14;;-1:-1:-1;;406:14:9;416:4;406:14;;;431:18;;;;406:7;431:18;296:158;:::o;770:146::-;864:47;;;;;;;;;;;;;;-1:-1:-1;;;;;864:47:9;;;;;;;;;;;;;;;;;770:146;;;:::o;458:217::-;566:33;;534:12;;-1:-1:-1;;;;;566:14:9;;;588:6;;534:12;566:33;534:12;566:33;588:6;566:14;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;552:47;;;;;613:7;605:65;;;;-1:-1:-1;;;605:65:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;528:147;458:217;;:::o;679:87::-;737:24;;;;;;;;;;;;;;;;;679:87;:::o"
            },
            "methodIdentifiers": {
              "testEvent(uint256)": "dcd9c7fa",
              "testEvent(uint256,int24,address)": "6ea4b40d",
              "testRevert(bool)": "29d0bec0",
              "testStore(uint256)": "25a687bc",
              "testTransferETH(uint256,address)": "9e02f294"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"ExecutedTestCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"MockParamEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"mockInt\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mockAddress\",\"type\":\"address\"}],\"name\":\"MockParamsEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"mockInt\",\"type\":\"int24\"},{\"internalType\":\"address\",\"name\":\"mockAddress\",\"type\":\"address\"}],\"name\":\"testEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"testEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"forceRevert\",\"type\":\"bool\"}],\"name\":\"testRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"testStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"testTransferETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Test/TestAccountCalls.sol\":\"TestAccountCalls\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Test/TestAccountCalls.sol\":{\"keccak256\":\"0xc5791396bbeea3b6ef33cb95d0967d782190d9f3b2b9cf323320dd9781850300\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://591a0b250c9b82a61f5e5e5027237f4a37e153b3f99df2d519d59bbd7eceecda\",\"dweb:/ipfs/QmUEkvWrmW8qPvpQbeWVhkhe2NHKzWFrjg5R7kbWwioq6S\"]}},\"version\":1}"
        }
      },
      "@brinkninja/core/contracts/Test/TestERC20.sol": {
        "TestERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_symbol",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "_decimals",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "_broken",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "breakMe",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_844": {
                  "entryPoint": null,
                  "id": 844,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 833,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:396:12",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:12",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "69:325:12",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "79:22:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "93:1:12",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "96:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:12:12"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "79:6:12"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "110:38:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "140:4:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "146:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "136:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "136:12:12"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "114:18:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "187:31:12",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "189:27:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "203:6:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "211:4:12",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "199:3:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "199:17:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "189:6:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:26:12"
                              },
                              "nodeType": "YulIf",
                              "src": "157:61:12"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "277:111:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "298:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "305:3:12",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "310:10:12",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "301:3:12"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "301:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "291:6:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "291:31:12"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "291:31:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "342:1:12",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "345:4:12",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "335:6:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "335:15:12"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "335:15:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "370:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "373:4:12",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "363:6:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "363:15:12"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "363:15:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "233:18:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "256:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "264:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:2:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "253:14:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:2:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:38:12"
                              },
                              "nodeType": "YulIf",
                              "src": "227:161:12"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "49:4:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "58:6:12",
                            "type": ""
                          }
                        ],
                        "src": "14:380:12"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
                  "id": 12,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040526003805460ff191660121790553480156200001e57600080fd5b50604051620011d7380380620011d7833981810160405260608110156200004457600080fd5b81019080805160405193929190846401000000008211156200006557600080fd5b9083019060208201858111156200007b57600080fd5b82516401000000008111828201881017156200009657600080fd5b82525081516020918201929091019080838360005b83811015620000c5578181015183820152602001620000ab565b50505050905090810190601f168015620000f35780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011757600080fd5b9083019060208201858111156200012d57600080fd5b82516401000000008111828201881017156200014857600080fd5b82525081516020918201929091019080838360005b83811015620001775781810151838201526020016200015d565b50505050905090810190601f168015620001a55780820380516001836020036101000a031916815260200191505b506040818152602092830151875188850190812084840184526001808652603160f81b9587019590955283517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880152808501919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a0808401919091528551808403909101815260c0909201909452805195019490942060075587519095509093506200026692906200029b565b5082516200027c9060029060208601906200029b565b50506003805460ff191660ff92909216919091179055506200037e9050565b828054620002a99062000341565b90600052602060002090601f016020900481019282620002cd576000855562000318565b82601f10620002e857805160ff191683800117855562000318565b8280016001018555821562000318579182015b8281111562000318578251825591602001919060010190620002fb565b50620003269291506200032a565b5090565b5b808211156200032657600081556001016200032b565b600181811c908216806200035657607f821691505b602082108114156200037857634e487b7160e01b600052602260045260246000fd5b50919050565b610e49806200038e6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80636da309a7116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb14610368578063d505accf14610394578063dd62ed3e146103e557600080fd5b806395d89b41146103345780639dc29fac1461033c57600080fd5b80636da309a7146102af57806370a08231146102c15780637ecebe00146102f4578063935e5e4a1461032757600080fd5b806330adf81f116100ee57806330adf81f1461022e578063313ce567146102555780633644e5151461027857806340c10f191461028157600080fd5b806306fdde0314610120578063095ea7b31461019d57806318160ddd146101dd57806323b872dd146101f8575b600080fd5b610128610429565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016257818101518382015260200161014a565b50505050905090810190601f16801561018f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c9600480360360408110156101b357600080fd5b506001600160a01b0381351690602001356104b7565b604080519115158252519081900360200190f35b6101e660045481565b60408051918252519081900360200190f35b6101c96004803603606081101561020e57600080fd5b506001600160a01b038135811691602081013590911690604001356104cd565b6101e67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6003546102629060ff1681565b6040805160ff9092168252519081900360200190f35b6101e660075481565b6102ad6004803603604081101561029757600080fd5b506001600160a01b03813516906020013561055c565b005b6102ad6000805460ff19166001179055565b6101e6600480360360208110156102d757600080fd5b506005602052356001600160a01b03166000908152604090205481565b6101e66004803603602081101561030a57600080fd5b506008602052356001600160a01b03166000908152604090205481565b6000546101c99060ff1681565b610128610640565b6102ad6004803603604081101561035257600080fd5b506001600160a01b03813516906020013561064d565b6101c96004803603604081101561037e57600080fd5b506001600160a01b03813516906020013561071d565b6102ad600480360360e08110156103aa57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561072a565b6101e6600480360360408110156103fb57600080fd5b50600660209081526001600160a01b0382358116600090815260408082208452929093013516825290205481565b6001805461043690610c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461046290610c5a565b80156104af5780601f10610484576101008083540402835291602001916104af565b820191906000526020600020905b81548152906001019060200180831161049257829003601f168201915b505050505081565b60006104c4338484610967565b50600192915050565b60006104da848484610a95565b6001600160a01b03841660009081526006602090815260408083203384529091529020548281101561053d5760405162461bcd60e51b815260040180806020018281038252602b815260200180610e12602b913960400191505060405180910390fd5b610551853361054c8685610cab565b610967565b506001949350505050565b6001600160a01b0382166105b7576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b80600460008282546105c99190610cc2565b90915550506001600160a01b038216600090815260056020526040812080548392906105f6908490610cc2565b90915550506040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6002805461043690610c5a565b6001600160a01b0382166106925760405162461bcd60e51b8152600401808060200182810382526021815260200180610d856021913960400191505060405180910390fd5b6001600160a01b038216600090815260056020526040812080548392906106ba908490610cab565b9250508190555080600460008282546106d39190610cab565b90915550506040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006104c4338484610a95565b4284101561077f576040805162461bcd60e51b815260206004820152600760248201527f4558504952454400000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6007546001600160a01b038816600090815260086020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876107d283610cda565b919050558a60405160200180878152602001866001600160a01b03168152602001856001600160a01b03168152602001848152602001838152602001828152602001965050505050505060405160208183030381529060405280519060200120604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156108ca573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906109005750886001600160a01b0316816001600160a01b0316145b610951576040805162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015290519081900360640190fd5b61095c898989610967565b505050505050505050565b60005460ff16156109a95760405162461bcd60e51b8152600401808060200182810382526023815260200180610dcb6023913960400191505060405180910390fd5b6001600160a01b0383166109ee5760405162461bcd60e51b8152600401808060200182810382526024815260200180610dee6024913960400191505060405180910390fd5b6001600160a01b038216610a335760405162461bcd60e51b8152600401808060200182810382526022815260200180610d196022913960400191505060405180910390fd5b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60005460ff1615610ad75760405162461bcd60e51b8152600401808060200182810382526024815260200180610d3b6024913960400191505060405180910390fd5b6001600160a01b038316610b1c5760405162461bcd60e51b8152600401808060200182810382526025815260200180610da66025913960400191505060405180910390fd5b6001600160a01b038216610b615760405162461bcd60e51b8152600401808060200182810382526023815260200180610cf66023913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902054811115610bb85760405162461bcd60e51b8152600401808060200182810382526026815260200180610d5f6026913960400191505060405180910390fd5b6001600160a01b03831660009081526005602052604081208054839290610be0908490610cab565b90915550506001600160a01b03821660009081526005602052604081208054839290610c0d908490610cc2565b90915550506040805182815290516001600160a01b0380851692908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505050565b600181811c90821680610c6e57607f821691505b60208210811415610c8f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610cbd57610cbd610c95565b500390565b60008219821115610cd557610cd5610c95565b500190565b6000600019821415610cee57610cee610c95565b506001019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573735465737445524332302e5f7472616e736665723a20546f6b656e2069732062726f6b656e45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573735465737445524332302e5f617070726f76653a20546f6b656e2069732062726f6b656e45524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735465737445524332303a207472616e736665722076616c7565206578636565647320616c6c6f77616e6365a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11D7 CODESIZE SUB DUP1 PUSH3 0x11D7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xAB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x177 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x15D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1A5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD DUP8 MLOAD DUP9 DUP6 ADD SWAP1 DUP2 KECCAK256 DUP5 DUP5 ADD DUP5 MSTORE PUSH1 0x1 DUP1 DUP7 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP6 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 DUP9 ADD MSTORE DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP5 MSTORE DUP1 MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 KECCAK256 PUSH1 0x7 SSTORE DUP8 MLOAD SWAP1 SWAP6 POP SWAP1 SWAP4 POP PUSH3 0x266 SWAP3 SWAP1 PUSH3 0x29B JUMP JUMPDEST POP DUP3 MLOAD PUSH3 0x27C SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x29B JUMP JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x37E SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2A9 SWAP1 PUSH3 0x341 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2CD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x318 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2E8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x318 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x318 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x318 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2FB JUMP JUMPDEST POP PUSH3 0x326 SWAP3 SWAP2 POP PUSH3 0x32A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x326 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x32B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x356 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x378 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE49 DUP1 PUSH3 0x38E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DA309A7 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6DA309A7 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x935E5E4A EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x162 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x1E6 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x262 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 PUSH1 0x20 MSTORE CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 PUSH1 0x20 MSTORE CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1C9 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x64D JUMP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x71D JUMP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x72A JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 MSTORE SWAP3 SWAP1 SWAP4 ADD CALLDATALOAD AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x436 SWAP1 PUSH2 0xC5A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x462 SWAP1 PUSH2 0xC5A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x484 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x492 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4 CALLER DUP5 DUP5 PUSH2 0x967 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA DUP5 DUP5 DUP5 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE12 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x551 DUP6 CALLER PUSH2 0x54C DUP7 DUP6 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x5F6 SWAP1 DUP5 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x436 SWAP1 PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD85 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6BA SWAP1 DUP5 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4 CALLER DUP5 DUP5 PUSH2 0xA95 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4558504952454400000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP12 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 DUP8 PUSH2 0x7D2 DUP4 PUSH2 0xCDA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x900 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x95C DUP10 DUP10 DUP10 PUSH2 0x967 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDCB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDEE PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD19 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD3B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDA6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCF6 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD5F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xBE0 SWAP1 DUP5 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC0D SWAP1 DUP5 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC6E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCBD JUMPI PUSH2 0xCBD PUSH2 0xC95 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD5 PUSH2 0xC95 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xCEE JUMPI PUSH2 0xCEE PUSH2 0xC95 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573735465737445524332302E5F7472616E73 PUSH7 0x65723A20546F6B PUSH6 0x6E2069732062 PUSH19 0x6F6B656E45524332303A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735465737445524332302E5F617070726F PUSH23 0x653A20546F6B656E2069732062726F6B656E4552433230 GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 SLOAD PUSH6 0x737445524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722076616C75652065786365656473 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E6365A164736F6C634300080A00 EXP ",
              "sourceMap": "91:3742:10:-:0;;;184:26;;;-1:-1:-1;;184:26:10;208:2;184:26;;;797:486;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;797:486:10;;;;;;;;;;-1:-1:-1;797:486:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;797:486:10;;;;;;;;;;-1:-1:-1;797:486:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;797:486:10;;;;;;;;;1104:23;;;;;;;;1147:10;;;;;;;;;-1:-1:-1;;;1147:10:10;;;;;;;979:227;;999:95;979:227;;;;;;;;;;;1137:21;979:227;;;;923:9;979:227;;;;;;1193:4;979:227;;;;;;;;;;;;;;;;;;;;;;;;;962:250;;;;;;;;943:16;:269;1218:12;;797:486;;-1:-1:-1;923:9:10;;-1:-1:-1;1218:12:10;;1104:23;1218:12;:::i;:::-;-1:-1:-1;1236:16:10;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;;1258:8:10;:20;;-1:-1:-1;;1258:20:10;;;;;;;;;;;;-1:-1:-1;91:3742:10;;-1:-1:-1;91:3742:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;91:3742:10;;;-1:-1:-1;91:3742:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:12;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;91:3742:10;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@DOMAIN_SEPARATOR_767": {
                  "entryPoint": null,
                  "id": 767,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PERMIT_TYPEHASH_770": {
                  "entryPoint": null,
                  "id": 770,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_approve_1138": {
                  "entryPoint": 2407,
                  "id": 1138,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_broken_746": {
                  "entryPoint": null,
                  "id": 746,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_transfer_1201": {
                  "entryPoint": 2709,
                  "id": 1201,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@allowance_765": {
                  "entryPoint": null,
                  "id": 765,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@approve_945": {
                  "entryPoint": 1207,
                  "id": 945,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_759": {
                  "entryPoint": null,
                  "id": 759,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@breakMe_852": {
                  "entryPoint": null,
                  "id": 852,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@burn_926": {
                  "entryPoint": 1613,
                  "id": 926,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@decimals_753": {
                  "entryPoint": null,
                  "id": 753,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@mint_889": {
                  "entryPoint": 1372,
                  "id": 889,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@name_748": {
                  "entryPoint": 1065,
                  "id": 748,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@nonces_774": {
                  "entryPoint": null,
                  "id": 774,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@permit_1088": {
                  "entryPoint": 1834,
                  "id": 1088,
                  "parameterSlots": 7,
                  "returnSlots": 0
                },
                "@symbol_750": {
                  "entryPoint": 1600,
                  "id": 750,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@totalSupply_755": {
                  "entryPoint": null,
                  "id": 755,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferFrom_1009": {
                  "entryPoint": 1229,
                  "id": 1009,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transfer_964": {
                  "entryPoint": 1821,
                  "id": 964,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 3266,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 3243,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 3162,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 3290,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3221,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:931:12",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:12",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "69:325:12",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "79:22:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "93:1:12",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "96:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:12:12"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "79:6:12"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "110:38:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "140:4:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "146:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "136:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "136:12:12"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "114:18:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "187:31:12",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "189:27:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "203:6:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "211:4:12",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "199:3:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "199:17:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "189:6:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:26:12"
                              },
                              "nodeType": "YulIf",
                              "src": "157:61:12"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "277:111:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "298:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "305:3:12",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "310:10:12",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "301:3:12"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "301:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "291:6:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "291:31:12"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "291:31:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "342:1:12",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "345:4:12",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "335:6:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "335:15:12"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "335:15:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "370:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "373:4:12",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "363:6:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "363:15:12"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "363:15:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "233:18:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "256:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "264:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:2:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "253:14:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:2:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:38:12"
                              },
                              "nodeType": "YulIf",
                              "src": "227:161:12"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "49:4:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "58:6:12",
                            "type": ""
                          }
                        ],
                        "src": "14:380:12"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "431:95:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "448:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "455:3:12",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "460:10:12",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "451:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "451:20:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "441:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "441:31:12"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "441:31:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "488:1:12",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "491:4:12",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "481:15:12"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "481:15:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "512:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "515:4:12",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "505:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "505:15:12"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "505:15:12"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "399:127:12"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "580:76:12",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "602:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "604:16:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "604:18:12"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "604:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "596:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "599:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "593:2:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "593:8:12"
                              },
                              "nodeType": "YulIf",
                              "src": "590:34:12"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "633:17:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "645:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "648:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "641:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "641:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "633:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "562:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "565:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "571:4:12",
                            "type": ""
                          }
                        ],
                        "src": "531:125:12"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "709:80:12",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "736:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "738:16:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "738:18:12"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "738:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "725:1:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "732:1:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "728:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "728:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "722:2:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "722:13:12"
                              },
                              "nodeType": "YulIf",
                              "src": "719:39:12"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "767:16:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "778:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "781:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "774:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "774:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:3:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "692:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "695:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "701:3:12",
                            "type": ""
                          }
                        ],
                        "src": "661:128:12"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "841:88:12",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "872:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "874:16:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "874:18:12"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "874:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:5:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "868:1:12",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "864:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "864:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "854:2:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "854:17:12"
                              },
                              "nodeType": "YulIf",
                              "src": "851:43:12"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "903:20:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "914:5:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "921:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "910:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "910:13:12"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "903:3:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "823:5:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "833:3:12",
                            "type": ""
                          }
                        ],
                        "src": "794:135:12"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
                  "id": 12,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061011b5760003560e01c80636da309a7116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb14610368578063d505accf14610394578063dd62ed3e146103e557600080fd5b806395d89b41146103345780639dc29fac1461033c57600080fd5b80636da309a7146102af57806370a08231146102c15780637ecebe00146102f4578063935e5e4a1461032757600080fd5b806330adf81f116100ee57806330adf81f1461022e578063313ce567146102555780633644e5151461027857806340c10f191461028157600080fd5b806306fdde0314610120578063095ea7b31461019d57806318160ddd146101dd57806323b872dd146101f8575b600080fd5b610128610429565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016257818101518382015260200161014a565b50505050905090810190601f16801561018f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c9600480360360408110156101b357600080fd5b506001600160a01b0381351690602001356104b7565b604080519115158252519081900360200190f35b6101e660045481565b60408051918252519081900360200190f35b6101c96004803603606081101561020e57600080fd5b506001600160a01b038135811691602081013590911690604001356104cd565b6101e67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6003546102629060ff1681565b6040805160ff9092168252519081900360200190f35b6101e660075481565b6102ad6004803603604081101561029757600080fd5b506001600160a01b03813516906020013561055c565b005b6102ad6000805460ff19166001179055565b6101e6600480360360208110156102d757600080fd5b506005602052356001600160a01b03166000908152604090205481565b6101e66004803603602081101561030a57600080fd5b506008602052356001600160a01b03166000908152604090205481565b6000546101c99060ff1681565b610128610640565b6102ad6004803603604081101561035257600080fd5b506001600160a01b03813516906020013561064d565b6101c96004803603604081101561037e57600080fd5b506001600160a01b03813516906020013561071d565b6102ad600480360360e08110156103aa57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561072a565b6101e6600480360360408110156103fb57600080fd5b50600660209081526001600160a01b0382358116600090815260408082208452929093013516825290205481565b6001805461043690610c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461046290610c5a565b80156104af5780601f10610484576101008083540402835291602001916104af565b820191906000526020600020905b81548152906001019060200180831161049257829003601f168201915b505050505081565b60006104c4338484610967565b50600192915050565b60006104da848484610a95565b6001600160a01b03841660009081526006602090815260408083203384529091529020548281101561053d5760405162461bcd60e51b815260040180806020018281038252602b815260200180610e12602b913960400191505060405180910390fd5b610551853361054c8685610cab565b610967565b506001949350505050565b6001600160a01b0382166105b7576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b80600460008282546105c99190610cc2565b90915550506001600160a01b038216600090815260056020526040812080548392906105f6908490610cc2565b90915550506040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6002805461043690610c5a565b6001600160a01b0382166106925760405162461bcd60e51b8152600401808060200182810382526021815260200180610d856021913960400191505060405180910390fd5b6001600160a01b038216600090815260056020526040812080548392906106ba908490610cab565b9250508190555080600460008282546106d39190610cab565b90915550506040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60006104c4338484610a95565b4284101561077f576040805162461bcd60e51b815260206004820152600760248201527f4558504952454400000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6007546001600160a01b038816600090815260086020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876107d283610cda565b919050558a60405160200180878152602001866001600160a01b03168152602001856001600160a01b03168152602001848152602001838152602001828152602001965050505050505060405160208183030381529060405280519060200120604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156108ca573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906109005750886001600160a01b0316816001600160a01b0316145b610951576040805162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015290519081900360640190fd5b61095c898989610967565b505050505050505050565b60005460ff16156109a95760405162461bcd60e51b8152600401808060200182810382526023815260200180610dcb6023913960400191505060405180910390fd5b6001600160a01b0383166109ee5760405162461bcd60e51b8152600401808060200182810382526024815260200180610dee6024913960400191505060405180910390fd5b6001600160a01b038216610a335760405162461bcd60e51b8152600401808060200182810382526022815260200180610d196022913960400191505060405180910390fd5b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60005460ff1615610ad75760405162461bcd60e51b8152600401808060200182810382526024815260200180610d3b6024913960400191505060405180910390fd5b6001600160a01b038316610b1c5760405162461bcd60e51b8152600401808060200182810382526025815260200180610da66025913960400191505060405180910390fd5b6001600160a01b038216610b615760405162461bcd60e51b8152600401808060200182810382526023815260200180610cf66023913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902054811115610bb85760405162461bcd60e51b8152600401808060200182810382526026815260200180610d5f6026913960400191505060405180910390fd5b6001600160a01b03831660009081526005602052604081208054839290610be0908490610cab565b90915550506001600160a01b03821660009081526005602052604081208054839290610c0d908490610cc2565b90915550506040805182815290516001600160a01b0380851692908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505050565b600181811c90821680610c6e57607f821691505b60208210811415610c8f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610cbd57610cbd610c95565b500390565b60008219821115610cd557610cd5610c95565b500190565b6000600019821415610cee57610cee610c95565b506001019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573735465737445524332302e5f7472616e736665723a20546f6b656e2069732062726f6b656e45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573735465737445524332302e5f617070726f76653a20546f6b656e2069732062726f6b656e45524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735465737445524332303a207472616e736665722076616c7565206578636565647320616c6c6f77616e6365a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DA309A7 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6DA309A7 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x935E5E4A EQ PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x162 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x1E6 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x262 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 PUSH1 0x20 MSTORE CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 PUSH1 0x20 MSTORE CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1C9 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x640 JUMP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x64D JUMP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x71D JUMP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x72A JUMP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 MSTORE SWAP3 SWAP1 SWAP4 ADD CALLDATALOAD AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x436 SWAP1 PUSH2 0xC5A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x462 SWAP1 PUSH2 0xC5A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x484 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x492 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4 CALLER DUP5 DUP5 PUSH2 0x967 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA DUP5 DUP5 DUP5 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE12 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x551 DUP6 CALLER PUSH2 0x54C DUP7 DUP6 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x5F6 SWAP1 DUP5 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x436 SWAP1 PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD85 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6BA SWAP1 DUP5 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4 CALLER DUP5 DUP5 PUSH2 0xA95 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4558504952454400000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP12 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 DUP8 PUSH2 0x7D2 DUP4 PUSH2 0xCDA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x900 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4154555245000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x95C DUP10 DUP10 DUP10 PUSH2 0x967 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDCB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDEE PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD19 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD3B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDA6 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCF6 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD5F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xBE0 SWAP1 DUP5 SWAP1 PUSH2 0xCAB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC0D SWAP1 DUP5 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC6E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCBD JUMPI PUSH2 0xCBD PUSH2 0xC95 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD5 PUSH2 0xC95 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xCEE JUMPI PUSH2 0xCEE PUSH2 0xC95 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x6573735465737445524332302E5F7472616E73 PUSH7 0x65723A20546F6B PUSH6 0x6E2069732062 PUSH19 0x6F6B656E45524332303A207472616E73666572 KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573735465737445524332302E5F617070726F PUSH23 0x653A20546F6B656E2069732062726F6B656E4552433230 GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 SLOAD PUSH6 0x737445524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722076616C75652065786365656473 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E6365A164736F6C634300080A00 EXP ",
              "sourceMap": "91:3742:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;138:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1792:134;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1792:134:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;215:24;;;;;;;;;;;;;;;;;;;;;;2060:345;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2060:345:10;;;;;;;;;;;;;;;;;:::i;491:108::-;;533:66;491:108;;184:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;354:31;;;;;;1344:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1344:215:10;;;;;;;;:::i;:::-;;1287:53;;1321:7;:14;;-1:-1:-1;;1321:14:10;1331:4;1321:14;;;1287:53;243:41;;;;;;;;;;;;;;;;-1:-1:-1;243:41:10;;;;-1:-1:-1;;;;;243:41:10;;;;;;;;;;;603:38;;;;;;;;;;;;;;;;-1:-1:-1;603:38:10;;;;-1:-1:-1;;;;;603:38:10;;;;;;;;;;;114:19;;;;;;;;;160:20;;;:::i;1563:225::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1563:225:10;;;;;;;;:::i;1930:126::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1930:126:10;;;;;;;;:::i;2409:594::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2409:594:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;288:61::-;;;;;;;;;;;;;;;;-1:-1:-1;288:61:10;;;;;-1:-1:-1;;;;;288:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;138:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1792:134::-;1856:4;1868:36;1877:10;1889:7;1898:5;1868:8;:36::i;:::-;-1:-1:-1;1917:4:10;1792:134;;;;:::o;2060:345::-;2138:4;2150:26;2160:4;2166:2;2170:5;2150:9;:26::i;:::-;-1:-1:-1;;;;;2210:15:10;;2183:24;2210:15;;;:9;:15;;;;;;;;2226:10;2210:27;;;;;;;;2251:25;;;;2243:81;;;;-1:-1:-1;;;2243:81:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2330:52;2339:4;2345:10;2357:24;2376:5;2357:16;:24;:::i;:::-;2330:8;:52::i;:::-;-1:-1:-1;2396:4:10;;2060:345;-1:-1:-1;;;;2060:345:10:o;1344:215::-;-1:-1:-1;;;;;1405:16:10;;1397:60;;;;;-1:-1:-1;;;1397:60:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1479:5;1464:11;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;1490:13:10;;;;;;:9;:13;;;;;:22;;1507:5;;1490:13;:22;;1507:5;;1490:22;:::i;:::-;;;;-1:-1:-1;;1523:31:10;;;;;;;;-1:-1:-1;;;;;1523:31:10;;;1540:1;;1523:31;;;;;;;;;1344:215;;:::o;160:20::-;;;;;;;:::i;1563:225::-;-1:-1:-1;;;;;1626:18:10;;1618:64;;;;-1:-1:-1;;;1618:64:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1689:15:10;;;;;;:9;:15;;;;;:24;;1708:5;;1689:15;:24;;1708:5;;1689:24;:::i;:::-;;;;;;;;1734:5;1719:11;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;1750:33:10;;;;;;;;1773:1;;-1:-1:-1;;;;;1750:33:10;;;;;;;;;;;;1563:225;;:::o;1930:126::-;1990:4;2002:32;2012:10;2024:2;2028:5;2002:9;:32::i;2409:594::-;2550:15;2538:8;:27;;2530:47;;;;;-1:-1:-1;;;2530:47:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;2673:16;;-1:-1:-1;;;;;2764:13:10;;2583:14;2764:13;;;:6;:13;;;;;:15;;2583:14;;2673:16;533:66;;2741:5;;2748:7;;2757:5;;2764:15;2583:14;2764:15;;;:::i;:::-;;;;;2781:8;2713:77;;;;;;;;;;;-1:-1:-1;;;;;2713:77:10;;;;;;-1:-1:-1;;;;;2713:77:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2703:88;;;;;;2619:182;;;;;;-1:-1:-1;;;2619:182:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2600:207;;;;;;2583:224;;2813:24;2840:26;2850:6;2858:1;2861;2864;2840:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2840:26:10;;-1:-1:-1;;2840:26:10;;;-1:-1:-1;;;;;;;2880:30:10;;;;;;:59;;;2934:5;-1:-1:-1;;;;;2914:25:10;:16;-1:-1:-1;;;;;2914:25:10;;2880:59;2872:89;;;;;-1:-1:-1;;;2872:89:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;2967:31;2976:5;2983:7;2992:5;2967:8;:31::i;:::-;2524:479;;2409:594;;;;;;;:::o;3007:367::-;3092:7;;;;3091:8;3083:56;;;;-1:-1:-1;;;3083:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3153:19:10;;3145:68;;;;-1:-1:-1;;;3145:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3227:21:10;;3219:68;;;;-1:-1:-1;;;3219:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3294:16:10;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;3338:31;;;;;;;;;;;;;;;;;3007:367;;;:::o;3378:453::-;3458:7;;;;3457:8;3449:57;;;;-1:-1:-1;;;3449:57:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3520:18:10;;3512:68;;;;-1:-1:-1;;;3512:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3594:16:10;;3586:64;;;;-1:-1:-1;;;3586:64:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3664:15:10;;;;;;:9;:15;;;;;;:24;-1:-1:-1;3664:24:10;3656:75;;;;-1:-1:-1;;;3656:75:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3738:15:10;;;;;;:9;:15;;;;;:24;;3757:5;;3738:15;:24;;3757:5;;3738:24;:::i;:::-;;;;-1:-1:-1;;;;;;;3768:13:10;;;;;;:9;:13;;;;;:22;;3785:5;;3768:13;:22;;3785:5;;3768:22;:::i;:::-;;;;-1:-1:-1;;3801:25:10;;;;;;;;-1:-1:-1;;;;;3801:25:10;;;;;;;;;;;;;;;;;3378:453;;;:::o;14:380:12:-;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;399:127::-;460:10;455:3;451:20;448:1;441:31;491:4;488:1;481:15;515:4;512:1;505:15;531:125;571:4;599:1;596;593:8;590:34;;;604:18;;:::i;:::-;-1:-1:-1;641:9:12;;531:125::o;661:128::-;701:3;732:1;728:6;725:1;722:13;719:39;;;738:18;;:::i;:::-;-1:-1:-1;774:9:12;;661:128::o;794:135::-;833:3;-1:-1:-1;;854:17:12;;851:43;;;874:18;;:::i;:::-;-1:-1:-1;921:1:12;910:13;;794:135::o"
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "_broken()": "935e5e4a",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "breakMe()": "6da309a7",
              "burn(address,uint256)": "9dc29fac",
              "decimals()": "313ce567",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_broken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"breakMe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@brinkninja/core/contracts/Test/TestERC20.sol\":\"TestERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Test/TestERC20.sol\":{\"keccak256\":\"0xff0c8c4aac1d2048355ae853185d88140d8868c20796b079f8018181443593d3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ba2576fdc9d63dd64bbcf13f3c889f426e4563005e3e9b8a81de2a9fae9205dc\",\"dweb:/ipfs/QmZ3CnDkUMwpgajmmhBRJswao2NJyZoZAHVaeir6vKyj4c\"]}},\"version\":1}"
        }
      },
      "contracts/Test/Imports.sol": {
        "Imports": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50601680601d6000396000f3fe6080604052600080fdfea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x16 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "402:20:11:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "402:20:11:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test/Imports.sol\":\"Imports\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@brinkninja/core/contracts/Account/Account.sol\":{\"keccak256\":\"0xbe5ec06df0259ff1402de372166ef35f8a6fccf70fdda8e568eb51f266f0a4d7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387fdb06efb55f40c8240d627d743bfbcf7d36148b87a1ed2a9455940a45d69\",\"dweb:/ipfs/QmQ4QR5n5w3zqh4xz8t46kkFRCUcNyKRqM8v9ire8u7ubK\"]},\"@brinkninja/core/contracts/Account/AccountFactory.sol\":{\"keccak256\":\"0xecc5b2bb62c369f0184e32d50453e279a79535c44164ae88bf7516c7d6b14568\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://41c9dbc0613e63f14177b9f6ce9040db44fb7ac250a1bd2b624e938b5096808e\",\"dweb:/ipfs/QmWCZidpP7Jx692hpF2qcsUnSQCKxCdSg5nbCSqeZm933j\"]},\"@brinkninja/core/contracts/Account/ECDSA.sol\":{\"keccak256\":\"0xab2afc69f30e37bdd93becfb44abc8160e44e7cf9b4ee76fa86b64deac5e173d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://033351d52ff49364a466fba3babb24c8ebf34cddcb6f25069b6c47fa612d7698\",\"dweb:/ipfs/QmVnpr58oTMJdx1tRCJPCABfZCZY75VGo6TztwFM7hPDsQ\"]},\"@brinkninja/core/contracts/Account/EIP1271Validator.sol\":{\"keccak256\":\"0xf20e72bde23d6b1543e7e79fdf021b65e26967c7d95662b09c6373e01049f476\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b3acec18907293ada18949ead31a020d448f6d8be55f9f8ac08d3be1cd5946d\",\"dweb:/ipfs/QmVWkMttMRxny1hyHoRvtzSdwBbxgTTWjMKck8zAU5h3Sn\"]},\"@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol\":{\"keccak256\":\"0x2348325f509e8292fb37561f6f675ae5dde47da19c31c026b61125cbf2b91f5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d044a3ef8f897bc0e9d7667edbd8070f24b1adbb7f1861ed66c715384c4243ef\",\"dweb:/ipfs/QmfAFNPcqR87cNPZ4z1aamNC1GB3Mkci4nXLJhPxsqjjhM\"]},\"@brinkninja/core/contracts/Deployers/SaltedDeployer.sol\":{\"keccak256\":\"0xb6d85dcdbaf22c03edbac2d03b3efe8dce077dd3f2255d8b950aeb4260b150db\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://777ced15487b77d3b13792f56ed00f9ebc75ffa1291fe0c21afcec5bd690f9af\",\"dweb:/ipfs/QmfYmQG4gEMbnUmRC7LfhAoSFqYPLpZwV3TeU9sXThcyv8\"]},\"@brinkninja/core/contracts/Interfaces/IERC1271.sol\":{\"keccak256\":\"0xccdfc04dcee6c5610b9b06deba4b6e55e0c7713b3e3d6277973f84ffd457889e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f866c88c0749f303cb6a68df93df17aa973575f732300e3ecff1c48f5147c7d0\",\"dweb:/ipfs/QmdDJicRP95ov7hw6kaZCiDs7wA1EcXTax82kfZgXYZZbf\"]},\"@brinkninja/core/contracts/Interfaces/ISingletonFactory.sol\":{\"keccak256\":\"0x73e1b7dcba2f8e69564b2d2b78a14860001553be39511ad1d7da71ceac327c10\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1be69a6776937ecf9f163bc248e73fc4abbdc280fcd71594a03b97ea265a4efd\",\"dweb:/ipfs/QmfPwW7ESevMBawrnBkB5JSLGgZrnMjB6rDcxyJkhktiLH\"]},\"@brinkninja/core/contracts/Test/AccountWithTestCalls.sol\":{\"keccak256\":\"0x98d5d935e3222b449b6512a371a66295fd7a437c40a9f590158eb833c31cd425\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6fb1157539cd790370091a29ea63a66f1485c8d25ebd47a022ad4b2ad8e450ed\",\"dweb:/ipfs/QmTsQefxbT8wgn6eCmUSVgNLWRMRw3Wiz6p8nUHc5o1WEv\"]},\"@brinkninja/core/contracts/Test/TestAccountCalls.sol\":{\"keccak256\":\"0xc5791396bbeea3b6ef33cb95d0967d782190d9f3b2b9cf323320dd9781850300\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://591a0b250c9b82a61f5e5e5027237f4a37e153b3f99df2d519d59bbd7eceecda\",\"dweb:/ipfs/QmUEkvWrmW8qPvpQbeWVhkhe2NHKzWFrjg5R7kbWwioq6S\"]},\"@brinkninja/core/contracts/Test/TestERC20.sol\":{\"keccak256\":\"0xff0c8c4aac1d2048355ae853185d88140d8868c20796b079f8018181443593d3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ba2576fdc9d63dd64bbcf13f3c889f426e4563005e3e9b8a81de2a9fae9205dc\",\"dweb:/ipfs/QmZ3CnDkUMwpgajmmhBRJswao2NJyZoZAHVaeir6vKyj4c\"]},\"contracts/Test/Imports.sol\":{\"keccak256\":\"0x8cf7330ce30841a89044e0fa9468a5a93d47abe975925eaed2246dfa3c85d354\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://50b8f596e4f001d149b39758aeef0bf38cc1a49168ededb96283c4bc526c78f0\",\"dweb:/ipfs/QmZX4MUv3RZ7ShSh4RfSYxuoNv3gM4DEQMxx4TfijQb2Va\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "@brinkninja/core/contracts/Account/Account.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Account/Account.sol",
          "exportedSymbols": {
            "Account": [
              234
            ],
            "ECDSA": [
              387
            ],
            "EIP1271Validator": [
              424
            ],
            "EIP712SignerRecovery": [
              477
            ],
            "IERC1271": [
              614
            ]
          },
          "id": 235,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:0"
            },
            {
              "id": 2,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:0"
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol",
              "file": "./EIP712SignerRecovery.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 235,
              "sourceUnit": 478,
              "src": "91:36:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Account/EIP1271Validator.sol",
              "file": "./EIP1271Validator.sol",
              "id": 4,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 235,
              "sourceUnit": 425,
              "src": "128:32:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 6,
                    "name": "EIP712SignerRecovery",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 477,
                    "src": "436:20:0"
                  },
                  "id": 7,
                  "nodeType": "InheritanceSpecifier",
                  "src": "436:20:0"
                },
                {
                  "baseName": {
                    "id": 8,
                    "name": "EIP1271Validator",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 424,
                    "src": "458:16:0"
                  },
                  "id": 9,
                  "nodeType": "InheritanceSpecifier",
                  "src": "458:16:0"
                }
              ],
              "canonicalName": "Account",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 5,
                "nodeType": "StructuredDocumentation",
                "src": "162:254:0",
                "text": "@title Brink account core\n @notice Deployed once and used by many proxy contracts as the implementation contract. External functions in this\n contract are intended to be called by `delegatecall` from proxy contracts deployed by AccountFactory."
              },
              "fullyImplemented": true,
              "id": 234,
              "linearizedBaseContracts": [
                234,
                424,
                477
              ],
              "name": "Account",
              "nameLocation": "425:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 10,
                    "nodeType": "StructuredDocumentation",
                    "src": "479:144:0",
                    "text": "@dev Revert if signer of a transaction or EIP712 message signer is not the proxy owner\n @param signer The address that is not the owner"
                  },
                  "id": 14,
                  "name": "NotOwner",
                  "nameLocation": "632:8:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 12,
                        "mutability": "mutable",
                        "name": "signer",
                        "nameLocation": "649:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "641:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "641:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "640:16:0"
                  },
                  "src": "626:31:0"
                },
                {
                  "documentation": {
                    "id": 15,
                    "nodeType": "StructuredDocumentation",
                    "src": "661:172:0",
                    "text": "@dev Revert if EIP1271 hash and signature is invalid\n @param hash Hash of the data to be validated\n @param signature Signature byte array associated with hash"
                  },
                  "id": 21,
                  "name": "InvalidSignature",
                  "nameLocation": "842:16:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "867:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "859:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "859:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "879:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "873:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "873:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "858:31:0"
                  },
                  "src": "836:54:0"
                },
                {
                  "documentation": {
                    "id": 22,
                    "nodeType": "StructuredDocumentation",
                    "src": "894:77:0",
                    "text": "@dev Revert if the Account.sol implementation contract is called directly"
                  },
                  "id": 24,
                  "name": "NotDelegateCall",
                  "nameLocation": "980:15:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "995:2:0"
                  },
                  "src": "974:24:0"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1002:56:0",
                    "text": "@dev Typehash for signed metaDelegateCall() messages"
                  },
                  "id": 27,
                  "mutability": "immutable",
                  "name": "META_DELEGATE_CALL_TYPEHASH",
                  "nameLocation": "1088:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1061:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 28,
                    "nodeType": "StructuredDocumentation",
                    "src": "1120:64:0",
                    "text": "@dev Typehash for signed metaDelegateCall_EIP1271() messages"
                  },
                  "id": 30,
                  "mutability": "immutable",
                  "name": "META_DELEGATE_CALL_EIP1271_TYPEHASH",
                  "nameLocation": "1214:35:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1187:62:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 31,
                    "nodeType": "StructuredDocumentation",
                    "src": "1254:109:0",
                    "text": "@dev Deployment address of the implementation Account.sol contract. Used to enforce onlyDelegateCallable."
                  },
                  "id": 37,
                  "mutability": "immutable",
                  "name": "deploymentAddress",
                  "nameLocation": "1393:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1366:60:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "id": 35,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1421:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Account_$234",
                          "typeString": "contract Account"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Account_$234",
                          "typeString": "contract Account"
                        }
                      ],
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1413:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 33,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1413:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 52,
                    "nodeType": "Block",
                    "src": "1582:96:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 42,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1600:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Account_$234",
                                  "typeString": "contract Account"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Account_$234",
                                  "typeString": "contract Account"
                                }
                              ],
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1592:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 40,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1592:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1592:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 44,
                            "name": "deploymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1609:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1592:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 50,
                        "nodeType": "IfStatement",
                        "src": "1588:79:0",
                        "trueBody": {
                          "id": 49,
                          "nodeType": "Block",
                          "src": "1628:39:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 46,
                                  "name": "NotDelegateCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "1643:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 47,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1643:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 48,
                              "nodeType": "RevertStatement",
                              "src": "1636:24:0"
                            }
                          ]
                        }
                      },
                      {
                        "id": 51,
                        "nodeType": "PlaceholderStatement",
                        "src": "1672:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 38,
                    "nodeType": "StructuredDocumentation",
                    "src": "1431:116:0",
                    "text": "@dev Used by external functions to revert if they are called directly on the implementation Account.sol contract"
                  },
                  "id": 53,
                  "name": "onlyDelegateCallable",
                  "nameLocation": "1559:20:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1579:2:0"
                  },
                  "src": "1550:128:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 69,
                    "nodeType": "Block",
                    "src": "1744:198:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 57,
                            "name": "META_DELEGATE_CALL_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1751:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4d65746144656c656761746543616c6c286164647265737320746f2c6279746573206461746129",
                                "id": 59,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1791:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_023ce5d01636bb12b4ffde3c4f5a66fb1044aa0dbc251394e60f0a26f1591043",
                                  "typeString": "literal_string \"MetaDelegateCall(address to,bytes data)\""
                                },
                                "value": "MetaDelegateCall(address to,bytes data)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_023ce5d01636bb12b4ffde3c4f5a66fb1044aa0dbc251394e60f0a26f1591043",
                                  "typeString": "literal_string \"MetaDelegateCall(address to,bytes data)\""
                                }
                              ],
                              "id": 58,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1781:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1781:52:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1751:82:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "1751:82:0"
                      },
                      {
                        "expression": {
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63,
                            "name": "META_DELEGATE_CALL_EIP1271_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1839:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4d65746144656c656761746543616c6c5f45495031323731286164647265737320746f2c6279746573206461746129",
                                "id": 65,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1887:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1d3b50d88adeb95016e86033ab418b64b7ecd66b70783b0dca7b0afc8bfb8a1e",
                                  "typeString": "literal_string \"MetaDelegateCall_EIP1271(address to,bytes data)\""
                                },
                                "value": "MetaDelegateCall_EIP1271(address to,bytes data)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_1d3b50d88adeb95016e86033ab418b64b7ecd66b70783b0dca7b0afc8bfb8a1e",
                                  "typeString": "literal_string \"MetaDelegateCall_EIP1271(address to,bytes data)\""
                                }
                              ],
                              "id": 64,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1877:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1877:60:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1839:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 68,
                        "nodeType": "ExpressionStatement",
                        "src": "1839:98:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 54,
                    "nodeType": "StructuredDocumentation",
                    "src": "1682:45:0",
                    "text": "@dev Constructor sets immutable constants"
                  },
                  "id": 70,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 55,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:0"
                  },
                  "returnParameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1744:0:0"
                  },
                  "scope": 234,
                  "src": "1730:212:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "2306:369:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 82,
                              "name": "proxyOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "2316:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2316:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 84,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2332:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2332:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2316:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 93,
                        "nodeType": "IfStatement",
                        "src": "2312:74:0",
                        "trueBody": {
                          "id": 92,
                          "nodeType": "Block",
                          "src": "2344:42:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 88,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2368:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 89,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2368:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 87,
                                  "name": "NotOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14,
                                  "src": "2359:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 90,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2359:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 91,
                              "nodeType": "RevertStatement",
                              "src": "2352:27:0"
                            }
                          ]
                        }
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2401:270:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2409:72:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "2428:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2428:5:0"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "2435:2:0"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2439:5:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "2450:4:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2456:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2446:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2446:15:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "2469:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2463:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2463:11:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2476:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2479:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "2423:4:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2423:58:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "2413:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2503:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2506:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "2509:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2509:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2488:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2488:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2488:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2560:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2577:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "2580:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2580:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "2570:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2570:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2570:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "2553:52:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2558:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2620:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2637:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "2640:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2640:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "2630:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2630:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2630:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "2612:53:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "2540:6:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "2533:132:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 77,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2450:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 77,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2469:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 75,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2435:2:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 73,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2439:5:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 94,
                        "nodeType": "InlineAssembly",
                        "src": "2392:279:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 71,
                    "nodeType": "StructuredDocumentation",
                    "src": "1946:251:0",
                    "text": "@dev Makes a call to an external contract\n @dev Only executable directly by the proxy owner\n @param value Amount of wei to send with the call\n @param to Address of the external contract to call\n @param data Call data to execute"
                  },
                  "functionSelector": "bbfeeeb5",
                  "id": 96,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 80,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 79,
                        "name": "onlyDelegateCallable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "2285:20:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2285:20:0"
                    }
                  ],
                  "name": "externalCall",
                  "nameLocation": "2209:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2230:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2222:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2222:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 75,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2245:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2237:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 77,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2262:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2249:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2249:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2221:46:0"
                  },
                  "returnParameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2306:0:0"
                  },
                  "scope": 234,
                  "src": "2200:475:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "2930:370:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 106,
                              "name": "proxyOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "2940:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2940:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 108,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2956:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2956:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2940:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 117,
                        "nodeType": "IfStatement",
                        "src": "2936:74:0",
                        "trueBody": {
                          "id": 116,
                          "nodeType": "Block",
                          "src": "2968:42:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 112,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2992:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 113,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2992:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 111,
                                  "name": "NotOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14,
                                  "src": "2983:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2983:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 115,
                              "nodeType": "RevertStatement",
                              "src": "2976:27:0"
                            }
                          ]
                        }
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3025:271:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3033:73:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "3060:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3060:5:0"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "3067:2:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "3075:4:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3081:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3071:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3071:15:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "3094:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3088:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3088:11:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3101:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3104:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nodeType": "YulIdentifier",
                                  "src": "3047:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3047:59:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "3037:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3128:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3131:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "3134:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3134:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3113:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3113:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3113:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3185:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3202:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "3205:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3205:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "3195:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3195:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3195:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "3178:52:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3183:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3245:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3262:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "3265:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3265:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "3255:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3255:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3255:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "3237:53:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "3165:6:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "3158:132:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 101,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3075:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 101,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3094:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 99,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3067:2:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 118,
                        "nodeType": "InlineAssembly",
                        "src": "3016:280:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 97,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:157:0",
                    "text": "@dev Makes a delegatecall to an external contract\n @param to Address of the external contract to delegatecall\n @param data Call data to execute"
                  },
                  "functionSelector": "56e7b7aa",
                  "id": 120,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyDelegateCallable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "2909:20:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2909:20:0"
                    }
                  ],
                  "name": "delegateCall",
                  "nameLocation": "2848:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2869:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "2861:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2861:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2886:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "2873:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2873:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2860:31:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2930:0:0"
                  },
                  "scope": 234,
                  "src": "2839:461:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "4185:576:0",
                    "statements": [
                      {
                        "assignments": [
                          135
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 135,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "4199:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 169,
                            "src": "4191:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 134,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4191:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 149,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 140,
                                      "name": "META_DELEGATE_CALL_TYPEHASH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27,
                                      "src": "4251:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 141,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 123,
                                      "src": "4280:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 143,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 125,
                                          "src": "4294:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                            "typeString": "bytes calldata"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                            "typeString": "bytes calldata"
                                          }
                                        ],
                                        "id": 142,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "4284:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 144,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4284:15:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 138,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "4240:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 139,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "4240:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4240:60:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 137,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "4230:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4230:71:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 147,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "4309:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 136,
                            "name": "_recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "4208:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes calldata) view returns (address)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4208:116:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4191:133:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 150,
                              "name": "proxyOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "4334:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4334:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 152,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "4350:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4334:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 159,
                        "nodeType": "IfStatement",
                        "src": "4330:66:0",
                        "trueBody": {
                          "id": 158,
                          "nodeType": "Block",
                          "src": "4358:38:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 155,
                                    "name": "signer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 135,
                                    "src": "4382:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 154,
                                  "name": "NotOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14,
                                  "src": "4373:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4373:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 157,
                              "nodeType": "RevertStatement",
                              "src": "4366:23:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          161
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 161,
                            "mutability": "mutable",
                            "name": "callData",
                            "nameLocation": "4415:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 169,
                            "src": "4402:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 160,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4402:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 167,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 164,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "4443:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 165,
                              "name": "unsignedData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "4449:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 162,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4426:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "4426:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4426:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4402:60:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4478:279:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4486:81:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "4513:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4513:5:0"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "4520:2:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "callData",
                                        "nodeType": "YulIdentifier",
                                        "src": "4528:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4538:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4524:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4524:19:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "callData",
                                        "nodeType": "YulIdentifier",
                                        "src": "4551:8:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4545:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4545:15:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4562:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4565:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nodeType": "YulIdentifier",
                                  "src": "4500:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4500:67:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "4490:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4589:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4592:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "4595:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4595:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4574:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4574:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4574:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4646:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4663:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "4666:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4666:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "4656:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4656:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4656:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "4639:52:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4644:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4706:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4723:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "4726:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4726:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "4716:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4716:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4716:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "4698:53:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "4626:6:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "4619:132:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 161,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4528:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 161,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4551:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 123,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4520:2:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 168,
                        "nodeType": "InlineAssembly",
                        "src": "4469:288:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 121,
                    "nodeType": "StructuredDocumentation",
                    "src": "3304:718:0",
                    "text": "@dev Allows execution of a delegatecall with a valid signature from the proxyOwner. Uses EIP-712\n (https://github.com/ethereum/EIPs/pull/712) signer recovery.\n @param to Address of the external contract to delegatecall, signed by the proxyOwner\n @param data Call data to include in the delegatecall, signed by the proxyOwner\n @param signature Signature of the proxyOwner\n @param unsignedData Unsigned call data appended to the delegatecall\n @notice WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded\n `callData`. If the proxyOwner signs a delegatecall to a malicious contract, this could result in total loss of\n their account."
                  },
                  "functionSelector": "1f6f4202",
                  "id": 170,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 132,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 131,
                        "name": "onlyDelegateCallable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "4164:20:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4164:20:0"
                    }
                  ],
                  "name": "metaDelegateCall",
                  "nameLocation": "4034:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 123,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4064:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "4056:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4056:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 125,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4083:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "4068:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4068:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "4104:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "4089:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4089:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "unsignedData",
                        "nameLocation": "4130:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "4115:27:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4115:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4050:96:0"
                  },
                  "returnParameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4185:0:0"
                  },
                  "scope": 234,
                  "src": "4025:736:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 220,
                    "nodeType": "Block",
                    "src": "5713:580:0",
                    "statements": [
                      {
                        "assignments": [
                          185
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 185,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "5727:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 220,
                            "src": "5719:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 184,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5719:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 196,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 189,
                                  "name": "META_DELEGATE_CALL_EIP1271_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "5755:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 190,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 173,
                                  "src": "5792:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 192,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 175,
                                      "src": "5806:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    ],
                                    "id": 191,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "5796:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5796:15:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 187,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5744:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "5744:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5744:68:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 186,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5734:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5734:79:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5719:94:0"
                      },
                      {
                        "condition": {
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5822:49:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 198,
                                  "name": "proxyOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 229,
                                  "src": "5841:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5841:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 200,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "5855:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 201,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 177,
                                "src": "5861:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 197,
                              "name": "_isValidSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "5823:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function (address,bytes32,bytes calldata) view returns (bool)"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5823:48:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 210,
                        "nodeType": "IfStatement",
                        "src": "5819:109:0",
                        "trueBody": {
                          "id": 209,
                          "nodeType": "Block",
                          "src": "5873:55:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 205,
                                    "name": "hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 185,
                                    "src": "5905:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 206,
                                    "name": "signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 177,
                                    "src": "5911:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 204,
                                  "name": "InvalidSignature",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "5888:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes32,bytes memory) pure"
                                  }
                                },
                                "id": 207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5888:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 208,
                              "nodeType": "RevertStatement",
                              "src": "5881:40:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          212
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 212,
                            "mutability": "mutable",
                            "name": "callData",
                            "nameLocation": "5947:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 220,
                            "src": "5934:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 211,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5934:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 218,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 215,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 175,
                              "src": "5975:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 216,
                              "name": "unsignedData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "5981:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 213,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5958:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "5958:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5958:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5934:60:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6010:279:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6018:81:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "6045:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6045:5:0"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "6052:2:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "callData",
                                        "nodeType": "YulIdentifier",
                                        "src": "6060:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6070:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6056:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6056:19:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "callData",
                                        "nodeType": "YulIdentifier",
                                        "src": "6083:8:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6077:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6077:15:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6094:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6097:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nodeType": "YulIdentifier",
                                  "src": "6032:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6032:67:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "6022:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6121:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6124:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "6127:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6127:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "6106:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6106:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6106:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "6178:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6195:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "6198:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6198:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "6188:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6188:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "6188:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "6171:52:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6176:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "6238:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6255:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "6258:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6258:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "6248:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6248:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "6248:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "6230:53:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "6158:6:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "6151:132:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 212,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6060:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 212,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6083:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 173,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6052:2:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 219,
                        "nodeType": "InlineAssembly",
                        "src": "6001:288:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 171,
                    "nodeType": "StructuredDocumentation",
                    "src": "4765:777:0",
                    "text": "@dev Allows execution of a delegatecall if proxyOwner is a smart contract. Uses EIP-1271\n (https://eips.ethereum.org/EIPS/eip-1271) signer validation.\n @param to Address of the external contract to delegatecall, validated by the proxyOwner contract\n @param data Call data to include in the delegatecall, validated by the proxyOwner contract\n @param signature Signature that will be validated by the proxyOwner contract\n @param unsignedData Unsigned call data appended to the delegatecall\n @notice WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded\n `callData`. If the proxyOwner contract validates a delegatecall to a malicious contract, this could result in\n total loss of the account."
                  },
                  "functionSelector": "2867a68d",
                  "id": 221,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 182,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 181,
                        "name": "onlyDelegateCallable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "5692:20:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5692:20:0"
                    }
                  ],
                  "name": "metaDelegateCall_EIP1271",
                  "nameLocation": "5554:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5592:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "5584:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5584:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5611:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "5596:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5596:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "5632:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "5617:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5617:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "unsignedData",
                        "nameLocation": "5658:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "5643:27:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5643:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5578:96:0"
                  },
                  "returnParameters": {
                    "id": 183,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5713:0:0"
                  },
                  "scope": 234,
                  "src": "5545:748:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 228,
                    "nodeType": "Block",
                    "src": "6472:163:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6487:144:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6559:7:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6559:9:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6570:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6573:4:0",
                                    "type": "",
                                    "value": "0x28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6579:4:0",
                                    "type": "",
                                    "value": "0x14"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodecopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "6547:11:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6547:37:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6547:37:0"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6591:34:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6610:4:0",
                                    "type": "",
                                    "value": "0x60"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6622:1:0",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6616:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6616:8:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6606:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6606:19:0"
                              },
                              "variableNames": [
                                {
                                  "name": "_proxyOwner",
                                  "nodeType": "YulIdentifier",
                                  "src": "6591:11:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 225,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6591:11:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 227,
                        "nodeType": "InlineAssembly",
                        "src": "6478:153:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 222,
                    "nodeType": "StructuredDocumentation",
                    "src": "6297:106:0",
                    "text": "@dev Returns the owner address for the proxy\n @return _proxyOwner The owner address for the proxy"
                  },
                  "id": 229,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxyOwner",
                  "nameLocation": "6415:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6425:2:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "_proxyOwner",
                        "nameLocation": "6459:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "6451:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6450:21:0"
                  },
                  "scope": 234,
                  "src": "6406:229:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "6666:3:0",
                    "statements": []
                  },
                  "id": 233,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6646:2:0"
                  },
                  "returnParameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6666:0:0"
                  },
                  "scope": 234,
                  "src": "6639:30:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 235,
              "src": "416:6255:0",
              "usedErrors": [
                14,
                21,
                24
              ]
            }
          ],
          "src": "45:6627:0"
        },
        "id": 0
      },
      "@brinkninja/core/contracts/Account/AccountFactory.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Account/AccountFactory.sol",
          "exportedSymbols": {
            "AccountFactory": [
              270
            ]
          },
          "id": 271,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 236,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:1"
            },
            {
              "id": 237,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AccountFactory",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "91:116:1",
                "text": "@title Brink account factory\n @notice This is a factory contract used for deployment of Brink proxy accounts"
              },
              "fullyImplemented": true,
              "id": 270,
              "linearizedBaseContracts": [
                270
              ],
              "name": "AccountFactory",
              "nameLocation": "216:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 240,
                  "name": "DeployFailed",
                  "nameLocation": "241:12:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "253:2:1"
                  },
                  "src": "235:21:1"
                },
                {
                  "body": {
                    "id": 268,
                    "nodeType": "Block",
                    "src": "904:453:1",
                    "statements": [
                      {
                        "assignments": [
                          249
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 249,
                            "mutability": "mutable",
                            "name": "initCode",
                            "nameLocation": "923:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 268,
                            "src": "910:21:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 248,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "910:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 255,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3",
                              "id": 252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "hexString",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1070:106:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7c0bb3be518c0243aa17da2c3d54b85a4c7a7261ba4ce138fc2b8feaf0105560",
                                "typeString": "literal_string hex\"603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3\""
                              }
                            },
                            {
                              "id": 253,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "1184:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7c0bb3be518c0243aa17da2c3d54b85a4c7a7261ba4ce138fc2b8feaf0105560",
                                "typeString": "literal_string hex\"603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 250,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "934:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "934:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "934:261:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "910:285:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1210:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1218:62:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1237:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "initCode",
                                        "nodeType": "YulIdentifier",
                                        "src": "1244:8:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1254:4:1",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1240:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1240:19:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "initCode",
                                        "nodeType": "YulIdentifier",
                                        "src": "1267:8:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1261:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1261:15:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1278:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1229:7:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1229:51:1"
                              },
                              "variableNames": [
                                {
                                  "name": "account",
                                  "nodeType": "YulIdentifier",
                                  "src": "1218:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 246,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1218:7:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 249,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1244:8:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 249,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1267:8:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 256,
                        "nodeType": "InlineAssembly",
                        "src": "1201:85:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 257,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "1294:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1313:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1305:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 258,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1305:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1305:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1294:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 267,
                        "nodeType": "IfStatement",
                        "src": "1291:62:1",
                        "trueBody": {
                          "id": 266,
                          "nodeType": "Block",
                          "src": "1317:36:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 263,
                                  "name": "DeployFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 240,
                                  "src": "1332:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1332:14:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 265,
                              "nodeType": "RevertStatement",
                              "src": "1325:21:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "260:568:1",
                    "text": "@dev Deploys a Proxy account for the given owner\n @param owner Owner of the Proxy account\n @return account Address of the deployed Proxy account\n @notice This deploys a \"minimal proxy\" contract with the proxy owner address added to the deployed bytecode. The\n owner address can be read within a delegatecall by using `extcodecopy`. Minimal proxy bytecode is from\n https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48 and https://eips.ethereum.org/EIPS/eip-1167. It\n utilizes the \"vanity address optimization\" from EIP 1167"
                  },
                  "functionSelector": "da9fc1ae",
                  "id": 269,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployAccount",
                  "nameLocation": "840:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "862:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 269,
                        "src": "854:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "854:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "853:15:1"
                  },
                  "returnParameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "895:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 269,
                        "src": "887:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "887:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "886:17:1"
                  },
                  "scope": 270,
                  "src": "831:526:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 271,
              "src": "207:1152:1",
              "usedErrors": [
                240
              ]
            }
          ],
          "src": "45:1315:1"
        },
        "id": 1
      },
      "@brinkninja/core/contracts/Account/ECDSA.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Account/ECDSA.sol",
          "exportedSymbols": {
            "ECDSA": [
              387
            ]
          },
          "id": 388,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 272,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:2"
            },
            {
              "id": 273,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ECDSA",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 274,
                "nodeType": "StructuredDocumentation",
                "src": "91:205:2",
                "text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
              },
              "fullyImplemented": true,
              "id": 387,
              "linearizedBaseContracts": [
                387
              ],
              "name": "ECDSA",
              "nameLocation": "305:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 311,
                    "nodeType": "Block",
                    "src": "1184:653:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 284,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "1236:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1236:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1256:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "1236:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 293,
                        "nodeType": "IfStatement",
                        "src": "1232:94:2",
                        "trueBody": {
                          "id": 292,
                          "nodeType": "Block",
                          "src": "1260:66:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1281:33:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
                                      "typeString": "literal_string \"ECDSA: invalid signature length\""
                                    },
                                    "value": "ECDSA: invalid signature length"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
                                      "typeString": "literal_string \"ECDSA: invalid signature length\""
                                    }
                                  ],
                                  "id": 288,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "1274:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1274:41:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 291,
                              "nodeType": "ExpressionStatement",
                              "src": "1274:41:2"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          295
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 295,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "1400:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 311,
                            "src": "1392:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 294,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1392:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 296,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1392:9:2"
                      },
                      {
                        "assignments": [
                          298
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 298,
                            "mutability": "mutable",
                            "name": "s",
                            "nameLocation": "1419:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 311,
                            "src": "1411:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 297,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1411:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 299,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1411:9:2"
                      },
                      {
                        "assignments": [
                          301
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 301,
                            "mutability": "mutable",
                            "name": "v",
                            "nameLocation": "1436:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 311,
                            "src": "1430:7:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 300,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "1430:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 302,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1430:7:2"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1636:155:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1650:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "signature",
                                        "nodeType": "YulIdentifier",
                                        "src": "1665:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1676:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1661:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1661:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1655:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1655:27:2"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "1650:1:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1695:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "signature",
                                        "nodeType": "YulIdentifier",
                                        "src": "1710:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1721:4:2",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1706:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1706:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1700:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1700:27:2"
                              },
                              "variableNames": [
                                {
                                  "name": "s",
                                  "nodeType": "YulIdentifier",
                                  "src": "1695:1:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1740:41:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1750:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "signature",
                                            "nodeType": "YulIdentifier",
                                            "src": "1763:9:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1774:4:2",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1759:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1759:20:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1753:5:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1753:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "byte",
                                  "nodeType": "YulIdentifier",
                                  "src": "1745:4:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1745:36:2"
                              },
                              "variableNames": [
                                {
                                  "name": "v",
                                  "nodeType": "YulIdentifier",
                                  "src": "1740:1:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 295,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1650:1:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 298,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1695:1:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 279,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1665:9:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 279,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1710:9:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 279,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1763:9:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 301,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1740:1:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 303,
                        "nodeType": "InlineAssembly",
                        "src": "1627:164:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 305,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "1816:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 306,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "1822:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 307,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 295,
                              "src": "1825:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 308,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "1828:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 304,
                            "name": "recover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              312,
                              369
                            ],
                            "referencedDeclaration": 369,
                            "src": "1808:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 283,
                        "id": 310,
                        "nodeType": "Return",
                        "src": "1801:29:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 275,
                    "nodeType": "StructuredDocumentation",
                    "src": "317:775:2",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
                  },
                  "id": 312,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "1106:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "1122:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "1114:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "1141:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "1128:22:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1128:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1113:38:2"
                  },
                  "returnParameters": {
                    "id": 283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 282,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "1175:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1175:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1174:9:2"
                  },
                  "scope": 387,
                  "src": "1097:740:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 368,
                    "nodeType": "Block",
                    "src": "2079:1320:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 329,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 321,
                                    "src": "2979:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2971:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 327,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2971:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2971:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                                "id": 331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2985:66:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...7168"
                                },
                                "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                              },
                              "src": "2971:80:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
                              "id": 333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3053:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
                                "typeString": "literal_string \"ECDSA: invalid signature 's' value\""
                              },
                              "value": "ECDSA: invalid signature 's' value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
                                "typeString": "literal_string \"ECDSA: invalid signature 's' value\""
                              }
                            ],
                            "id": 326,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2963:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2963:127:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 335,
                        "nodeType": "ExpressionStatement",
                        "src": "2963:127:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 337,
                                  "name": "v",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 317,
                                  "src": "3108:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3237",
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3113:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_27_by_1",
                                    "typeString": "int_const 27"
                                  },
                                  "value": "27"
                                },
                                "src": "3108:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 340,
                                  "name": "v",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 317,
                                  "src": "3119:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3238",
                                  "id": 341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3124:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28_by_1",
                                    "typeString": "int_const 28"
                                  },
                                  "value": "28"
                                },
                                "src": "3119:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3108:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c7565",
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3128:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
                                "typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
                              },
                              "value": "ECDSA: invalid signature 'v' value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
                                "typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
                              }
                            ],
                            "id": 336,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3100:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3100:65:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 346,
                        "nodeType": "ExpressionStatement",
                        "src": "3100:65:2"
                      },
                      {
                        "assignments": [
                          348
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 348,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "3268:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 368,
                            "src": "3260:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 347,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3260:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 355,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 350,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "3287:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 351,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 317,
                              "src": "3293:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 352,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "3296:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 353,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 321,
                              "src": "3299:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 349,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "3277:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3277:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3260:41:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 357,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3319:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 360,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3337:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3329:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 358,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3329:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3329:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3319:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45434453413a20696e76616c6964207369676e6174757265",
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3341:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                                "typeString": "literal_string \"ECDSA: invalid signature\""
                              },
                              "value": "ECDSA: invalid signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                                "typeString": "literal_string \"ECDSA: invalid signature\""
                              }
                            ],
                            "id": 356,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3311:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3311:57:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "3311:57:2"
                      },
                      {
                        "expression": {
                          "id": 366,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "3386:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 325,
                        "id": 367,
                        "nodeType": "Return",
                        "src": "3379:13:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 313,
                    "nodeType": "StructuredDocumentation",
                    "src": "1843:137:2",
                    "text": " @dev Overload of {ECDSA-recover-bytes32-bytes-} that receives the `v`,\n `r` and `s` signature fields separately."
                  },
                  "id": 369,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "1994:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "2010:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2002:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2002:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 317,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "2022:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2016:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 316,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2016:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 319,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2033:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2025:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 318,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 321,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "2044:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2036:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2036:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2001:45:2"
                  },
                  "returnParameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2070:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2070:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2069:9:2"
                  },
                  "scope": 387,
                  "src": "1985:1414:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 385,
                    "nodeType": "Block",
                    "src": "3741:187:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                  "id": 380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3879:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  "value": "\u0019Ethereum Signed Message:\n32"
                                },
                                {
                                  "id": 381,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "3915:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 378,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3862:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3862:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3862:58:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 377,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3852:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3852:69:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 376,
                        "id": 384,
                        "nodeType": "Return",
                        "src": "3845:76:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "3405:253:2",
                    "text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n replicates the behavior of the\n https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\n JSON-RPC method.\n See {recover}."
                  },
                  "id": 386,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toEthSignedMessageHash",
                  "nameLocation": "3672:22:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "3703:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "3695:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3695:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3694:14:2"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "3732:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3732:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3731:9:2"
                  },
                  "scope": 387,
                  "src": "3663:265:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 388,
              "src": "297:3633:2",
              "usedErrors": []
            }
          ],
          "src": "45:3886:2"
        },
        "id": 2
      },
      "@brinkninja/core/contracts/Account/EIP1271Validator.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Account/EIP1271Validator.sol",
          "exportedSymbols": {
            "EIP1271Validator": [
              424
            ],
            "IERC1271": [
              614
            ]
          },
          "id": 425,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 389,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:3"
            },
            {
              "id": 390,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:3"
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Interfaces/IERC1271.sol",
              "file": "../Interfaces/IERC1271.sol",
              "id": 391,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 425,
              "sourceUnit": 615,
              "src": "91:36:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "EIP1271Validator",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 392,
                "nodeType": "StructuredDocumentation",
                "src": "129:142:3",
                "text": "@title Provides a validation check on a signer contract that implements EIP-1271\n @notice https://github.com/ethereum/EIPs/issues/1271"
              },
              "fullyImplemented": true,
              "id": 424,
              "linearizedBaseContracts": [
                424
              ],
              "name": "EIP1271Validator",
              "nameLocation": "289:16:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 400,
                  "mutability": "constant",
                  "name": "MAGICVALUE",
                  "nameLocation": "336:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "311:90:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "697356616c69645369676e617475726528627974657333322c627974657329",
                            "id": 397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "366:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1626ba7e356f5979dd355a3d2bfb43e80420a480c3b854edce286a82d7496869",
                              "typeString": "literal_string \"isValidSignature(bytes32,bytes)\""
                            },
                            "value": "isValidSignature(bytes32,bytes)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1626ba7e356f5979dd355a3d2bfb43e80420a480c3b854edce286a82d7496869",
                              "typeString": "literal_string \"isValidSignature(bytes32,bytes)\""
                            }
                          ],
                          "id": 396,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "356:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "356:44:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "349:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 394,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "349:6:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 422,
                    "nodeType": "Block",
                    "src": "797:82:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 416,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 405,
                                "src": "844:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 417,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 407,
                                "src": "850:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 413,
                                    "name": "signer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 403,
                                    "src": "819:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 412,
                                  "name": "IERC1271",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 614,
                                  "src": "810:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC1271_$614_$",
                                    "typeString": "type(contract IERC1271)"
                                  }
                                },
                                "id": 414,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "810:16:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC1271_$614",
                                  "typeString": "contract IERC1271"
                                }
                              },
                              "id": 415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isValidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 613,
                              "src": "810:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "810:50:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 419,
                            "name": "MAGICVALUE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "864:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "810:64:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 411,
                        "id": 421,
                        "nodeType": "Return",
                        "src": "803:71:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 401,
                    "nodeType": "StructuredDocumentation",
                    "src": "406:275:3",
                    "text": " @dev Should return whether the signature provided is valid for the provided hash\n @param signer Address of a contract that implements EIP-1271\n @param hash Hash of the data to be validated\n @param signature Signature byte array associated with hash"
                  },
                  "id": 423,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isValidSignature",
                  "nameLocation": "694:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "signer",
                        "nameLocation": "720:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 423,
                        "src": "712:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "712:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "736:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 423,
                        "src": "728:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "757:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 423,
                        "src": "742:24:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "742:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "711:56:3"
                  },
                  "returnParameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 423,
                        "src": "791:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "791:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "790:6:3"
                  },
                  "scope": 424,
                  "src": "685:194:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 425,
              "src": "271:610:3",
              "usedErrors": []
            }
          ],
          "src": "45:837:3"
        },
        "id": 3
      },
      "@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Account/EIP712SignerRecovery.sol",
          "exportedSymbols": {
            "ECDSA": [
              387
            ],
            "EIP712SignerRecovery": [
              477
            ]
          },
          "id": 478,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 426,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:4"
            },
            {
              "id": 427,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:4"
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Account/ECDSA.sol",
              "file": "./ECDSA.sol",
              "id": 428,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 478,
              "sourceUnit": 388,
              "src": "91:21:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "EIP712SignerRecovery",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 429,
                "nodeType": "StructuredDocumentation",
                "src": "114:126:4",
                "text": "@title Provides signer address recovery for EIP-712 signed messages\n @notice https://github.com/ethereum/EIPs/pull/712"
              },
              "fullyImplemented": true,
              "id": 477,
              "linearizedBaseContracts": [
                477
              ],
              "name": "EIP712SignerRecovery",
              "nameLocation": "258:20:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "559:561:4",
                    "statements": [
                      {
                        "assignments": [
                          440
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 440,
                            "mutability": "mutable",
                            "name": "messageHash",
                            "nameLocation": "621:11:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 475,
                            "src": "613:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 439,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "613:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 468,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "1901",
                                  "id": 444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "669:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  "value": "\u0019\u0001"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                              "id": 449,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "769:84:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                                "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                              },
                                              "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                                "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                              }
                                            ],
                                            "id": 448,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "759:9:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 450,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "759:95:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "4272696e6b4163636f756e74",
                                              "id": 452,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "874:14:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_977bbc96a0db0d97b4b08241f0db5937a7503966a121e611507f9a616f95651f",
                                                "typeString": "literal_string \"BrinkAccount\""
                                              },
                                              "value": "BrinkAccount"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_977bbc96a0db0d97b4b08241f0db5937a7503966a121e611507f9a616f95651f",
                                                "typeString": "literal_string \"BrinkAccount\""
                                              }
                                            ],
                                            "id": 451,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "864:9:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 453,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "864:25:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "31",
                                              "id": 455,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "909:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                                "typeString": "literal_string \"1\""
                                              },
                                              "value": "1"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                                "typeString": "literal_string \"1\""
                                              }
                                            ],
                                            "id": 454,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "899:9:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 456,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "899:14:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 457,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "923:5:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 458,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "chainid",
                                          "nodeType": "MemberAccess",
                                          "src": "923:13:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 461,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "954:4:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_EIP712SignerRecovery_$477",
                                                "typeString": "contract EIP712SignerRecovery"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_EIP712SignerRecovery_$477",
                                                "typeString": "contract EIP712SignerRecovery"
                                              }
                                            ],
                                            "id": 460,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "946:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 459,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "946:7:4",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 462,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "946:13:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 446,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "739:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 447,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encode",
                                        "nodeType": "MemberAccess",
                                        "src": "739:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 463,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "739:228:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 445,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "729:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "729:239:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 465,
                                  "name": "dataHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 432,
                                  "src": "976:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 442,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "645:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "645:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "645:345:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 441,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "635:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "635:356:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "613:378:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 471,
                              "name": "messageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 440,
                              "src": "1092:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 472,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "1105:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 469,
                              "name": "ECDSA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "1078:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ECDSA_$387_$",
                                "typeString": "type(library ECDSA)"
                              }
                            },
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recover",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 312,
                            "src": "1078:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1078:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 438,
                        "id": 474,
                        "nodeType": "Return",
                        "src": "1071:44:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 430,
                    "nodeType": "StructuredDocumentation",
                    "src": "283:173:4",
                    "text": "@dev Recovers the signer address for an EIP-712 signed message\n @param dataHash Hash of the data included in the message\n @param signature An EIP-712 signature"
                  },
                  "id": 476,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_recoverSigner",
                  "nameLocation": "468:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 432,
                        "mutability": "mutable",
                        "name": "dataHash",
                        "nameLocation": "491:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "483:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "483:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "516:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "501:24:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "482:44:4"
                  },
                  "returnParameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "550:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "550:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "549:9:4"
                  },
                  "scope": 477,
                  "src": "459:661:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 478,
              "src": "240:882:4",
              "usedErrors": []
            }
          ],
          "src": "45:1078:4"
        },
        "id": 4
      },
      "@brinkninja/core/contracts/Deployers/SaltedDeployer.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Deployers/SaltedDeployer.sol",
          "exportedSymbols": {
            "ISingletonFactory": [
              627
            ],
            "SaltedDeployer": [
              601
            ]
          },
          "id": 602,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 479,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:5"
            },
            {
              "id": 480,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:5"
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Interfaces/ISingletonFactory.sol",
              "file": "../Interfaces/ISingletonFactory.sol",
              "id": 481,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 602,
              "sourceUnit": 628,
              "src": "91:45:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SaltedDeployer",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 482,
                "nodeType": "StructuredDocumentation",
                "src": "138:135:5",
                "text": "@title Deploys contracts using the canonical SingletonFactory and a hardcoded bytes32 salt. Includes custom events\n and errors."
              },
              "fullyImplemented": true,
              "id": 601,
              "linearizedBaseContracts": [
                601
              ],
              "name": "SaltedDeployer",
              "nameLocation": "282:14:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "301:52:5",
                    "text": "@dev Emit when contract is deployed successfully"
                  },
                  "id": 487,
                  "name": "Deployed",
                  "nameLocation": "362:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "deployAddress",
                        "nameLocation": "379:13:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 487,
                        "src": "371:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "371:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "370:23:5"
                  },
                  "src": "356:38:5"
                },
                {
                  "documentation": {
                    "id": 488,
                    "nodeType": "StructuredDocumentation",
                    "src": "398:62:5",
                    "text": "@dev Revert when SingletonFactory deploy returns 0 address"
                  },
                  "id": 490,
                  "name": "DeployFailed",
                  "nameLocation": "469:12:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "481:2:5"
                  },
                  "src": "463:21:5"
                },
                {
                  "documentation": {
                    "id": 491,
                    "nodeType": "StructuredDocumentation",
                    "src": "488:49:5",
                    "text": "@dev Revert when initCode is already deployed"
                  },
                  "id": 493,
                  "name": "DeploymentExists",
                  "nameLocation": "546:16:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 492,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "562:2:5"
                  },
                  "src": "540:25:5"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 494,
                    "nodeType": "StructuredDocumentation",
                    "src": "569:41:5",
                    "text": "@dev Salt used for salted deployments"
                  },
                  "id": 497,
                  "mutability": "constant",
                  "name": "SALT",
                  "nameLocation": "630:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "613:90:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307864326135623165383463623761366466343831343338633631656334313434363331313732643364323962326133306665376335663066626634653531373335",
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "637:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_95278455840064667835102323115326940161764931820389224954593446077404373391157_by_1",
                      "typeString": "int_const 9527...(69 digits omitted)...1157"
                    },
                    "value": "0xd2a5b1e84cb7a6df481438c61ec4144631172d3d29b2a30fe7c5f0fbf4e51735"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 498,
                    "nodeType": "StructuredDocumentation",
                    "src": "708:97:5",
                    "text": "@dev Canonical SingletonFactory address\n @notice https://eips.ethereum.org/EIPS/eip-2470"
                  },
                  "id": 504,
                  "mutability": "constant",
                  "name": "SINGLETON_FACTORY",
                  "nameLocation": "835:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 601,
                  "src": "808:108:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISingletonFactory_$627",
                    "typeString": "contract ISingletonFactory"
                  },
                  "typeName": {
                    "id": 500,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 499,
                      "name": "ISingletonFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 627,
                      "src": "808:17:5"
                    },
                    "referencedDeclaration": 627,
                    "src": "808:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISingletonFactory_$627",
                      "typeString": "contract ISingletonFactory"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307863653030343242383638333030303030643434413539303034446135344130303566666463663966",
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "873:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xce0042B868300000d44A59004Da54A005ffdcf9f"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 501,
                      "name": "ISingletonFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "855:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISingletonFactory_$627_$",
                        "typeString": "type(contract ISingletonFactory)"
                      }
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "855:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISingletonFactory_$627",
                      "typeString": "contract ISingletonFactory"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 545,
                    "nodeType": "Block",
                    "src": "1173:184:5",
                    "statements": [
                      {
                        "assignments": [
                          513
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 513,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "1187:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 545,
                            "src": "1179:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 512,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1179:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 531,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30786666",
                                      "id": 519,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1235:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_255_by_1",
                                        "typeString": "int_const 255"
                                      },
                                      "value": "0xff"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_255_by_1",
                                        "typeString": "int_const 255"
                                      }
                                    ],
                                    "id": 518,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1228:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes1_$",
                                      "typeString": "type(bytes1)"
                                    },
                                    "typeName": {
                                      "id": 517,
                                      "name": "bytes1",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1228:6:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 520,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1228:12:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 523,
                                      "name": "SINGLETON_FACTORY",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 504,
                                      "src": "1250:17:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISingletonFactory_$627",
                                        "typeString": "contract ISingletonFactory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ISingletonFactory_$627",
                                        "typeString": "contract ISingletonFactory"
                                      }
                                    ],
                                    "id": 522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1242:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 521,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1242:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 524,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1242:26:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 525,
                                  "name": "SALT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 497,
                                  "src": "1270:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 527,
                                      "name": "initCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 507,
                                      "src": "1286:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 526,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1276:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1276:19:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 515,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1211:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1211:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1211:85:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 514,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1194:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1194:108:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1179:123:5"
                      },
                      {
                        "expression": {
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 532,
                            "name": "deployAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "1308:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 539,
                                        "name": "hash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 513,
                                        "src": "1345:4:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 538,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1340:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 537,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1340:4:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 540,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1340:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1332:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 535,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1332:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1332:19:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1324:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 533,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1324:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1324:28:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1308:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 544,
                        "nodeType": "ExpressionStatement",
                        "src": "1308:44:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 505,
                    "nodeType": "StructuredDocumentation",
                    "src": "921:155:5",
                    "text": "@dev Computes the salted deploy address of contract with initCode\n @return deployAddress Address where the contract with initCode will be deployed"
                  },
                  "functionSelector": "361ab6af",
                  "id": 546,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDeployAddress",
                  "nameLocation": "1088:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "initCode",
                        "nameLocation": "1119:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "1106:21:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1106:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1105:23:5"
                  },
                  "returnParameters": {
                    "id": 511,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "deployAddress",
                        "nameLocation": "1158:13:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "1150:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1150:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1149:23:5"
                  },
                  "scope": 601,
                  "src": "1079:278:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 585,
                    "nodeType": "Block",
                    "src": "1500:273:5",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 554,
                                  "name": "initCode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 549,
                                  "src": "1539:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 553,
                                "name": "getDeployAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 546,
                                "src": "1522:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (bytes memory) pure returns (address)"
                                }
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1522:26:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 552,
                            "name": "_isContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "1510:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1510:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 561,
                        "nodeType": "IfStatement",
                        "src": "1506:85:5",
                        "trueBody": {
                          "id": 560,
                          "nodeType": "Block",
                          "src": "1551:40:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 557,
                                  "name": "DeploymentExists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 493,
                                  "src": "1566:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1566:18:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 559,
                              "nodeType": "RevertStatement",
                              "src": "1559:25:5"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          563
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 563,
                            "mutability": "mutable",
                            "name": "deployAddress",
                            "nameLocation": "1604:13:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 585,
                            "src": "1596:21:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 562,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1596:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 569,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 566,
                              "name": "initCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 549,
                              "src": "1645:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 567,
                              "name": "SALT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "1655:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 564,
                              "name": "SINGLETON_FACTORY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "1620:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISingletonFactory_$627",
                                "typeString": "contract ISingletonFactory"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deploy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 626,
                            "src": "1620:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_payable_$",
                              "typeString": "function (bytes memory,bytes32) external returns (address payable)"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1620:40:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1596:64:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 570,
                            "name": "deployAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "1670:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1695:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1687:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 571,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1687:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1687:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1670:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 580,
                        "nodeType": "IfStatement",
                        "src": "1666:69:5",
                        "trueBody": {
                          "id": 579,
                          "nodeType": "Block",
                          "src": "1699:36:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 576,
                                  "name": "DeployFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 490,
                                  "src": "1714:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1714:14:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 578,
                              "nodeType": "RevertStatement",
                              "src": "1707:21:5"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 582,
                              "name": "deployAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 563,
                              "src": "1754:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 581,
                            "name": "Deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "1745:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1745:23:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 584,
                        "nodeType": "EmitStatement",
                        "src": "1740:28:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 547,
                    "nodeType": "StructuredDocumentation",
                    "src": "1361:88:5",
                    "text": "@dev Deploys the contract with initCode\n @param initCode The initCode to deploy"
                  },
                  "functionSelector": "00774360",
                  "id": 586,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nameLocation": "1461:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 550,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "initCode",
                        "nameLocation": "1481:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "1468:21:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1468:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1467:23:5"
                  },
                  "returnParameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1500:0:5"
                  },
                  "scope": 601,
                  "src": "1452:321:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 599,
                    "nodeType": "Block",
                    "src": "1844:41:5",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 593,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 588,
                                "src": "1857:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "1857:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1857:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1879:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1857:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 592,
                        "id": 598,
                        "nodeType": "Return",
                        "src": "1850:30:5"
                      }
                    ]
                  },
                  "id": 600,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isContract",
                  "nameLocation": "1786:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1806:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "1798:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1798:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1797:17:5"
                  },
                  "returnParameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "1838:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1838:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1837:6:5"
                  },
                  "scope": 601,
                  "src": "1777:108:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 602,
              "src": "273:1614:5",
              "usedErrors": [
                490,
                493
              ]
            }
          ],
          "src": "45:1843:5"
        },
        "id": 5
      },
      "@brinkninja/core/contracts/Interfaces/IERC1271.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Interfaces/IERC1271.sol",
          "exportedSymbols": {
            "IERC1271": [
              614
            ]
          },
          "id": 615,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 603,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:6"
            },
            {
              "id": 604,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1271",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 614,
              "linearizedBaseContracts": [
                614
              ],
              "name": "IERC1271",
              "nameLocation": "101:8:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "1626ba7e",
                  "id": 613,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidSignature",
                  "nameLocation": "123:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "_hash",
                        "nameLocation": "148:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "140:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "140:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "_signature",
                        "nameLocation": "168:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "155:23:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "155:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "139:40:6"
                  },
                  "returnParameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "210:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "203:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "203:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "202:19:6"
                  },
                  "scope": 614,
                  "src": "114:108:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 615,
              "src": "91:133:6",
              "usedErrors": []
            }
          ],
          "src": "45:180:6"
        },
        "id": 6
      },
      "@brinkninja/core/contracts/Interfaces/ISingletonFactory.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Interfaces/ISingletonFactory.sol",
          "exportedSymbols": {
            "ISingletonFactory": [
              627
            ]
          },
          "id": 628,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 616,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:7"
            },
            {
              "id": 617,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISingletonFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 627,
              "linearizedBaseContracts": [
                627
              ],
              "name": "ISingletonFactory",
              "nameLocation": "101:17:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "4af63f02",
                  "id": 626,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nameLocation": "132:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "_initCode",
                        "nameLocation": "152:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "139:22:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "139:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "_salt",
                        "nameLocation": "171:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "163:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "163:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "138:39:7"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "createdContract",
                        "nameLocation": "212:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "196:31:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "196:15:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "195:33:7"
                  },
                  "scope": 627,
                  "src": "123:106:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 628,
              "src": "91:140:7",
              "usedErrors": []
            }
          ],
          "src": "45:187:7"
        },
        "id": 7
      },
      "@brinkninja/core/contracts/Test/AccountWithTestCalls.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Test/AccountWithTestCalls.sol",
          "exportedSymbols": {
            "Account": [
              234
            ],
            "AccountWithTestCalls": [
              637
            ],
            "ECDSA": [
              387
            ],
            "EIP1271Validator": [
              424
            ],
            "EIP712SignerRecovery": [
              477
            ],
            "IERC1271": [
              614
            ],
            "TestAccountCalls": [
              741
            ]
          },
          "id": 638,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 629,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:8"
            },
            {
              "id": 630,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:8"
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Account/Account.sol",
              "file": "../Account/Account.sol",
              "id": 631,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 638,
              "sourceUnit": 235,
              "src": "91:32:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Test/TestAccountCalls.sol",
              "file": "./TestAccountCalls.sol",
              "id": 632,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 638,
              "sourceUnit": 742,
              "src": "124:32:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 633,
                    "name": "Account",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 234,
                    "src": "200:7:8"
                  },
                  "id": 634,
                  "nodeType": "InheritanceSpecifier",
                  "src": "200:7:8"
                },
                {
                  "baseName": {
                    "id": 635,
                    "name": "TestAccountCalls",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 741,
                    "src": "209:16:8"
                  },
                  "id": 636,
                  "nodeType": "InheritanceSpecifier",
                  "src": "209:16:8"
                }
              ],
              "canonicalName": "AccountWithTestCalls",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 637,
              "linearizedBaseContracts": [
                637,
                741,
                234,
                424,
                477
              ],
              "name": "AccountWithTestCalls",
              "nameLocation": "176:20:8",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 638,
              "src": "158:72:8",
              "usedErrors": [
                14,
                21,
                24
              ]
            }
          ],
          "src": "45:186:8"
        },
        "id": 8
      },
      "@brinkninja/core/contracts/Test/TestAccountCalls.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Test/TestAccountCalls.sol",
          "exportedSymbols": {
            "TestAccountCalls": [
              741
            ]
          },
          "id": 742,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 639,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:9"
            },
            {
              "id": 640,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TestAccountCalls",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 741,
              "linearizedBaseContracts": [
                741
              ],
              "name": "TestAccountCalls",
              "nameLocation": "100:16:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "_called",
                  "nameLocation": "134:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "121:20:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "121:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 644,
                  "name": "ExecutedTestCall",
                  "nameLocation": "152:16:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 643,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "168:2:9"
                  },
                  "src": "146:25:9"
                },
                {
                  "anonymous": false,
                  "id": 648,
                  "name": "MockParamEvent",
                  "nameLocation": "180:14:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 647,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 646,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "203:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "195:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "194:18:9"
                  },
                  "src": "174:39:9"
                },
                {
                  "anonymous": false,
                  "id": 656,
                  "name": "MockParamsEvent",
                  "nameLocation": "222:15:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 650,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "246:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "238:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "238:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 652,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mockInt",
                        "nameLocation": "262:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "256:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 651,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "256:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 654,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mockAddress",
                        "nameLocation": "279:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "271:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 653,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "271:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "237:54:9"
                  },
                  "src": "216:76:9"
                },
                {
                  "body": {
                    "id": 674,
                    "nodeType": "Block",
                    "src": "343:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "357:12:9",
                              "subExpression": {
                                "id": 662,
                                "name": "forceRevert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 658,
                                "src": "358:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546573744163636f756e7443616c6c733a207265766572746564",
                              "id": 664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "371:28:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c4d7b23023a41f11a4bf30c4d02bb77d578a091a668126c52ae526738091c81a",
                                "typeString": "literal_string \"TestAccountCalls: reverted\""
                              },
                              "value": "TestAccountCalls: reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c4d7b23023a41f11a4bf30c4d02bb77d578a091a668126c52ae526738091c81a",
                                "typeString": "literal_string \"TestAccountCalls: reverted\""
                              }
                            ],
                            "id": 661,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "349:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "349:51:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 666,
                        "nodeType": "ExpressionStatement",
                        "src": "349:51:9"
                      },
                      {
                        "expression": {
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 667,
                            "name": "_called",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "406:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "416:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "406:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "406:14:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 671,
                            "name": "ExecutedTestCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 644,
                            "src": "431:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "431:18:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 673,
                        "nodeType": "EmitStatement",
                        "src": "426:23:9"
                      }
                    ]
                  },
                  "functionSelector": "29d0bec0",
                  "id": 675,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testRevert",
                  "nameLocation": "305:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 658,
                        "mutability": "mutable",
                        "name": "forceRevert",
                        "nameLocation": "321:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 675,
                        "src": "316:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 657,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "316:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "315:18:9"
                  },
                  "returnParameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "343:0:9"
                  },
                  "scope": 741,
                  "src": "296:158:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 700,
                    "nodeType": "Block",
                    "src": "528:147:9",
                    "statements": [
                      {
                        "assignments": [
                          683
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 683,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "539:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 700,
                            "src": "534:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 682,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "534:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 684,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "534:12:9"
                      },
                      {
                        "expression": {
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 685,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 683,
                                "src": "553:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 686,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "552:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "596:2:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "id": 687,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 679,
                                  "src": "566:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "566:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 689,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 677,
                                  "src": "588:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "566:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "566:33:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "552:47:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 694,
                        "nodeType": "ExpressionStatement",
                        "src": "552:47:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 696,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "613:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546573744163636f756e7443616c6c733a20746573745472616e736665724554482063616c6c206661696c6564",
                              "id": 697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "622:47:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ad16999ef30c82414110933fbf23fabd21290437ee5d7b84fbd170da4d252c7",
                                "typeString": "literal_string \"TestAccountCalls: testTransferETH call failed\""
                              },
                              "value": "TestAccountCalls: testTransferETH call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ad16999ef30c82414110933fbf23fabd21290437ee5d7b84fbd170da4d252c7",
                                "typeString": "literal_string \"TestAccountCalls: testTransferETH call failed\""
                              }
                            ],
                            "id": 695,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "605:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "605:65:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 699,
                        "nodeType": "ExpressionStatement",
                        "src": "605:65:9"
                      }
                    ]
                  },
                  "functionSelector": "9e02f294",
                  "id": 701,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testTransferETH",
                  "nameLocation": "467:15:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "492:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 701,
                        "src": "484:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "484:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "508:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 701,
                        "src": "500:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "500:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "483:35:9"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "528:0:9"
                  },
                  "scope": 741,
                  "src": "458:217:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 710,
                    "nodeType": "Block",
                    "src": "726:40:9",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 707,
                              "name": "mockUint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 703,
                              "src": "752:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 706,
                            "name": "MockParamEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "737:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "737:24:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 709,
                        "nodeType": "EmitStatement",
                        "src": "732:29:9"
                      }
                    ]
                  },
                  "functionSelector": "dcd9c7fa",
                  "id": 711,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testEvent",
                  "nameLocation": "688:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "707:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 711,
                        "src": "699:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "698:18:9"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "726:0:9"
                  },
                  "scope": 741,
                  "src": "679:87:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 726,
                    "nodeType": "Block",
                    "src": "853:63:9",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 721,
                              "name": "mockUint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "880:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 722,
                              "name": "mockInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "890:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 723,
                              "name": "mockAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "899:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 720,
                            "name": "MockParamsEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "864:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_int24_$_t_address_$returns$__$",
                              "typeString": "function (uint256,int24,address)"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "864:47:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 725,
                        "nodeType": "EmitStatement",
                        "src": "859:52:9"
                      }
                    ]
                  },
                  "functionSelector": "6ea4b40d",
                  "id": 727,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testEvent",
                  "nameLocation": "779:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 713,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "798:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 727,
                        "src": "790:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 712,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 715,
                        "mutability": "mutable",
                        "name": "mockInt",
                        "nameLocation": "814:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 727,
                        "src": "808:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 714,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 717,
                        "mutability": "mutable",
                        "name": "mockAddress",
                        "nameLocation": "831:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 727,
                        "src": "823:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 716,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:54:9"
                  },
                  "returnParameters": {
                    "id": 719,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "853:0:9"
                  },
                  "scope": 741,
                  "src": "770:146:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 739,
                    "nodeType": "Block",
                    "src": "967:95:9",
                    "statements": [
                      {
                        "assignments": [
                          733
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 733,
                            "mutability": "mutable",
                            "name": "ptr",
                            "nameLocation": "981:3:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 739,
                            "src": "973:11:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 732,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "973:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 737,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "6d6f636b55696e74",
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "997:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94a02aa970f44cb624bd9f8f6d45117d09bef87e3b6959977c67468c9517e9c8",
                                "typeString": "literal_string \"mockUint\""
                              },
                              "value": "mockUint"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_94a02aa970f44cb624bd9f8f6d45117d09bef87e3b6959977c67468c9517e9c8",
                                "typeString": "literal_string \"mockUint\""
                              }
                            ],
                            "id": 734,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "987:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "987:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "973:35:9"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1023:35:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1038:3:9"
                                  },
                                  {
                                    "name": "mockUint",
                                    "nodeType": "YulIdentifier",
                                    "src": "1043:8:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1031:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1031:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1031:21:9"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 729,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1043:8:9",
                            "valueSize": 1
                          },
                          {
                            "declaration": 733,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1038:3:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 738,
                        "nodeType": "InlineAssembly",
                        "src": "1014:44:9"
                      }
                    ]
                  },
                  "functionSelector": "25a687bc",
                  "id": 740,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testStore",
                  "nameLocation": "929:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 730,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 729,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "948:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 740,
                        "src": "940:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 728,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:18:9"
                  },
                  "returnParameters": {
                    "id": 731,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "967:0:9"
                  },
                  "scope": 741,
                  "src": "920:142:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 742,
              "src": "91:973:9",
              "usedErrors": []
            }
          ],
          "src": "45:1019:9"
        },
        "id": 9
      },
      "@brinkninja/core/contracts/Test/TestERC20.sol": {
        "ast": {
          "absolutePath": "@brinkninja/core/contracts/Test/TestERC20.sol",
          "exportedSymbols": {
            "TestERC20": [
              1202
            ]
          },
          "id": 1203,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 743,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:10"
            },
            {
              "id": 744,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TestERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1202,
              "linearizedBaseContracts": [
                1202
              ],
              "name": "TestERC20",
              "nameLocation": "100:9:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "935e5e4a",
                  "id": 746,
                  "mutability": "mutable",
                  "name": "_broken",
                  "nameLocation": "126:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "114:19:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "114:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "06fdde03",
                  "id": 748,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "152:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "138:18:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "138:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "95d89b41",
                  "id": 750,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "174:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "160:20:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "313ce567",
                  "id": 753,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "197:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "184:26:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "3138",
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "208:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "18160ddd",
                  "id": 755,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "228:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "215:24:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "70a08231",
                  "id": 759,
                  "mutability": "mutable",
                  "name": "balanceOf",
                  "nameLocation": "275:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "243:41:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 758,
                    "keyType": {
                      "id": 756,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "251:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "243:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 757,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "262:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "dd62ed3e",
                  "id": 765,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nameLocation": "340:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "288:61:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 764,
                    "keyType": {
                      "id": 760,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "296:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "288:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 763,
                      "keyType": {
                        "id": 761,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "315:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "307:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 762,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "326:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3644e515",
                  "id": 767,
                  "mutability": "mutable",
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "369:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "354:31:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "30adf81f",
                  "id": 770,
                  "mutability": "constant",
                  "name": "PERMIT_TYPEHASH",
                  "nameLocation": "515:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "491:108:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "533:66:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
                      "typeString": "int_const 4995...(69 digits omitted)...3241"
                    },
                    "value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7ecebe00",
                  "id": 774,
                  "mutability": "mutable",
                  "name": "nonces",
                  "nameLocation": "635:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "603:38:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 773,
                    "keyType": {
                      "id": 771,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "611:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "603:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 772,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "622:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 782,
                  "name": "Approval",
                  "nameLocation": "652:8:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 776,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "677:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "661:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 775,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "661:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 778,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "700:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "684:23:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 777,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 780,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "714:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "709:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "660:60:10"
                  },
                  "src": "646:75:10"
                },
                {
                  "anonymous": false,
                  "id": 790,
                  "name": "Transfer",
                  "nameLocation": "730:8:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 784,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "755:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 790,
                        "src": "739:20:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 783,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "739:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 786,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "777:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 790,
                        "src": "761:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 785,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "761:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 788,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "786:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 790,
                        "src": "781:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 787,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "781:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "738:54:10"
                  },
                  "src": "724:69:10"
                },
                {
                  "body": {
                    "id": 843,
                    "nodeType": "Block",
                    "src": "871:412:10",
                    "statements": [
                      {
                        "assignments": [
                          800
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 800,
                            "mutability": "mutable",
                            "name": "chainId",
                            "nameLocation": "882:7:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 843,
                            "src": "877:12:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 799,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "877:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 801,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "877:12:10"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "904:34:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "912:20:10",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "chainid",
                                  "nodeType": "YulIdentifier",
                                  "src": "923:7:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "923:9:10"
                              },
                              "variableNames": [
                                {
                                  "name": "chainId",
                                  "nodeType": "YulIdentifier",
                                  "src": "912:7:10"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 800,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "912:7:10",
                            "valueSize": 1
                          }
                        ],
                        "id": 802,
                        "nodeType": "InlineAssembly",
                        "src": "895:43:10"
                      },
                      {
                        "expression": {
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 803,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "943:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                        "id": 808,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1009:84:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                        },
                                        "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                        }
                                      ],
                                      "id": 807,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "999:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "999:95:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 813,
                                            "name": "_name",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 792,
                                            "src": "1120:5:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "id": 812,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1114:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 811,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1114:5:10",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 814,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1114:12:10",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 810,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1104:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 815,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1104:23:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "31",
                                            "id": 819,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1153:3:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                              "typeString": "literal_string \"1\""
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                              "typeString": "literal_string \"1\""
                                            }
                                          ],
                                          "id": 818,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1147:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 817,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1147:5:10",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 820,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1147:10:10",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 816,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1137:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1137:21:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 822,
                                    "name": "chainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 800,
                                    "src": "1168:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 825,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1193:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TestERC20_$1202",
                                          "typeString": "contract TestERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TestERC20_$1202",
                                          "typeString": "contract TestERC20"
                                        }
                                      ],
                                      "id": 824,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1185:7:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 823,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1185:7:10",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 826,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1185:13:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 805,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "979:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "979:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "979:227:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 804,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "962:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "962:250:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "943:269:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 830,
                        "nodeType": "ExpressionStatement",
                        "src": "943:269:10"
                      },
                      {
                        "expression": {
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 831,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "1218:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 832,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "1225:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1218:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 834,
                        "nodeType": "ExpressionStatement",
                        "src": "1218:12:10"
                      },
                      {
                        "expression": {
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 835,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "1236:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 836,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "1245:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1236:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 838,
                        "nodeType": "ExpressionStatement",
                        "src": "1236:16:10"
                      },
                      {
                        "expression": {
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 839,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "1258:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 840,
                            "name": "_decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "1269:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1258:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 842,
                        "nodeType": "ExpressionStatement",
                        "src": "1258:20:10"
                      }
                    ]
                  },
                  "id": 844,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 797,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 792,
                        "mutability": "mutable",
                        "name": "_name",
                        "nameLocation": "824:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "810:19:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 791,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "810:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "_symbol",
                        "nameLocation": "845:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "831:21:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "831:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "_decimals",
                        "nameLocation": "860:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "854:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 795,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "854:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "809:61:10"
                  },
                  "returnParameters": {
                    "id": 798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "871:0:10"
                  },
                  "scope": 1202,
                  "src": "797:486:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 851,
                    "nodeType": "Block",
                    "src": "1315:25:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 847,
                            "name": "_broken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "1321:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1331:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1321:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 850,
                        "nodeType": "ExpressionStatement",
                        "src": "1321:14:10"
                      }
                    ]
                  },
                  "functionSelector": "6da309a7",
                  "id": 852,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "breakMe",
                  "nameLocation": "1296:7:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 845,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1303:2:10"
                  },
                  "returnParameters": {
                    "id": 846,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1315:0:10"
                  },
                  "scope": 1202,
                  "src": "1287:53:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 888,
                    "nodeType": "Block",
                    "src": "1391:168:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 860,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 854,
                                "src": "1405:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 863,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1419:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 862,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1411:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 861,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1411:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1411:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1405:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1423:33:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                "typeString": "literal_string \"ERC20: mint to the zero address\""
                              },
                              "value": "ERC20: mint to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                "typeString": "literal_string \"ERC20: mint to the zero address\""
                              }
                            ],
                            "id": 859,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1397:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1397:60:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "1397:60:10"
                      },
                      {
                        "expression": {
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 869,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "1464:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 870,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "1479:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1464:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 872,
                        "nodeType": "ExpressionStatement",
                        "src": "1464:20:10"
                      },
                      {
                        "expression": {
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 873,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "1490:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 875,
                            "indexExpression": {
                              "id": 874,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 854,
                              "src": "1500:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1490:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 876,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "1507:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1490:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 878,
                        "nodeType": "ExpressionStatement",
                        "src": "1490:22:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 882,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1540:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1532:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 880,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1532:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1532:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 884,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 854,
                              "src": "1544:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 885,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "1548:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 879,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "1523:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1523:31:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 887,
                        "nodeType": "EmitStatement",
                        "src": "1518:36:10"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 889,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "1353:4:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1366:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 889,
                        "src": "1358:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1358:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 856,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1375:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 889,
                        "src": "1370:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 855,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1370:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1357:24:10"
                  },
                  "returnParameters": {
                    "id": 858,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1391:0:10"
                  },
                  "scope": 1202,
                  "src": "1344:215:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "1612:176:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 897,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 891,
                                "src": "1626:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 900,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1642:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1634:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 898,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1634:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1634:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1626:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1646:35:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                                "typeString": "literal_string \"ERC20: burn from the zero address\""
                              },
                              "value": "ERC20: burn from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                                "typeString": "literal_string \"ERC20: burn from the zero address\""
                              }
                            ],
                            "id": 896,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1618:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1618:64:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 905,
                        "nodeType": "ExpressionStatement",
                        "src": "1618:64:10"
                      },
                      {
                        "expression": {
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 906,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "1689:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 908,
                            "indexExpression": {
                              "id": 907,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "1699:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1689:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 909,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 893,
                            "src": "1708:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1689:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 911,
                        "nodeType": "ExpressionStatement",
                        "src": "1689:24:10"
                      },
                      {
                        "expression": {
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 912,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "1719:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 913,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 893,
                            "src": "1734:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1719:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 915,
                        "nodeType": "ExpressionStatement",
                        "src": "1719:20:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 917,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "1759:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 920,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1773:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1765:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 918,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1765:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1765:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 922,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 893,
                              "src": "1777:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 916,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "1750:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1750:33:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 924,
                        "nodeType": "EmitStatement",
                        "src": "1745:38:10"
                      }
                    ]
                  },
                  "functionSelector": "9dc29fac",
                  "id": 926,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "1572:4:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 894,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 891,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1585:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "1577:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 890,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1577:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1596:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "1591:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1591:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1576:26:10"
                  },
                  "returnParameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1612:0:10"
                  },
                  "scope": 1202,
                  "src": "1563:225:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 944,
                    "nodeType": "Block",
                    "src": "1862:64:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 936,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1877:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1877:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 938,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "1889:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 939,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 930,
                              "src": "1898:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 935,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "1868:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1868:36:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 941,
                        "nodeType": "ExpressionStatement",
                        "src": "1868:36:10"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1917:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 934,
                        "id": 943,
                        "nodeType": "Return",
                        "src": "1910:11:10"
                      }
                    ]
                  },
                  "functionSelector": "095ea7b3",
                  "id": 945,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1801:7:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1817:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "1809:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1809:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1831:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "1826:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1826:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1808:29:10"
                  },
                  "returnParameters": {
                    "id": 934,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 933,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "1856:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 932,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1856:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1855:6:10"
                  },
                  "scope": 1202,
                  "src": "1792:134:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 963,
                    "nodeType": "Block",
                    "src": "1996:60:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 955,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2012:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2012:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 957,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "2024:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 958,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 949,
                              "src": "2028:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 954,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "2002:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2002:32:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 960,
                        "nodeType": "ExpressionStatement",
                        "src": "2002:32:10"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2047:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 953,
                        "id": 962,
                        "nodeType": "Return",
                        "src": "2040:11:10"
                      }
                    ]
                  },
                  "functionSelector": "a9059cbb",
                  "id": 964,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1939:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 950,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1956:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 964,
                        "src": "1948:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1948:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 949,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1965:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 964,
                        "src": "1960:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1960:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1947:24:10"
                  },
                  "returnParameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 964,
                        "src": "1990:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1990:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1989:6:10"
                  },
                  "scope": 1202,
                  "src": "1930:126:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1008,
                    "nodeType": "Block",
                    "src": "2144:261:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 976,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 966,
                              "src": "2160:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 977,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "2166:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 978,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "2170:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 975,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "2150:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2150:26:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 980,
                        "nodeType": "ExpressionStatement",
                        "src": "2150:26:10"
                      },
                      {
                        "assignments": [
                          982
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 982,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "2191:16:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1008,
                            "src": "2183:24:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 981,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2183:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 989,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 983,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "2210:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 985,
                            "indexExpression": {
                              "id": 984,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 966,
                              "src": "2220:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2210:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 988,
                          "indexExpression": {
                            "expression": {
                              "id": 986,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2226:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2226:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2210:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2183:54:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 991,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 982,
                                "src": "2251:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 992,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 970,
                                "src": "2271:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2251:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5465737445524332303a207472616e736665722076616c7565206578636565647320616c6c6f77616e6365",
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2278:45:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f0a524b242e98d9b97655aa2e914a646216e9dfc22a767485b87c821b538c563",
                                "typeString": "literal_string \"TestERC20: transfer value exceeds allowance\""
                              },
                              "value": "TestERC20: transfer value exceeds allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f0a524b242e98d9b97655aa2e914a646216e9dfc22a767485b87c821b538c563",
                                "typeString": "literal_string \"TestERC20: transfer value exceeds allowance\""
                              }
                            ],
                            "id": 990,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2243:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2243:81:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "2243:81:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 998,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 966,
                              "src": "2339:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 999,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2345:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2345:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1001,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 982,
                                "src": "2357:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1002,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 970,
                                "src": "2376:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2357:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 997,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "2330:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2330:52:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1005,
                        "nodeType": "ExpressionStatement",
                        "src": "2330:52:10"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2396:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 974,
                        "id": 1007,
                        "nodeType": "Return",
                        "src": "2389:11:10"
                      }
                    ]
                  },
                  "functionSelector": "23b872dd",
                  "id": 1009,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2069:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 971,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 966,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2090:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "2082:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 965,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2082:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2104:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "2096:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2096:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 970,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2113:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "2108:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 969,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2108:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2081:38:10"
                  },
                  "returnParameters": {
                    "id": 974,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 973,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "2138:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 972,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2138:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2137:6:10"
                  },
                  "scope": 1202,
                  "src": "2060:345:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "2524:479:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1027,
                                "name": "deadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1017,
                                "src": "2538:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1028,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2550:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2550:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2538:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45585049524544",
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2567:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
                                "typeString": "literal_string \"EXPIRED\""
                              },
                              "value": "EXPIRED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
                                "typeString": "literal_string \"EXPIRED\""
                              }
                            ],
                            "id": 1026,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2530:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2530:47:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1033,
                        "nodeType": "ExpressionStatement",
                        "src": "2530:47:10"
                      },
                      {
                        "assignments": [
                          1035
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1035,
                            "mutability": "mutable",
                            "name": "digest",
                            "nameLocation": "2591:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1087,
                            "src": "2583:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1034,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2583:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1057,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "1901",
                                  "id": 1039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2649:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  "value": "\u0019\u0001"
                                },
                                {
                                  "id": 1040,
                                  "name": "DOMAIN_SEPARATOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "2673:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1044,
                                          "name": "PERMIT_TYPEHASH",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 770,
                                          "src": "2724:15:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 1045,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1011,
                                          "src": "2741:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1046,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1013,
                                          "src": "2748:7:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1047,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1015,
                                          "src": "2757:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1051,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "++",
                                          "prefix": false,
                                          "src": "2764:15:10",
                                          "subExpression": {
                                            "baseExpression": {
                                              "id": 1048,
                                              "name": "nonces",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 774,
                                              "src": "2764:6:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 1050,
                                            "indexExpression": {
                                              "id": 1049,
                                              "name": "owner",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1011,
                                              "src": "2771:5:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "2764:13:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1052,
                                          "name": "deadline",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1017,
                                          "src": "2781:8:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1042,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "2713:3:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1043,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encode",
                                        "nodeType": "MemberAccess",
                                        "src": "2713:10:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1053,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2713:77:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1041,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "2703:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2703:88:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1037,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2619:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2619:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2619:182:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1036,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2600:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2600:207:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2583:224:10"
                      },
                      {
                        "assignments": [
                          1059
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1059,
                            "mutability": "mutable",
                            "name": "recoveredAddress",
                            "nameLocation": "2821:16:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1087,
                            "src": "2813:24:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1058,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2813:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1066,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1061,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1035,
                              "src": "2850:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1062,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "2858:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 1063,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "2861:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1064,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "2864:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1060,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "2840:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2840:26:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2813:53:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1068,
                                  "name": "recoveredAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1059,
                                  "src": "2880:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 1071,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2908:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 1070,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2900:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1069,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2900:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2900:10:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2880:30:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1074,
                                  "name": "recoveredAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1059,
                                  "src": "2914:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1075,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1011,
                                  "src": "2934:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2914:25:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2880:59:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e56414c49445f5349474e4154555245",
                              "id": 1078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2941:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88",
                                "typeString": "literal_string \"INVALID_SIGNATURE\""
                              },
                              "value": "INVALID_SIGNATURE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e2e9eaa2d734966dea0900deacd15b20129fbce05255d633a3ce5ebca181b88",
                                "typeString": "literal_string \"INVALID_SIGNATURE\""
                              }
                            ],
                            "id": 1067,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2872:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2872:89:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1080,
                        "nodeType": "ExpressionStatement",
                        "src": "2872:89:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1082,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1011,
                              "src": "2976:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1083,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1013,
                              "src": "2983:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1084,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1015,
                              "src": "2992:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1081,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "2967:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2967:31:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1086,
                        "nodeType": "ExpressionStatement",
                        "src": "2967:31:10"
                      }
                    ]
                  },
                  "functionSelector": "d505accf",
                  "id": 1088,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "2418:6:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1011,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2433:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "2425:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1010,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2425:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1013,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2448:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "2440:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1012,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1015,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2462:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "2457:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1014,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2457:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1017,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2474:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "2469:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1016,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1019,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "2490:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "2484:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2484:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2501:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "2493:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2493:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1023,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "2512:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1088,
                        "src": "2504:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2504:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2424:90:10"
                  },
                  "returnParameters": {
                    "id": 1025,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2524:0:10"
                  },
                  "scope": 1202,
                  "src": "2409:594:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1137,
                    "nodeType": "Block",
                    "src": "3077:297:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3091:8:10",
                              "subExpression": {
                                "id": 1098,
                                "name": "_broken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 746,
                                "src": "3092:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5465737445524332302e5f617070726f76653a20546f6b656e2069732062726f6b656e",
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3101:37:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bf6bfd02d298757bf2669cd64789fe479e83e93418dcd3584722f2d13065940c",
                                "typeString": "literal_string \"TestERC20._approve: Token is broken\""
                              },
                              "value": "TestERC20._approve: Token is broken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bf6bfd02d298757bf2669cd64789fe479e83e93418dcd3584722f2d13065940c",
                                "typeString": "literal_string \"TestERC20._approve: Token is broken\""
                              }
                            ],
                            "id": 1097,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3083:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3083:56:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1102,
                        "nodeType": "ExpressionStatement",
                        "src": "3083:56:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1104,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1090,
                                "src": "3153:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1107,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3170:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3162:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1105,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3162:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3162:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3153:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3174:38:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                                "typeString": "literal_string \"ERC20: approve from the zero address\""
                              },
                              "value": "ERC20: approve from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                                "typeString": "literal_string \"ERC20: approve from the zero address\""
                              }
                            ],
                            "id": 1103,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3145:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3145:68:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1112,
                        "nodeType": "ExpressionStatement",
                        "src": "3145:68:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1114,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1092,
                                "src": "3227:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1117,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3246:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3238:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1115,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3238:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3238:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3227:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3250:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                                "typeString": "literal_string \"ERC20: approve to the zero address\""
                              },
                              "value": "ERC20: approve to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                                "typeString": "literal_string \"ERC20: approve to the zero address\""
                              }
                            ],
                            "id": 1113,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3219:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3219:68:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1122,
                        "nodeType": "ExpressionStatement",
                        "src": "3219:68:10"
                      },
                      {
                        "expression": {
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1123,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 765,
                                "src": "3294:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1126,
                              "indexExpression": {
                                "id": 1124,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1090,
                                "src": "3304:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3294:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1127,
                            "indexExpression": {
                              "id": 1125,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1092,
                              "src": "3311:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3294:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1128,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "3322:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3294:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "3294:33:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1132,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1090,
                              "src": "3347:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1133,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1092,
                              "src": "3354:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1134,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1094,
                              "src": "3363:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1131,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "3338:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3338:31:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1136,
                        "nodeType": "EmitStatement",
                        "src": "3333:36:10"
                      }
                    ]
                  },
                  "id": 1138,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "3016:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1095,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3033:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "3025:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3025:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3048:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "3040:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3040:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1094,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3062:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "3057:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1093,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3057:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3024:44:10"
                  },
                  "returnParameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3077:0:10"
                  },
                  "scope": 1202,
                  "src": "3007:367:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1200,
                    "nodeType": "Block",
                    "src": "3443:388:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3457:8:10",
                              "subExpression": {
                                "id": 1148,
                                "name": "_broken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 746,
                                "src": "3458:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5465737445524332302e5f7472616e736665723a20546f6b656e2069732062726f6b656e",
                              "id": 1150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3467:38:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24b134d73c36183f324789f9779a0867134528af92a9ddbc71bf1dc20ce72030",
                                "typeString": "literal_string \"TestERC20._transfer: Token is broken\""
                              },
                              "value": "TestERC20._transfer: Token is broken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24b134d73c36183f324789f9779a0867134528af92a9ddbc71bf1dc20ce72030",
                                "typeString": "literal_string \"TestERC20._transfer: Token is broken\""
                              }
                            ],
                            "id": 1147,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3449:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3449:57:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1152,
                        "nodeType": "ExpressionStatement",
                        "src": "3449:57:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1154,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1140,
                                "src": "3520:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3536:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1156,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3528:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1155,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3528:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3528:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3520:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                              "id": 1160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3540:39:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                                "typeString": "literal_string \"ERC20: transfer from the zero address\""
                              },
                              "value": "ERC20: transfer from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                                "typeString": "literal_string \"ERC20: transfer from the zero address\""
                              }
                            ],
                            "id": 1153,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3512:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3512:68:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1162,
                        "nodeType": "ExpressionStatement",
                        "src": "3512:68:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1164,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1142,
                                "src": "3594:2:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3608:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1166,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3600:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1165,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3600:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3600:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3594:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3612:37:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                                "typeString": "literal_string \"ERC20: transfer to the zero address\""
                              },
                              "value": "ERC20: transfer to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                                "typeString": "literal_string \"ERC20: transfer to the zero address\""
                              }
                            ],
                            "id": 1163,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3586:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3586:64:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1172,
                        "nodeType": "ExpressionStatement",
                        "src": "3586:64:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1174,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 759,
                                  "src": "3664:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1176,
                                "indexExpression": {
                                  "id": 1175,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1140,
                                  "src": "3674:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3664:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1177,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1144,
                                "src": "3683:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3664:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3690:40:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                                "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                              },
                              "value": "ERC20: transfer amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                                "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                              }
                            ],
                            "id": 1173,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3656:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3656:75:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1181,
                        "nodeType": "ExpressionStatement",
                        "src": "3656:75:10"
                      },
                      {
                        "expression": {
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1182,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "3738:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1184,
                            "indexExpression": {
                              "id": 1183,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "3748:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3738:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1185,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1144,
                            "src": "3757:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3738:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1187,
                        "nodeType": "ExpressionStatement",
                        "src": "3738:24:10"
                      },
                      {
                        "expression": {
                          "id": 1192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1188,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "3768:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1190,
                            "indexExpression": {
                              "id": 1189,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1142,
                              "src": "3778:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3768:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1191,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1144,
                            "src": "3785:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3768:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1193,
                        "nodeType": "ExpressionStatement",
                        "src": "3768:22:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1195,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "3810:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1196,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1142,
                              "src": "3816:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1197,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1144,
                              "src": "3820:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1194,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "3801:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3801:25:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1199,
                        "nodeType": "EmitStatement",
                        "src": "3796:30:10"
                      }
                    ]
                  },
                  "id": 1201,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "3387:9:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1140,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3405:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "3397:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3397:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1142,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3419:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "3411:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3411:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1144,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3428:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "3423:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3423:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3396:38:10"
                  },
                  "returnParameters": {
                    "id": 1146,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3443:0:10"
                  },
                  "scope": 1202,
                  "src": "3378:453:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1203,
              "src": "91:3742:10",
              "usedErrors": []
            }
          ],
          "src": "45:3789:10"
        },
        "id": 10
      },
      "contracts/Test/Imports.sol": {
        "ast": {
          "absolutePath": "contracts/Test/Imports.sol",
          "exportedSymbols": {
            "Account": [
              234
            ],
            "AccountFactory": [
              270
            ],
            "AccountWithTestCalls": [
              637
            ],
            "ECDSA": [
              387
            ],
            "EIP1271Validator": [
              424
            ],
            "EIP712SignerRecovery": [
              477
            ],
            "IERC1271": [
              614
            ],
            "ISingletonFactory": [
              627
            ],
            "Imports": [
              1211
            ],
            "SaltedDeployer": [
              601
            ],
            "TestAccountCalls": [
              741
            ],
            "TestERC20": [
              1202
            ]
          },
          "id": 1212,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1204,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:11"
            },
            {
              "id": 1205,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:11"
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Account/Account.sol",
              "file": "@brinkninja/core/contracts/Account/Account.sol",
              "id": 1206,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1212,
              "sourceUnit": 235,
              "src": "91:56:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Account/AccountFactory.sol",
              "file": "@brinkninja/core/contracts/Account/AccountFactory.sol",
              "id": 1207,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1212,
              "sourceUnit": 271,
              "src": "148:63:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Deployers/SaltedDeployer.sol",
              "file": "@brinkninja/core/contracts/Deployers/SaltedDeployer.sol",
              "id": 1208,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1212,
              "sourceUnit": 602,
              "src": "212:65:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Test/AccountWithTestCalls.sol",
              "file": "@brinkninja/core/contracts/Test/AccountWithTestCalls.sol",
              "id": 1209,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1212,
              "sourceUnit": 638,
              "src": "278:66:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@brinkninja/core/contracts/Test/TestERC20.sol",
              "file": "@brinkninja/core/contracts/Test/TestERC20.sol",
              "id": 1210,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1212,
              "sourceUnit": 1203,
              "src": "345:55:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Imports",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1211,
              "linearizedBaseContracts": [
                1211
              ],
              "name": "Imports",
              "nameLocation": "411:7:11",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 1212,
              "src": "402:20:11",
              "usedErrors": []
            }
          ],
          "src": "45:378:11"
        },
        "id": 11
      }
    }
  }
}
