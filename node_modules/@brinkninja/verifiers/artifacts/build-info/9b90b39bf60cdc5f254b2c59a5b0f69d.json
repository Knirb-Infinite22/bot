{
  "id": "9b90b39bf60cdc5f254b2c59a5b0f69d",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/External/CallExecutor.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\n/**\n * @dev Used as a proxy for call execution to obscure msg.sender of the\n * caller. msg.sender will be the address of the CallExecutor contract.\n *\n * Instances of Proxy (user account contracts) use CallExecutor to execute\n * unsigned data calls without exposing themselves as msg.sender. Users can\n * sign messages that allow public unsigned data execution via CallExecutor\n * without allowing public calls to be executed directly from their Proxy\n * contract.\n *\n * This is implemented specifically for swap calls that allow unsigned data\n * execution. If unsigned data was executed directly from the Proxy contract,\n * an attacker could make a call that satisfies the swap required conditions\n * but also makes other malicious calls that rely on msg.sender. Forcing all\n * unsigned data execution to be done through a CallExecutor ensures that an\n * attacker cannot impersonate the users's account.\n *\n */\ncontract CallExecutor {\n  /**\n   * @dev A payable function that executes a call with `data` on the\n   * contract address `to`\n   *\n   * Sets value for the call to `callvalue`, the amount of Eth provided with\n   * the call\n   */\n  function proxyCall(address to, bytes memory data) external payable {\n    // execute `data` on execution contract address `to`\n    assembly {\n      let result := call(gas(), to, callvalue(), add(data, 0x20), mload(data), 0, 0)\n      returndatacopy(0, 0, returndatasize())\n      switch result\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/External/CallExecutor.sol": {
        "CallExecutor": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "proxyCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610118806100206000396000f3fe60806040526004361061001e5760003560e01c80632a31f6b414610023575b600080fd5b6100e66004803603604081101561003957600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561007157600080fd5b82018360208201111561008357600080fd5b803590602001918460018302840111640100000000831117156100a557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100e8945050505050565b005b60008082516020840134865af13d6000803e808015610106573d6000f35b3d6000fdfea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A31F6B4 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xE8 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD CALLVALUE DUP7 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x106 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "1003:651:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@proxyCall_13": {
                  "entryPoint": 232,
                  "id": 13,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361061001e5760003560e01c80632a31f6b414610023575b600080fd5b6100e66004803603604081101561003957600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561007157600080fd5b82018360208201111561008357600080fd5b803590602001918460018302840111640100000000831117156100a557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100e8945050505050565b005b60008082516020840134865af13d6000803e808015610106573d6000f35b3d6000fdfea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A31F6B4 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xE8 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD CALLVALUE DUP7 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x106 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "1003:651:0:-:0;;;;;;;;;;;;;;;;;;;;;1233:419;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1233:419:0;;-1:-1:-1;1233:419:0;;-1:-1:-1;;;;;1233:419:0:i;:::-;;;1456:1;1453;1446:4;1440:11;1433:4;1427;1423:15;1410:11;1406:2;1399:5;1394:64;1486:16;1483:1;1480;1465:38;1517:6;1530:52;;;;1617:16;1614:1;1607:27;1530:52;1557:16;1554:1;1547:27"
            },
            "methodIdentifiers": {
              "proxyCall(address,bytes)": "2a31f6b4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"proxyCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Used as a proxy for call execution to obscure msg.sender of the caller. msg.sender will be the address of the CallExecutor contract. Instances of Proxy (user account contracts) use CallExecutor to execute unsigned data calls without exposing themselves as msg.sender. Users can sign messages that allow public unsigned data execution via CallExecutor without allowing public calls to be executed directly from their Proxy contract. This is implemented specifically for swap calls that allow unsigned data execution. If unsigned data was executed directly from the Proxy contract, an attacker could make a call that satisfies the swap required conditions but also makes other malicious calls that rely on msg.sender. Forcing all unsigned data execution to be done through a CallExecutor ensures that an attacker cannot impersonate the users's account.\",\"kind\":\"dev\",\"methods\":{\"proxyCall(address,bytes)\":{\"details\":\"A payable function that executes a call with `data` on the contract address `to` Sets value for the call to `callvalue`, the amount of Eth provided with the call\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/External/CallExecutor.sol\":\"CallExecutor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/External/CallExecutor.sol\":{\"keccak256\":\"0x0abf56a09fe3767e46bfa2c715516be1f13cc58fbb6127a8c0b3c01a6fdd3afa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e8cf1341e78a2eac0f0ff594ded8c2a0373601c0c7906d83bb9a6887f808d9ff\",\"dweb:/ipfs/Qma6DdsGxfWFjFPAKRCgZwohzVPhwiZgYCZYCXYgCer3ZW\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/External/CallExecutor.sol": {
        "ast": {
          "absolutePath": "contracts/External/CallExecutor.sol",
          "exportedSymbols": {
            "CallExecutor": [
              14
            ]
          },
          "id": 15,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:0"
            },
            {
              "id": 2,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "CallExecutor",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "91:911:0",
                "text": " @dev Used as a proxy for call execution to obscure msg.sender of the\n caller. msg.sender will be the address of the CallExecutor contract.\n Instances of Proxy (user account contracts) use CallExecutor to execute\n unsigned data calls without exposing themselves as msg.sender. Users can\n sign messages that allow public unsigned data execution via CallExecutor\n without allowing public calls to be executed directly from their Proxy\n contract.\n This is implemented specifically for swap calls that allow unsigned data\n execution. If unsigned data was executed directly from the Proxy contract,\n an attacker could make a call that satisfies the swap required conditions\n but also makes other malicious calls that rely on msg.sender. Forcing all\n unsigned data execution to be done through a CallExecutor ensures that an\n attacker cannot impersonate the users's account."
              },
              "fullyImplemented": true,
              "id": 14,
              "linearizedBaseContracts": [
                14
              ],
              "name": "CallExecutor",
              "nameLocation": "1012:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 12,
                    "nodeType": "Block",
                    "src": "1300:352:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1372:276:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1380:78:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "1399:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1399:5:0"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "1406:2:0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "callvalue",
                                      "nodeType": "YulIdentifier",
                                      "src": "1410:9:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1410:11:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "1427:4:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1433:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1423:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1423:15:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "1446:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1440:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1440:11:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1453:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1456:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "1394:4:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1394:64:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "1384:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1480:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1483:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1486:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1486:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1465:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1465:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1465:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1537:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1554:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1557:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1557:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "1547:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1547:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1547:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1530:52:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1535:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1597:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1614:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1617:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1617:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "1607:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1607:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1607:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1589:53:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "1517:6:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "1510:132:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 8,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1427:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 8,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1446:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 6,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1406:2:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 11,
                        "nodeType": "InlineAssembly",
                        "src": "1363:285:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "1029:201:0",
                    "text": " @dev A payable function that executes a call with `data` on the\n contract address `to`\n Sets value for the call to `callvalue`, the amount of Eth provided with\n the call"
                  },
                  "functionSelector": "2a31f6b4",
                  "id": 13,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxyCall",
                  "nameLocation": "1242:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1260:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "1252:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1252:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1277:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "1264:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1264:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1251:31:0"
                  },
                  "returnParameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1300:0:0"
                  },
                  "scope": 14,
                  "src": "1233:419:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 15,
              "src": "1003:651:0",
              "usedErrors": []
            }
          ],
          "src": "45:1610:0"
        },
        "id": 0
      }
    }
  }
}
