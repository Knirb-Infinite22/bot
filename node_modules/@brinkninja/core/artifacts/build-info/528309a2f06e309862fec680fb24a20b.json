{
  "id": "528309a2f06e309862fec680fb24a20b",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Test/MockEIP1271Validator.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\ncontract ISignatureValidatorConstants {\n  // bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n  bytes4 internal constant EIP1271_MAGIC_VALUE = 0x20c13b0b;\n}\n\nabstract contract ISignatureValidator is ISignatureValidatorConstants {\n  function isValidSignature(bytes memory _data, bytes memory _signature) public view virtual returns (bytes4);\n}\n\n/// implements some very basic EIP1271 validation for use in tests. Testing it with the backward compat pattern\n/// that GnosisSafe is using just to be extra sure that our Account implementation of EIP1271 checks is compatible.\n/// (https://github.com/gnosis/safe-contracts/blob/main/contracts/handler/CompatibilityFallbackHandler.sol)\ncontract MockEIP1271Validator is ISignatureValidator {\n  bytes4 internal constant UPDATED_MAGIC_VALUE = 0x1626ba7e;\n\n  mapping(bytes32 => bool) _validDataHash;\n  mapping(bytes32 => bool) _validSigHashes;\n\n  function isValidSignature(bytes calldata _data, bytes calldata _signature) public view override returns (bytes4) {\n    if (_validDataHash[keccak256(_data)] == true && _validSigHashes[keccak256(_signature)] == true) {\n      return EIP1271_MAGIC_VALUE;\n    } else {\n      return 0xffffffff;\n    }\n  }\n\n  function isValidSignature(bytes32 _dataHash, bytes calldata _signature) public view returns (bytes4) {\n    ISignatureValidator validator = ISignatureValidator(msg.sender);\n    bytes4 value = validator.isValidSignature(abi.encode(_dataHash), _signature);\n    return (value == EIP1271_MAGIC_VALUE) ? UPDATED_MAGIC_VALUE : bytes4(0);\n  }\n\n  function setValidSignature(bytes32 _dataHash, bytes calldata _signature) external {\n    _validDataHash[keccak256(abi.encode(_dataHash))] = true;\n    _validSigHashes[keccak256(_signature)] = true;\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Test/MockEIP1271Validator.sol": {
        "ISignatureValidator": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "isValidSignature",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "isValidSignature(bytes,bytes)": "20c13b0b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test/MockEIP1271Validator.sol\":\"ISignatureValidator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Test/MockEIP1271Validator.sol\":{\"keccak256\":\"0x8eaeaf716f2874a36c3193ca2920681ec3e9198a5c7a4c1c096f81fa8f0beb10\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://cb5717fd64726be7386f10a1f11433c90191af8ea545e0a7fb5f6bf6e680cf6f\",\"dweb:/ipfs/QmUPAR3tGScKEBDjy4j93ArAQoYnVoA5rDjKQzvNRsbfuv\"]}},\"version\":1}"
        },
        "ISignatureValidatorConstants": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50601680601d6000396000f3fe6080604052600080fdfea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x16 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "91:157:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "91:157:0:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test/MockEIP1271Validator.sol\":\"ISignatureValidatorConstants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Test/MockEIP1271Validator.sol\":{\"keccak256\":\"0x8eaeaf716f2874a36c3193ca2920681ec3e9198a5c7a4c1c096f81fa8f0beb10\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://cb5717fd64726be7386f10a1f11433c90191af8ea545e0a7fb5f6bf6e680cf6f\",\"dweb:/ipfs/QmUPAR3tGScKEBDjy4j93ArAQoYnVoA5rDjKQzvNRsbfuv\"]}},\"version\":1}"
        },
        "MockEIP1271Validator": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "isValidSignature",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "isValidSignature",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_dataHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "setValidSignature",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610480806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631626ba7e146100465780631974e2c4146100da57806320c13b0b14610153575b600080fd5b6100bd6004803603604081101561005c57600080fd5b8135919081019060408101602082013564010000000081111561007e57600080fd5b82018360208201111561009057600080fd5b803590602001918460018302840111640100000000831117156100b257600080fd5b509092509050610215565b604080516001600160e01b03199092168252519081900360200190f35b610151600480360360408110156100f057600080fd5b8135919081019060408101602082013564010000000081111561011257600080fd5b82018360208201111561012457600080fd5b8035906020019184600183028401116401000000008311171561014657600080fd5b509092509050610353565b005b6100bd6004803603604081101561016957600080fd5b81019060208101813564010000000081111561018457600080fd5b82018360208201111561019657600080fd5b803590602001918460018302840111640100000000831117156101b857600080fd5b9193909290916020810190356401000000008111156101d657600080fd5b8201836020820111156101e857600080fd5b8035906020019184600183028401116401000000008311171561020a57600080fd5b5090925090506103d2565b6040805160208082018690528251808303820181528284018085526320c13b0b60e01b9052604483019384528051608484015280516000943394869486946320c13b0b9490938b938b9391928392606483019260a40191908801908083838e5b8381101561028d578181015183820152602001610275565b50505050905090810190601f1680156102ba5780820380516001836020036101000a031916815260200191505b508381038252848152602001858580828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381865afa158015610307573d6000803e3d6000fd5b505050506040513d602081101561031d57600080fd5b505190506001600160e01b031981166320c13b0b60e01b14610340576000610349565b630b135d3f60e11b5b9695505050505050565b604080516020808201869052825180830382018152918301808452825192820192909220600090815290819052918220805460ff19166001908117909155918291859085908083838082843760408051919093018190039020865250602085019590955250505001600020805460ff1916911515919091179055505050565b600080600086866040518083838082843760408051939091018390039092208652506020850195909552505050016000205460ff161515600114801561044d57506001600084846040518083838082843760408051939091018390039092208652506020850195909552505050016000205460ff1615156001145b1561046057506320c13b0b60e01b61046b565b506001600160e01b03195b94935050505056fea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x480 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x1974E2C4 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE DUP3 DUP5 ADD DUP1 DUP6 MSTORE PUSH4 0x20C13B0B PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x44 DUP4 ADD SWAP4 DUP5 MSTORE DUP1 MLOAD PUSH1 0x84 DUP5 ADD MSTORE DUP1 MLOAD PUSH1 0x0 SWAP5 CALLER SWAP5 DUP7 SWAP5 DUP7 SWAP5 PUSH4 0x20C13B0B SWAP5 SWAP1 SWAP4 DUP12 SWAP4 DUP12 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x64 DUP4 ADD SWAP3 PUSH1 0xA4 ADD SWAP2 SWAP1 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 DUP15 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x275 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x20C13B0B PUSH1 0xE0 SHL EQ PUSH2 0x340 JUMPI PUSH1 0x0 PUSH2 0x349 JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD DUP1 DUP5 MSTORE DUP3 MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 DUP3 SWAP2 DUP6 SWAP1 DUP6 SWAP1 DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB SWAP1 KECCAK256 DUP7 MSTORE POP PUSH1 0x20 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP POP ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP4 SWAP1 SWAP2 ADD DUP4 SWAP1 SUB SWAP1 SWAP3 KECCAK256 DUP7 MSTORE POP PUSH1 0x20 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP POP ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x44D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP4 SWAP1 SWAP2 ADD DUP4 SWAP1 SUB SWAP1 SWAP3 KECCAK256 DUP7 MSTORE POP PUSH1 0x20 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP POP ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x460 JUMPI POP PUSH4 0x20C13B0B PUSH1 0xE0 SHL PUSH2 0x46B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "772:1048:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@isValidSignature_105": {
                  "entryPoint": 533,
                  "id": 105,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@isValidSignature_65": {
                  "entryPoint": 978,
                  "id": 65,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@setValidSignature_132": {
                  "entryPoint": 851,
                  "id": 132,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631626ba7e146100465780631974e2c4146100da57806320c13b0b14610153575b600080fd5b6100bd6004803603604081101561005c57600080fd5b8135919081019060408101602082013564010000000081111561007e57600080fd5b82018360208201111561009057600080fd5b803590602001918460018302840111640100000000831117156100b257600080fd5b509092509050610215565b604080516001600160e01b03199092168252519081900360200190f35b610151600480360360408110156100f057600080fd5b8135919081019060408101602082013564010000000081111561011257600080fd5b82018360208201111561012457600080fd5b8035906020019184600183028401116401000000008311171561014657600080fd5b509092509050610353565b005b6100bd6004803603604081101561016957600080fd5b81019060208101813564010000000081111561018457600080fd5b82018360208201111561019657600080fd5b803590602001918460018302840111640100000000831117156101b857600080fd5b9193909290916020810190356401000000008111156101d657600080fd5b8201836020820111156101e857600080fd5b8035906020019184600183028401116401000000008311171561020a57600080fd5b5090925090506103d2565b6040805160208082018690528251808303820181528284018085526320c13b0b60e01b9052604483019384528051608484015280516000943394869486946320c13b0b9490938b938b9391928392606483019260a40191908801908083838e5b8381101561028d578181015183820152602001610275565b50505050905090810190601f1680156102ba5780820380516001836020036101000a031916815260200191505b508381038252848152602001858580828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381865afa158015610307573d6000803e3d6000fd5b505050506040513d602081101561031d57600080fd5b505190506001600160e01b031981166320c13b0b60e01b14610340576000610349565b630b135d3f60e11b5b9695505050505050565b604080516020808201869052825180830382018152918301808452825192820192909220600090815290819052918220805460ff19166001908117909155918291859085908083838082843760408051919093018190039020865250602085019590955250505001600020805460ff1916911515919091179055505050565b600080600086866040518083838082843760408051939091018390039092208652506020850195909552505050016000205460ff161515600114801561044d57506001600084846040518083838082843760408051939091018390039092208652506020850195909552505050016000205460ff1615156001145b1561046057506320c13b0b60e01b61046b565b506001600160e01b03195b94935050505056fea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x1974E2C4 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE DUP3 DUP5 ADD DUP1 DUP6 MSTORE PUSH4 0x20C13B0B PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x44 DUP4 ADD SWAP4 DUP5 MSTORE DUP1 MLOAD PUSH1 0x84 DUP5 ADD MSTORE DUP1 MLOAD PUSH1 0x0 SWAP5 CALLER SWAP5 DUP7 SWAP5 DUP7 SWAP5 PUSH4 0x20C13B0B SWAP5 SWAP1 SWAP4 DUP12 SWAP4 DUP12 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x64 DUP4 ADD SWAP3 PUSH1 0xA4 ADD SWAP2 SWAP1 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 DUP15 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x275 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2BA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x20C13B0B PUSH1 0xE0 SHL EQ PUSH2 0x340 JUMPI PUSH1 0x0 PUSH2 0x349 JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD DUP1 DUP5 MSTORE DUP3 MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 DUP3 SWAP2 DUP6 SWAP1 DUP6 SWAP1 DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB SWAP1 KECCAK256 DUP7 MSTORE POP PUSH1 0x20 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP POP ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP4 SWAP1 SWAP2 ADD DUP4 SWAP1 SUB SWAP1 SWAP3 KECCAK256 DUP7 MSTORE POP PUSH1 0x20 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP POP ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x44D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 DUP1 MLOAD SWAP4 SWAP1 SWAP2 ADD DUP4 SWAP1 SUB SWAP1 SWAP3 KECCAK256 DUP7 MSTORE POP PUSH1 0x20 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP POP ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0x460 JUMPI POP PUSH4 0x20C13B0B PUSH1 0xE0 SHL PUSH2 0x46B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "772:1048:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1281:334;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1281:334:0;;-1:-1:-1;1281:334:0;-1:-1:-1;1281:334:0;:::i;:::-;;;;-1:-1:-1;;;;;;1281:334:0;;;;;;;;;;;;;;1619:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1619:199:0;;-1:-1:-1;1619:199:0;-1:-1:-1;1619:199:0;:::i;:::-;;979:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;979:298:0;;-1:-1:-1;979:298:0;-1:-1:-1;979:298:0;:::i;1281:334::-;1499:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1472:61:0;;;;;;;;;;;;;;;;1374:6;;1440:10;;1374:6;;1440:10;;1472:26;;1499:21;;1522:10;;;;1472:61;;;;;;;;;;;;;;;;;;1374:6;1472:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1472:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1472:61:0;;-1:-1:-1;;;;;;;1547:28:0;;-1:-1:-1;;;1547:28:0;1546:64;;1608:1;1546:64;;;-1:-1:-1;;;1546:64:0;1539:71;1281:334;-1:-1:-1;;;;;;1281:334:0:o;1619:199::-;1732:21;;;;;;;;;;;;;;;;;;;;;;;;;1722:32;;;;;;;;;1707:14;:48;;;;;;;;;;:55;;-1:-1:-1;;1707:55:0;1758:4;1707:55;;;;;;1758:4;;;1794:10;;;;1732:21;1794:10;;;;1732:21;1784;;;;;;;;;;;;;1768:38;;-1:-1:-1;1768:38:0;;;;;;;-1:-1:-1;;;1768:38:0;-1:-1:-1;1768:38:0;:45;;-1:-1:-1;;1768:45:0;;;;;;;;;;-1:-1:-1;;;1619:199:0:o;979:298::-;1084:6;1102:14;:32;1127:5;;1117:16;;;;;;;;;;;;;;;;;;;;;;1102:32;;-1:-1:-1;1102:32:0;;;;;;;-1:-1:-1;;;1102:32:0;-1:-1:-1;1102:32:0;;;;:40;;:32;:40;:90;;;;;1146:15;:38;1172:10;;1162:21;;;;;;;;;;;;;;;;;;;;;;1146:38;;-1:-1:-1;1146:38:0;;;;;;;-1:-1:-1;;;1146:38:0;-1:-1:-1;1146:38:0;;;;:46;;:38;:46;1102:90;1098:175;;;-1:-1:-1;;;;1202:26:0;;1098:175;-1:-1:-1;;;;;;;1098:175:0;979:298;;;;;;:::o"
            },
            "methodIdentifiers": {
              "isValidSignature(bytes,bytes)": "20c13b0b",
              "isValidSignature(bytes32,bytes)": "1626ba7e",
              "setValidSignature(bytes32,bytes)": "1974e2c4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"setValidSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"implements some very basic EIP1271 validation for use in tests. Testing it with the backward compat pattern that GnosisSafe is using just to be extra sure that our Account implementation of EIP1271 checks is compatible. (https://github.com/gnosis/safe-contracts/blob/main/contracts/handler/CompatibilityFallbackHandler.sol)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test/MockEIP1271Validator.sol\":\"MockEIP1271Validator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Test/MockEIP1271Validator.sol\":{\"keccak256\":\"0x8eaeaf716f2874a36c3193ca2920681ec3e9198a5c7a4c1c096f81fa8f0beb10\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://cb5717fd64726be7386f10a1f11433c90191af8ea545e0a7fb5f6bf6e680cf6f\",\"dweb:/ipfs/QmUPAR3tGScKEBDjy4j93ArAQoYnVoA5rDjKQzvNRsbfuv\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/Test/MockEIP1271Validator.sol": {
        "ast": {
          "absolutePath": "contracts/Test/MockEIP1271Validator.sol",
          "exportedSymbols": {
            "ISignatureValidator": [
              18
            ],
            "ISignatureValidatorConstants": [
              6
            ],
            "MockEIP1271Validator": [
              133
            ]
          },
          "id": 134,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:0"
            },
            {
              "id": 2,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISignatureValidatorConstants",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 6,
              "linearizedBaseContracts": [
                6
              ],
              "name": "ISignatureValidatorConstants",
              "nameLocation": "100:28:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 5,
                  "mutability": "constant",
                  "name": "EIP1271_MAGIC_VALUE",
                  "nameLocation": "213:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 6,
                  "src": "188:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30783230633133623062",
                    "id": 4,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "235:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_549534475_by_1",
                      "typeString": "int_const 549534475"
                    },
                    "value": "0x20c13b0b"
                  },
                  "visibility": "internal"
                }
              ],
              "scope": 134,
              "src": "91:157:0",
              "usedErrors": []
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 7,
                    "name": "ISignatureValidatorConstants",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 6,
                    "src": "291:28:0"
                  },
                  "id": 8,
                  "nodeType": "InheritanceSpecifier",
                  "src": "291:28:0"
                }
              ],
              "canonicalName": "ISignatureValidator",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": false,
              "id": 18,
              "linearizedBaseContracts": [
                18,
                6
              ],
              "name": "ISignatureValidator",
              "nameLocation": "268:19:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "20c13b0b",
                  "id": 17,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidSignature",
                  "nameLocation": "333:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 10,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "363:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "350:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 9,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "350:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 12,
                        "mutability": "mutable",
                        "name": "_signature",
                        "nameLocation": "383:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "370:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "370:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "349:45:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "424:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "424:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "423:8:0"
                  },
                  "scope": 18,
                  "src": "324:108:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 134,
              "src": "250:184:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 20,
                    "name": "ISignatureValidator",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 18,
                    "src": "805:19:0"
                  },
                  "id": 21,
                  "nodeType": "InheritanceSpecifier",
                  "src": "805:19:0"
                }
              ],
              "canonicalName": "MockEIP1271Validator",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 19,
                "nodeType": "StructuredDocumentation",
                "src": "436:336:0",
                "text": "implements some very basic EIP1271 validation for use in tests. Testing it with the backward compat pattern\n that GnosisSafe is using just to be extra sure that our Account implementation of EIP1271 checks is compatible.\n (https://github.com/gnosis/safe-contracts/blob/main/contracts/handler/CompatibilityFallbackHandler.sol)"
              },
              "fullyImplemented": true,
              "id": 133,
              "linearizedBaseContracts": [
                133,
                18,
                6
              ],
              "name": "MockEIP1271Validator",
              "nameLocation": "781:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 24,
                  "mutability": "constant",
                  "name": "UPDATED_MAGIC_VALUE",
                  "nameLocation": "854:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "829:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30783136323662613765",
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "876:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_371636862_by_1",
                      "typeString": "int_const 371636862"
                    },
                    "value": "0x1626ba7e"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_validDataHash",
                  "nameLocation": "916:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "891:39:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "typeName": {
                    "id": 27,
                    "keyType": {
                      "id": 25,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "899:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "891:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                      "typeString": "mapping(bytes32 => bool)"
                    },
                    "valueType": {
                      "id": 26,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "910:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_validSigHashes",
                  "nameLocation": "959:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "934:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "typeName": {
                    "id": 31,
                    "keyType": {
                      "id": 29,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "942:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "934:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                      "typeString": "mapping(bytes32 => bool)"
                    },
                    "valueType": {
                      "id": 30,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "953:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    17
                  ],
                  "body": {
                    "id": 64,
                    "nodeType": "Block",
                    "src": "1092:185:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 42,
                                "name": "_validDataHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "1102:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                  "typeString": "mapping(bytes32 => bool)"
                                }
                              },
                              "id": 46,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 44,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34,
                                    "src": "1127:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 43,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1117:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 45,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1117:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1102:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "74727565",
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1138:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "1102:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 49,
                                "name": "_validSigHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "1146:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                  "typeString": "mapping(bytes32 => bool)"
                                }
                              },
                              "id": 53,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "_signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36,
                                    "src": "1172:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 50,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1162:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1162:21:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1146:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "74727565",
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1188:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "1146:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1102:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 62,
                          "nodeType": "Block",
                          "src": "1241:32:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30786666666666666666",
                                "id": 60,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1256:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4294967295_by_1",
                                  "typeString": "int_const 4294967295"
                                },
                                "value": "0xffffffff"
                              },
                              "functionReturnParameters": 41,
                              "id": 61,
                              "nodeType": "Return",
                              "src": "1249:17:0"
                            }
                          ]
                        },
                        "id": 63,
                        "nodeType": "IfStatement",
                        "src": "1098:175:0",
                        "trueBody": {
                          "id": 59,
                          "nodeType": "Block",
                          "src": "1194:41:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 57,
                                "name": "EIP1271_MAGIC_VALUE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5,
                                "src": "1209:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "functionReturnParameters": 41,
                              "id": 58,
                              "nodeType": "Return",
                              "src": "1202:26:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "20c13b0b",
                  "id": 65,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidSignature",
                  "nameLocation": "988:16:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 38,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1066:8:0"
                  },
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "1020:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 65,
                        "src": "1005:20:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1005:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "_signature",
                        "nameLocation": "1042:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 65,
                        "src": "1027:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1027:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1004:49:0"
                  },
                  "returnParameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 65,
                        "src": "1084:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1084:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1083:8:0"
                  },
                  "scope": 133,
                  "src": "979:298:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 104,
                    "nodeType": "Block",
                    "src": "1382:233:0",
                    "statements": [
                      {
                        "assignments": [
                          76
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 76,
                            "mutability": "mutable",
                            "name": "validator",
                            "nameLocation": "1408:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 104,
                            "src": "1388:29:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISignatureValidator_$18",
                              "typeString": "contract ISignatureValidator"
                            },
                            "typeName": {
                              "id": 75,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 74,
                                "name": "ISignatureValidator",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 18,
                                "src": "1388:19:0"
                              },
                              "referencedDeclaration": 18,
                              "src": "1388:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISignatureValidator_$18",
                                "typeString": "contract ISignatureValidator"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 81,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 78,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1440:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1440:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 77,
                            "name": "ISignatureValidator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1420:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISignatureValidator_$18_$",
                              "typeString": "type(contract ISignatureValidator)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1420:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISignatureValidator_$18",
                            "typeString": "contract ISignatureValidator"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1388:63:0"
                      },
                      {
                        "assignments": [
                          83
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 83,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "1464:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 104,
                            "src": "1457:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "1457:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 92,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 88,
                                  "name": "_dataHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "1510:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 86,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1499:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "1499:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1499:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 90,
                              "name": "_signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "1522:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 84,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "1472:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISignatureValidator_$18",
                                "typeString": "contract ISignatureValidator"
                              }
                            },
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isValidSignature",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17,
                            "src": "1472:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (bytes memory,bytes memory) view external returns (bytes4)"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1472:61:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1457:76:0"
                      },
                      {
                        "expression": {
                          "condition": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 93,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83,
                                  "src": "1547:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 94,
                                  "name": "EIP1271_MAGIC_VALUE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5,
                                  "src": "1556:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "1547:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 96,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1546:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1608:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1601:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              },
                              "typeName": {
                                "id": 98,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "1601:6:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1601:9:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "1546:64:0",
                          "trueExpression": {
                            "id": 97,
                            "name": "UPDATED_MAGIC_VALUE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1579:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 73,
                        "id": 103,
                        "nodeType": "Return",
                        "src": "1539:71:0"
                      }
                    ]
                  },
                  "functionSelector": "1626ba7e",
                  "id": 105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidSignature",
                  "nameLocation": "1290:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "_dataHash",
                        "nameLocation": "1315:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "1307:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1307:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "_signature",
                        "nameLocation": "1341:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "1326:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1326:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1306:46:0"
                  },
                  "returnParameters": {
                    "id": 73,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 72,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "1374:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1374:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1373:8:0"
                  },
                  "scope": 133,
                  "src": "1281:334:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 131,
                    "nodeType": "Block",
                    "src": "1701:117:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 112,
                              "name": "_validDataHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1707:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 119,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 116,
                                      "name": "_dataHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "1743:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 114,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1732:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 115,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "1732:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 117,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1732:21:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 113,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1722:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1722:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1707:48:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1758:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1707:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 122,
                        "nodeType": "ExpressionStatement",
                        "src": "1707:55:0"
                      },
                      {
                        "expression": {
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 123,
                              "name": "_validSigHashes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1768:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 127,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 125,
                                  "name": "_signature",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1794:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                ],
                                "id": 124,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1784:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1784:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1768:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1809:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1768:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "1768:45:0"
                      }
                    ]
                  },
                  "functionSelector": "1974e2c4",
                  "id": 132,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setValidSignature",
                  "nameLocation": "1628:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "_dataHash",
                        "nameLocation": "1654:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "1646:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1646:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "_signature",
                        "nameLocation": "1680:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "1665:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1665:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1645:46:0"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1701:0:0"
                  },
                  "scope": 133,
                  "src": "1619:199:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 134,
              "src": "772:1048:0",
              "usedErrors": []
            }
          ],
          "src": "45:1776:0"
        },
        "id": 0
      }
    }
  }
}
