{
  "id": "234b5e090e0d953a5c32b29154e3498e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Account/Account.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"./EIP712SignerRecovery.sol\";\nimport \"./EIP1271Validator.sol\";\n\n/// @title Brink account core\n/// @notice Deployed once and used by many proxy contracts as the implementation contract. External functions in this\n/// contract are intended to be called by `delegatecall` from proxy contracts deployed by AccountFactory.\ncontract Account is EIP712SignerRecovery, EIP1271Validator {\n  /// @dev Revert if signer of a transaction or EIP712 message signer is not the proxy owner\n  /// @param signer The address that is not the owner\n  error NotOwner(address signer);\n\n  /// @dev Revert if EIP1271 hash and signature is invalid\n  /// @param hash Hash of the data to be validated\n  /// @param signature Signature byte array associated with hash\n  error InvalidSignature(bytes32 hash, bytes signature);\n\n  /// @dev Revert if the Account.sol implementation contract is called directly\n  error NotDelegateCall();\n\n  /// @dev Typehash for signed metaDelegateCall() messages\n  bytes32 internal immutable META_DELEGATE_CALL_TYPEHASH;\n\n  /// @dev Typehash for signed metaDelegateCall_EIP1271() messages\n  bytes32 internal immutable META_DELEGATE_CALL_EIP1271_TYPEHASH;\n\n  /// @dev Deployment address of the implementation Account.sol contract. Used to enforce onlyDelegateCallable.\n  address internal immutable deploymentAddress = address(this);\n\n  /// @dev Used by external functions to revert if they are called directly on the implementation Account.sol contract\n  modifier onlyDelegateCallable() {\n    if (address(this) == deploymentAddress) {\n      revert NotDelegateCall();\n    }\n    _;\n  }\n\n  /// @dev Constructor sets immutable constants\n  constructor() { \n    META_DELEGATE_CALL_TYPEHASH = keccak256(\"MetaDelegateCall(address to,bytes data)\");\n    META_DELEGATE_CALL_EIP1271_TYPEHASH = keccak256(\"MetaDelegateCall_EIP1271(address to,bytes data)\");\n  }\n\n  /// @dev Makes a call to an external contract\n  /// @dev Only executable directly by the proxy owner\n  /// @param value Amount of wei to send with the call\n  /// @param to Address of the external contract to call\n  /// @param data Call data to execute\n  function externalCall(uint256 value, address to, bytes memory data) external payable onlyDelegateCallable {\n    if (proxyOwner() != msg.sender) {\n      revert NotOwner(msg.sender);\n    }\n\n    assembly {\n      let result := call(gas(), to, value, add(data, 0x20), mload(data), 0, 0)\n      returndatacopy(0, 0, returndatasize())\n      switch result\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n\n  /// @dev Makes a delegatecall to an external contract\n  /// @param to Address of the external contract to delegatecall\n  /// @param data Call data to execute\n  function delegateCall(address to, bytes memory data) external payable onlyDelegateCallable {\n    if (proxyOwner() != msg.sender) {\n      revert NotOwner(msg.sender);\n    }\n\n    assembly {\n      let result := delegatecall(gas(), to, add(data, 0x20), mload(data), 0, 0)\n      returndatacopy(0, 0, returndatasize())\n      switch result\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n\n  /// @dev Allows execution of a delegatecall with a valid signature from the proxyOwner. Uses EIP-712\n  /// (https://github.com/ethereum/EIPs/pull/712) signer recovery.\n  /// @param to Address of the external contract to delegatecall, signed by the proxyOwner\n  /// @param data Call data to include in the delegatecall, signed by the proxyOwner\n  /// @param signature Signature of the proxyOwner\n  /// @param unsignedData Unsigned call data appended to the delegatecall\n  /// @notice WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded\n  /// `callData`. If the proxyOwner signs a delegatecall to a malicious contract, this could result in total loss of\n  /// their account.\n  function metaDelegateCall(\n    address to, bytes calldata data, bytes calldata signature, bytes calldata unsignedData\n  ) external payable onlyDelegateCallable {\n    address signer = _recoverSigner(\n      keccak256(abi.encode(META_DELEGATE_CALL_TYPEHASH, to, keccak256(data))),\n      signature\n    );\n    if (proxyOwner() != signer) {\n      revert NotOwner(signer);\n    }\n\n    bytes memory callData = abi.encodePacked(data, unsignedData);\n\n    assembly {\n      let result := delegatecall(gas(), to, add(callData, 0x20), mload(callData), 0, 0)\n      returndatacopy(0, 0, returndatasize())\n      switch result\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n\n  /// @dev Allows execution of a delegatecall if proxyOwner is a smart contract. Uses EIP-1271\n  /// (https://eips.ethereum.org/EIPS/eip-1271) signer validation.\n  /// @param to Address of the external contract to delegatecall, validated by the proxyOwner contract\n  /// @param data Call data to include in the delegatecall, validated by the proxyOwner contract\n  /// @param signature Signature that will be validated by the proxyOwner contract\n  /// @param unsignedData Unsigned call data appended to the delegatecall\n  /// @notice WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded\n  /// `callData`. If the proxyOwner contract validates a delegatecall to a malicious contract, this could result in\n  /// total loss of the account.\n  function metaDelegateCall_EIP1271(\n    address to, bytes calldata data, bytes calldata signature, bytes calldata unsignedData\n  ) external payable onlyDelegateCallable {\n    bytes32 hash = keccak256(abi.encode(META_DELEGATE_CALL_EIP1271_TYPEHASH, to, keccak256(data)));\n    if(!_isValidSignature(proxyOwner(), hash, signature)) {\n      revert InvalidSignature(hash, signature);\n    }\n\n    bytes memory callData = abi.encodePacked(data, unsignedData);\n\n    assembly {\n      let result := delegatecall(gas(), to, add(callData, 0x20), mload(callData), 0, 0)\n      returndatacopy(0, 0, returndatasize())\n      switch result\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n\n  /// @dev Returns the owner address for the proxy\n  /// @return _proxyOwner The owner address for the proxy\n  function proxyOwner() internal view returns (address _proxyOwner) {\n    assembly {\n      // copies to \"scratch space\" 0 memory pointer\n      extcodecopy(address(), 0, 0x28, 0x14)\n      _proxyOwner := shr(0x60, mload(0))\n    }\n  }\n\n  receive() external payable { }\n}\n"
      },
      "contracts/Account/EIP712SignerRecovery.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"./ECDSA.sol\";\n\n/// @title Provides signer address recovery for EIP-712 signed messages\n/// @notice https://github.com/ethereum/EIPs/pull/712\nabstract contract EIP712SignerRecovery {\n  /// @dev Recovers the signer address for an EIP-712 signed message\n  /// @param dataHash Hash of the data included in the message\n  /// @param signature An EIP-712 signature\n  function _recoverSigner(bytes32 dataHash, bytes calldata signature) internal view returns (address) {\n    // generate the hash for the signed message\n    bytes32 messageHash = keccak256(abi.encodePacked(\n      \"\\x19\\x01\",\n      // hash the EIP712 domain separator\n      keccak256(abi.encode(\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n        keccak256(\"BrinkAccount\"),\n        keccak256(\"1\"),\n        block.chainid,\n        address(this)\n      )),\n      dataHash\n    ));\n\n    // recover the signer address from the signed messageHash and return\n    return ECDSA.recover(messageHash, signature);\n  }\n}\n"
      },
      "contracts/Account/EIP1271Validator.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"../Interfaces/IERC1271.sol\";\n\n/// @title Provides a validation check on a signer contract that implements EIP-1271\n/// @notice https://github.com/ethereum/EIPs/issues/1271\nabstract contract EIP1271Validator {\n\n  bytes4 constant internal MAGICVALUE = bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"));\n\n  /**\n   * @dev Should return whether the signature provided is valid for the provided hash\n   * @param signer Address of a contract that implements EIP-1271\n   * @param hash Hash of the data to be validated\n   * @param signature Signature byte array associated with hash\n   */ \n  function _isValidSignature(address signer, bytes32 hash, bytes calldata signature) internal view returns (bool) {\n    return IERC1271(signer).isValidSignature(hash, signature) == MAGICVALUE;\n  }\n}\n"
      },
      "contracts/Account/ECDSA.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        // Check the signature length\n        if (signature.length != 65) {\n            revert(\"ECDSA: invalid signature length\");\n        }\n\n        // Divide the signature in r, s and v variables\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        // ecrecover takes the signature parameters, and the only way to get them\n        // currently is to use assembly.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        return recover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover-bytes32-bytes-} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        require(uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0, \"ECDSA: invalid signature 's' value\");\n        require(v == 27 || v == 28, \"ECDSA: invalid signature 'v' value\");\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        require(signer != address(0), \"ECDSA: invalid signature\");\n\n        return signer;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * replicates the behavior of the\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\n     * JSON-RPC method.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n}\n"
      },
      "contracts/Interfaces/IERC1271.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\ninterface IERC1271 {\n  function isValidSignature(bytes32 _hash, bytes memory _signature) external view returns (bytes4 magicValue);\n}\n"
      },
      "contracts/Test/AccountWithTestCalls.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"../Account/Account.sol\";\nimport \"./TestAccountCalls.sol\";\n\nabstract contract AccountWithTestCalls is Account, TestAccountCalls {\n\n}\n"
      },
      "contracts/Test/TestAccountCalls.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\ncontract TestAccountCalls {\n  bool private _called;\n\n  event ExecutedTestCall();\n  event MockParamEvent(uint256 mockUint);\n  event MockParamsEvent(uint256 mockUint, int24 mockInt, address mockAddress);\n\n  function testRevert(bool forceRevert) external {\n    require(!forceRevert, \"TestAccountCalls: reverted\");\n    _called = true;\n    emit ExecutedTestCall();\n  }\n\n  function testTransferETH (uint256 amount, address recipient) external {\n    bool success;\n    (success, ) = recipient.call{value: amount}(\"\");\n    require(success, \"TestAccountCalls: testTransferETH call failed\");\n  }\n\n  function testEvent (uint256 mockUint) external {\n    emit MockParamEvent(mockUint);\n  }\n\n  function testEvent (uint256 mockUint, int24 mockInt, address mockAddress) external {\n    emit MockParamsEvent(mockUint, mockInt, mockAddress);\n  }\n\n  function testStore (uint256 mockUint) external {\n    bytes32 ptr = keccak256('mockUint');\n    assembly {\n      sstore(ptr, mockUint)\n    }\n  }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Account/Account.sol": {
        "Account": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "InvalidSignature",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotDelegateCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "name": "NotOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "delegateCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "externalCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "unsignedData",
                  "type": "bytes"
                }
              ],
              "name": "metaDelegateCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "unsignedData",
                  "type": "bytes"
                }
              ],
              "name": "metaDelegateCall_EIP1271",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_70": {
                  "entryPoint": null,
                  "id": 70,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60e06040523060c05234801561001457600080fd5b507f023ce5d01636bb12b4ffde3c4f5a66fb1044aa0dbc251394e60f0a26f15910436080527f1d3b50d88adeb95016e86033ab418b64b7ecd66b70783b0dca7b0afc8bfb8a1e60a05260805160a05160c051610c3c6100a16000396000818161041501528181610593015281816106cb0152610769015260006105d60152600061045b0152610c3c6000f3fe6080604052600436106100435760003560e01c80631f6f42021461004f5780632867a68d1461017557806356e7b7aa14610299578063bbfeeeb51461034f57600080fd5b3661004a57005b600080fd5b6101736004803603608081101561006557600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561009057600080fd5b8201836020820111156100a257600080fd5b803590602001918460018302840111640100000000831117156100c457600080fd5b9193909290916020810190356401000000008111156100e257600080fd5b8201836020820111156100f457600080fd5b8035906020019184600183028401116401000000008311171561011657600080fd5b91939092909160208101903564010000000081111561013457600080fd5b82018360208201111561014657600080fd5b8035906020019184600183028401116401000000008311171561016857600080fd5b50909250905061040a565b005b6101736004803603608081101561018b57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101b657600080fd5b8201836020820111156101c857600080fd5b803590602001918460018302840111640100000000831117156101ea57600080fd5b91939092909160208101903564010000000081111561020857600080fd5b82018360208201111561021a57600080fd5b8035906020019184600183028401116401000000008311171561023c57600080fd5b91939092909160208101903564010000000081111561025a57600080fd5b82018360208201111561026c57600080fd5b8035906020019184600183028401116401000000008311171561028e57600080fd5b509092509050610588565b610173600480360360408110156102af57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106c0945050505050565b6101736004803603606081101561036557600080fd5b8135916001600160a01b036020820135169181019060608101604082013564010000000081111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460018302840111640100000000831117156103c957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061075e945050505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610454576040516327844c6960e11b815260040160405180910390fd5b60006104de7f0000000000000000000000000000000000000000000000000000000000000000898989604051808383808284378083019250505092505050604051809103902060405160200180848152602001836001600160a01b0316815260200182815260200193505050506040516020818303038152906040528051906020012086866107fd565b9050806001600160a01b03166104f261091a565b6001600160a01b031614610529576040805163245aecd360e01b81526001600160a01b038316600482015290519081900360240190fd5b600087878585604051602001808585808284379190910190508383808284378083019250505094505050505060405160208183030381529060405290506000808251602084018c5af43d6000803e808015610583573d6000f35b3d6000fd5b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105d2576040516327844c6960e11b815260040160405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000888888604051808383808284378083019250505092505050604051809103902060405160200180848152602001836001600160a01b03168152602001828152602001935050505060405160208183030381529060405280519060200120905061066761065f61091a565b82878761092e565b61052957808585604051638f4a234f60e01b815260040180848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050fd5b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561070a576040516327844c6960e11b815260040160405180910390fd5b3361071361091a565b6001600160a01b031614610741576040805163245aecd360e01b815233600482015290519081900360240190fd5b600080825160208401855af43d6000803e808015610583573d6000f35b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107a8576040516327844c6960e11b815260040160405180910390fd5b336107b161091a565b6001600160a01b0316146107df576040805163245aecd360e01b815233600482015290519081900360240190fd5b60008082516020840186865af13d6000803e808015610583573d6000f35b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6020808301919091527f977bbc96a0db0d97b4b08241f0db5937a7503966a121e611507f9a616f95651f828401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a0808401919091528351808403909101815260c08301845280519082012061190160f01b60e084015260e2830152610102808301879052835180840390910181526101228301808552815191830191909120610142601f8701849004909302840183019094528481526000939261091192849291889188918291018382808284376000920191909152506109f692505050565b95945050505050565b6000601460286000303c5060005160601c90565b60408051630b135d3f60e11b80825260048201868152602483019384526044830185905260009391926001600160a01b03891692631626ba7e9289928992899291606401848480828437600083820152604051601f909101601f19169092019650602095509093505050818403905081865afa1580156109b2573d6000803e3d6000fd5b505050506040513d60208110156109c857600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000161495945050505050565b60008151604114610a4e576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a610a6c86828585610a76565b9695505050505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610ad75760405162461bcd60e51b8152600401808060200182810382526022815260200180610bec6022913960400191505060405180910390fd5b8360ff16601b1480610aec57508360ff16601c145b610b275760405162461bcd60e51b8152600401808060200182810382526022815260200180610c0e6022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610b83573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610911576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fdfe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a164736f6c634300080a000a",
              "opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0xC0 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x23CE5D01636BB12B4FFDE3C4F5A66FB1044AA0DBC251394E60F0A26F1591043 PUSH1 0x80 MSTORE PUSH32 0x1D3B50D88ADEB95016E86033AB418B64B7ECD66B70783B0DCA7B0AFC8BFB8A1E PUSH1 0xA0 MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0xC3C PUSH2 0xA1 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x415 ADD MSTORE DUP2 DUP2 PUSH2 0x593 ADD MSTORE DUP2 DUP2 PUSH2 0x6CB ADD MSTORE PUSH2 0x769 ADD MSTORE PUSH1 0x0 PUSH2 0x5D6 ADD MSTORE PUSH1 0x0 PUSH2 0x45B ADD MSTORE PUSH2 0xC3C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F6F4202 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x2867A68D EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x56E7B7AA EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xBBFEEEB5 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x40A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x588 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6C0 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x75E SWAP5 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4DE PUSH32 0x0 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 DUP7 PUSH2 0x7FD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F2 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x529 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP6 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP1 POP DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP13 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x667 PUSH2 0x65F PUSH2 0x91A JUMP JUMPDEST DUP3 DUP8 DUP8 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x529 JUMPI DUP1 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH4 0x8F4A234F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x713 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP6 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x7B1 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 DUP7 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x977BBC96A0DB0D97B4B08241F0DB5937A7503966A121E611507F9A616F95651F DUP3 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 DUP4 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE2 DUP4 ADD MSTORE PUSH2 0x102 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x122 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x142 PUSH1 0x1F DUP8 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP5 DUP2 MSTORE PUSH1 0x0 SWAP4 SWAP3 PUSH2 0x911 SWAP3 DUP5 SWAP3 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP3 SWAP2 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x9F6 SWAP3 POP POP POP JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x28 PUSH1 0x0 ADDRESS EXTCODECOPY POP PUSH1 0x0 MLOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0x44 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP3 PUSH4 0x1626BA7E SWAP3 DUP10 SWAP3 DUP10 SWAP3 DUP10 SWAP3 SWAP2 PUSH1 0x64 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD SWAP7 POP PUSH1 0x20 SWAP6 POP SWAP1 SWAP4 POP POP POP DUP2 DUP5 SUB SWAP1 POP DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0xA4E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xA6C DUP7 DUP3 DUP6 DUP6 PUSH2 0xA76 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBEC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xAEC JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xB27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC0E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x911 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "416:6255:0:-:0;;;1421:4;1366:60;;1730:212;;;;;;;;;-1:-1:-1;1781:52:0;1751:82;;1877:60;1839:98;;416:6255;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_233": {
                  "entryPoint": null,
                  "id": 233,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_isValidSignature_387": {
                  "entryPoint": 2350,
                  "id": 387,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@_recoverSigner_440": {
                  "entryPoint": 2045,
                  "id": 440,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@delegateCall_120": {
                  "entryPoint": 1728,
                  "id": 120,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@externalCall_96": {
                  "entryPoint": 1886,
                  "id": 96,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@metaDelegateCall_170": {
                  "entryPoint": 1034,
                  "id": 170,
                  "parameterSlots": 7,
                  "returnSlots": 0
                },
                "@metaDelegateCall_EIP1271_221": {
                  "entryPoint": 1416,
                  "id": 221,
                  "parameterSlots": 7,
                  "returnSlots": 0
                },
                "@proxyOwner_229": {
                  "entryPoint": 2330,
                  "id": 229,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@recover_276": {
                  "entryPoint": 2550,
                  "id": 276,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@recover_333": {
                  "entryPoint": 2678,
                  "id": 333,
                  "parameterSlots": 4,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "27": [
                  {
                    "length": 32,
                    "start": 1115
                  }
                ],
                "30": [
                  {
                    "length": 32,
                    "start": 1494
                  }
                ],
                "37": [
                  {
                    "length": 32,
                    "start": 1045
                  },
                  {
                    "length": 32,
                    "start": 1427
                  },
                  {
                    "length": 32,
                    "start": 1739
                  },
                  {
                    "length": 32,
                    "start": 1897
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436106100435760003560e01c80631f6f42021461004f5780632867a68d1461017557806356e7b7aa14610299578063bbfeeeb51461034f57600080fd5b3661004a57005b600080fd5b6101736004803603608081101561006557600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561009057600080fd5b8201836020820111156100a257600080fd5b803590602001918460018302840111640100000000831117156100c457600080fd5b9193909290916020810190356401000000008111156100e257600080fd5b8201836020820111156100f457600080fd5b8035906020019184600183028401116401000000008311171561011657600080fd5b91939092909160208101903564010000000081111561013457600080fd5b82018360208201111561014657600080fd5b8035906020019184600183028401116401000000008311171561016857600080fd5b50909250905061040a565b005b6101736004803603608081101561018b57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101b657600080fd5b8201836020820111156101c857600080fd5b803590602001918460018302840111640100000000831117156101ea57600080fd5b91939092909160208101903564010000000081111561020857600080fd5b82018360208201111561021a57600080fd5b8035906020019184600183028401116401000000008311171561023c57600080fd5b91939092909160208101903564010000000081111561025a57600080fd5b82018360208201111561026c57600080fd5b8035906020019184600183028401116401000000008311171561028e57600080fd5b509092509050610588565b610173600480360360408110156102af57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156102da57600080fd5b8201836020820111156102ec57600080fd5b8035906020019184600183028401116401000000008311171561030e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106c0945050505050565b6101736004803603606081101561036557600080fd5b8135916001600160a01b036020820135169181019060608101604082013564010000000081111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460018302840111640100000000831117156103c957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061075e945050505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610454576040516327844c6960e11b815260040160405180910390fd5b60006104de7f0000000000000000000000000000000000000000000000000000000000000000898989604051808383808284378083019250505092505050604051809103902060405160200180848152602001836001600160a01b0316815260200182815260200193505050506040516020818303038152906040528051906020012086866107fd565b9050806001600160a01b03166104f261091a565b6001600160a01b031614610529576040805163245aecd360e01b81526001600160a01b038316600482015290519081900360240190fd5b600087878585604051602001808585808284379190910190508383808284378083019250505094505050505060405160208183030381529060405290506000808251602084018c5af43d6000803e808015610583573d6000f35b3d6000fd5b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105d2576040516327844c6960e11b815260040160405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000888888604051808383808284378083019250505092505050604051809103902060405160200180848152602001836001600160a01b03168152602001828152602001935050505060405160208183030381529060405280519060200120905061066761065f61091a565b82878761092e565b61052957808585604051638f4a234f60e01b815260040180848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050fd5b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561070a576040516327844c6960e11b815260040160405180910390fd5b3361071361091a565b6001600160a01b031614610741576040805163245aecd360e01b815233600482015290519081900360240190fd5b600080825160208401855af43d6000803e808015610583573d6000f35b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107a8576040516327844c6960e11b815260040160405180910390fd5b336107b161091a565b6001600160a01b0316146107df576040805163245aecd360e01b815233600482015290519081900360240190fd5b60008082516020840186865af13d6000803e808015610583573d6000f35b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6020808301919091527f977bbc96a0db0d97b4b08241f0db5937a7503966a121e611507f9a616f95651f828401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a0808401919091528351808403909101815260c08301845280519082012061190160f01b60e084015260e2830152610102808301879052835180840390910181526101228301808552815191830191909120610142601f8701849004909302840183019094528481526000939261091192849291889188918291018382808284376000920191909152506109f692505050565b95945050505050565b6000601460286000303c5060005160601c90565b60408051630b135d3f60e11b80825260048201868152602483019384526044830185905260009391926001600160a01b03891692631626ba7e9289928992899291606401848480828437600083820152604051601f909101601f19169092019650602095509093505050818403905081865afa1580156109b2573d6000803e3d6000fd5b505050506040513d60208110156109c857600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000161495945050505050565b60008151604114610a4e576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a610a6c86828585610a76565b9695505050505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610ad75760405162461bcd60e51b8152600401808060200182810382526022815260200180610bec6022913960400191505060405180910390fd5b8360ff16601b1480610aec57508360ff16601c145b610b275760405162461bcd60e51b8152600401808060200182810382526022815260200180610c0e6022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610b83573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610911576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fdfe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F6F4202 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x2867A68D EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x56E7B7AA EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xBBFEEEB5 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x40A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x588 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6C0 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x75E SWAP5 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4DE PUSH32 0x0 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 DUP7 PUSH2 0x7FD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F2 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x529 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP6 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP1 POP DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP13 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP1 DUP4 ADD SWAP3 POP POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x667 PUSH2 0x65F PUSH2 0x91A JUMP JUMPDEST DUP3 DUP8 DUP8 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x529 JUMPI DUP1 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH4 0x8F4A234F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x713 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP6 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27844C69 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x7B1 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x245AECD3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD DUP7 DUP7 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x977BBC96A0DB0D97B4B08241F0DB5937A7503966A121E611507F9A616F95651F DUP3 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 DUP4 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE2 DUP4 ADD MSTORE PUSH2 0x102 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x122 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x142 PUSH1 0x1F DUP8 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP5 DUP2 MSTORE PUSH1 0x0 SWAP4 SWAP3 PUSH2 0x911 SWAP3 DUP5 SWAP3 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP3 SWAP2 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x9F6 SWAP3 POP POP POP JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x28 PUSH1 0x0 ADDRESS EXTCODECOPY POP PUSH1 0x0 MLOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0x44 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP3 PUSH4 0x1626BA7E SWAP3 DUP10 SWAP3 DUP10 SWAP3 DUP10 SWAP3 SWAP2 PUSH1 0x64 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD SWAP7 POP PUSH1 0x20 SWAP6 POP SWAP1 SWAP4 POP POP POP DUP2 DUP5 SUB SWAP1 POP DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0xA4E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xA6C DUP7 DUP3 DUP6 DUP6 PUSH2 0xA76 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBEC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xAEC JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xB27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC0E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x911 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "416:6255:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:736;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4025:736:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4025:736:0;;-1:-1:-1;4025:736:0;-1:-1:-1;4025:736:0;:::i;:::-;;5545:748;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5545:748:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5545:748:0;;-1:-1:-1;5545:748:0;-1:-1:-1;5545:748:0;:::i;2839:461::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2839:461:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2839:461:0;;-1:-1:-1;2839:461:0;;-1:-1:-1;;;;;2839:461:0:i;2200:475::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2200:475:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2200:475:0;;-1:-1:-1;2200:475:0;;-1:-1:-1;;;;;2200:475:0:i;4025:736::-;1600:4;-1:-1:-1;;;;;1609:17:0;1592:34;;1588:79;;;1643:17;;-1:-1:-1;;;1643:17:0;;;;;;;;;;;1588:79;4191:14:::1;4208:116;4251:27;4280:2;4294:4;;4284:15;;;;;;;;;;;;;;;;;;;;;;;;;;;4240:60;;;;;;;;;;;-1:-1:-1::0;;;;;4240:60:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;4230:71;;;;;;4309:9;;4208:14;:116::i;:::-;4191:133;;4350:6;-1:-1:-1::0;;;;;4334:22:0::1;:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;4334:22:0::1;;4330:66;;4373:16;::::0;;-1:-1:-1;;;4373:16:0;;-1:-1:-1;;;;;4373:16:0;::::1;;::::0;::::1;::::0;;;;;;;;;;::::1;4330:66;4402:21;4443:4;;4449:12;;4426:36;;;;;;;;;;;::::0;;;::::1;::::0;-1:-1:-1;4426:36:0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;4402:60;;4565:1;4562::::0;4551:8:::1;4545:15;4538:4;4528:8;4524:19;4520:2;4513:5;4500:67;4595:16;4592:1;4589::::0;4574:38:::1;4626:6:::0;4639:52;;::::1;;4726:16;4723:1;4716:27;4639:52;4666:16;4663:1;4656:27;5545:748:::0;1600:4;-1:-1:-1;;;;;1609:17:0;1592:34;;1588:79;;;1643:17;;-1:-1:-1;;;1643:17:0;;;;;;;;;;;1588:79;5719:12:::1;5755:35;5792:2;5806:4;;5796:15;;;;;;;;;;;;;;;;;;;;;;;;;;;5744:68;;;;;;;;;;;-1:-1:-1::0;;;;;5744:68:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;5734:79;;;;;;5719:94;;5823:48;5841:12;:10;:12::i;:::-;5855:4;5861:9;;5823:17;:48::i;:::-;5819:109;;5905:4;5911:9;;5888:33;;-1:-1:-1::0;;;5888:33:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;5888:33:0::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;5888:33:0;;-1:-1:-1;;;;;5888:33:0::1;2839:461:::0;1600:4;-1:-1:-1;;;;;1609:17:0;1592:34;;1588:79;;;1643:17;;-1:-1:-1;;;1643:17:0;;;;;;;;;;;1588:79;2956:10:::1;2940:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;2940:26:0::1;;2936:74;;2983:20;::::0;;-1:-1:-1;;;2983:20:0;;2992:10:::1;2983:20;::::0;::::1;::::0;;;;;;;;;;::::1;2936:74;3104:1;3101::::0;3094:4:::1;3088:11;3081:4;3075;3071:15;3067:2;3060:5;3047:59;3134:16;3131:1;3128::::0;3113:38:::1;3165:6:::0;3178:52;;::::1;;3265:16;3262:1;3255:27;2200:475:::0;1600:4;-1:-1:-1;;;;;1609:17:0;1592:34;;1588:79;;;1643:17;;-1:-1:-1;;;1643:17:0;;;;;;;;;;;1588:79;2332:10:::1;2316:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;2316:26:0::1;;2312:74;;2359:20;::::0;;-1:-1:-1;;;2359:20:0;;2368:10:::1;2359:20;::::0;::::1;::::0;;;;;;;;;;::::1;2312:74;2479:1;2476::::0;2469:4:::1;2463:11;2456:4;2450;2446:15;2439:5;2435:2;2428:5;2423:58;2509:16;2506:1;2503::::0;2488:38:::1;2540:6:::0;2553:52;;::::1;;2640:16;2637:1;2630:27;459:661:3::0;739:228;;;759:95;739:228;;;;;;;;864:25;739:228;;;;899:14;739:228;;;;923:13;739:228;;;;954:4;739:228;;;;;;;;;;;;;;;;;;;;;;;729:239;;;;;;-1:-1:-1;;;645:345:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:356;;;;;;;;;1078:37;;;;;;;;;;;;;;;;;;;;550:7;;635:356;1078:37;;635:356;;645:345;1105:9;;;;;;1078:37;1105:9;;;;1078:37;;;;;;;;;-1:-1:-1;1078:13:3;;-1:-1:-1;;;1078:37:3:i;:::-;1071:44;459:661;-1:-1:-1;;;;;459:661:3:o;6406:229:0:-;6451:19;6579:4;6573;6570:1;6559:9;6547:37;-1:-1:-1;6622:1:0;6616:8;6610:4;6606:19;;6406:229::o;685:194:2:-;810:50;;;-1:-1:-1;;;810:50:2;;;;;;;;;;;;;;;;;;;;;791:4;;810:64;;-1:-1:-1;;;;;810:33:2;;;;;844:4;;850:9;;;;810:50;;;850:9;;;;810:50;;;;;;;;;;;;;-1:-1:-1;;810:50:2;;;;;-1:-1:-1;810:50:2;;-1:-1:-1;810:50:2;;-1:-1:-1;;;810:50:2;;;;-1:-1:-1;810:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;810:50:2;:64;;;;685:194;-1:-1:-1;;;;;685:194:2:o;1097:740:1:-;1175:7;1236:9;:16;1256:2;1236:22;1232:94;;1274:41;;;-1:-1:-1;;;1274:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:94;1676:4;1661:20;;1655:27;1721:4;1706:20;;1700:27;1774:4;1759:20;;1753:27;1392:9;1745:36;1808:22;1816:4;1745:36;1655:27;1700;1808:7;:22::i;:::-;1801:29;1097:740;-1:-1:-1;;;;;;1097:740:1:o;1985:1414::-;2070:7;2985:66;2971:80;;;2963:127;;;;-1:-1:-1;;;2963:127:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3108:1;:7;;3113:2;3108:7;:18;;;;3119:1;:7;;3124:2;3119:7;3108:18;3100:65;;;;-1:-1:-1;;;3100:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3260:14;3277:24;3287:4;3293:1;3296;3299;3277:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3277:24:1;;-1:-1:-1;;3277:24:1;;;-1:-1:-1;;;;;;;3319:20:1;;3311:57;;;;;-1:-1:-1;;;3311:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "delegateCall(address,bytes)": "56e7b7aa",
              "externalCall(uint256,address,bytes)": "bbfeeeb5",
              "metaDelegateCall(address,bytes,bytes,bytes)": "1f6f4202",
              "metaDelegateCall_EIP1271(address,bytes,bytes,bytes)": "2867a68d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDelegateCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"unsignedData\",\"type\":\"bytes\"}],\"name\":\"metaDelegateCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"unsignedData\",\"type\":\"bytes\"}],\"name\":\"metaDelegateCall_EIP1271\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidSignature(bytes32,bytes)\":[{\"details\":\"Revert if EIP1271 hash and signature is invalid\",\"params\":{\"hash\":\"Hash of the data to be validated\",\"signature\":\"Signature byte array associated with hash\"}}],\"NotDelegateCall()\":[{\"details\":\"Revert if the Account.sol implementation contract is called directly\"}],\"NotOwner(address)\":[{\"details\":\"Revert if signer of a transaction or EIP712 message signer is not the proxy owner\",\"params\":{\"signer\":\"The address that is not the owner\"}}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor sets immutable constants\"},\"delegateCall(address,bytes)\":{\"details\":\"Makes a delegatecall to an external contract\",\"params\":{\"data\":\"Call data to execute\",\"to\":\"Address of the external contract to delegatecall\"}},\"externalCall(uint256,address,bytes)\":{\"details\":\"Makes a call to an external contractOnly executable directly by the proxy owner\",\"params\":{\"data\":\"Call data to execute\",\"to\":\"Address of the external contract to call\",\"value\":\"Amount of wei to send with the call\"}},\"metaDelegateCall(address,bytes,bytes,bytes)\":{\"details\":\"Allows execution of a delegatecall with a valid signature from the proxyOwner. Uses EIP-712 (https://github.com/ethereum/EIPs/pull/712) signer recovery.\",\"params\":{\"data\":\"Call data to include in the delegatecall, signed by the proxyOwner\",\"signature\":\"Signature of the proxyOwner\",\"to\":\"Address of the external contract to delegatecall, signed by the proxyOwner\",\"unsignedData\":\"Unsigned call data appended to the delegatecall\"}},\"metaDelegateCall_EIP1271(address,bytes,bytes,bytes)\":{\"details\":\"Allows execution of a delegatecall if proxyOwner is a smart contract. Uses EIP-1271 (https://eips.ethereum.org/EIPS/eip-1271) signer validation.\",\"params\":{\"data\":\"Call data to include in the delegatecall, validated by the proxyOwner contract\",\"signature\":\"Signature that will be validated by the proxyOwner contract\",\"to\":\"Address of the external contract to delegatecall, validated by the proxyOwner contract\",\"unsignedData\":\"Unsigned call data appended to the delegatecall\"}}},\"stateVariables\":{\"META_DELEGATE_CALL_EIP1271_TYPEHASH\":{\"details\":\"Typehash for signed metaDelegateCall_EIP1271() messages\"},\"META_DELEGATE_CALL_TYPEHASH\":{\"details\":\"Typehash for signed metaDelegateCall() messages\"},\"deploymentAddress\":{\"details\":\"Deployment address of the implementation Account.sol contract. Used to enforce onlyDelegateCallable.\"}},\"title\":\"Brink account core\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"metaDelegateCall(address,bytes,bytes,bytes)\":{\"notice\":\"WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded `callData`. If the proxyOwner signs a delegatecall to a malicious contract, this could result in total loss of their account.\"},\"metaDelegateCall_EIP1271(address,bytes,bytes,bytes)\":{\"notice\":\"WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded `callData`. If the proxyOwner contract validates a delegatecall to a malicious contract, this could result in total loss of the account.\"}},\"notice\":\"Deployed once and used by many proxy contracts as the implementation contract. External functions in this contract are intended to be called by `delegatecall` from proxy contracts deployed by AccountFactory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Account/Account.sol\":\"Account\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Account/Account.sol\":{\"keccak256\":\"0xbe5ec06df0259ff1402de372166ef35f8a6fccf70fdda8e568eb51f266f0a4d7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387fdb06efb55f40c8240d627d743bfbcf7d36148b87a1ed2a9455940a45d69\",\"dweb:/ipfs/QmQ4QR5n5w3zqh4xz8t46kkFRCUcNyKRqM8v9ire8u7ubK\"]},\"contracts/Account/ECDSA.sol\":{\"keccak256\":\"0xab2afc69f30e37bdd93becfb44abc8160e44e7cf9b4ee76fa86b64deac5e173d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://033351d52ff49364a466fba3babb24c8ebf34cddcb6f25069b6c47fa612d7698\",\"dweb:/ipfs/QmVnpr58oTMJdx1tRCJPCABfZCZY75VGo6TztwFM7hPDsQ\"]},\"contracts/Account/EIP1271Validator.sol\":{\"keccak256\":\"0xf20e72bde23d6b1543e7e79fdf021b65e26967c7d95662b09c6373e01049f476\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b3acec18907293ada18949ead31a020d448f6d8be55f9f8ac08d3be1cd5946d\",\"dweb:/ipfs/QmVWkMttMRxny1hyHoRvtzSdwBbxgTTWjMKck8zAU5h3Sn\"]},\"contracts/Account/EIP712SignerRecovery.sol\":{\"keccak256\":\"0x2348325f509e8292fb37561f6f675ae5dde47da19c31c026b61125cbf2b91f5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d044a3ef8f897bc0e9d7667edbd8070f24b1adbb7f1861ed66c715384c4243ef\",\"dweb:/ipfs/QmfAFNPcqR87cNPZ4z1aamNC1GB3Mkci4nXLJhPxsqjjhM\"]},\"contracts/Interfaces/IERC1271.sol\":{\"keccak256\":\"0xccdfc04dcee6c5610b9b06deba4b6e55e0c7713b3e3d6277973f84ffd457889e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f866c88c0749f303cb6a68df93df17aa973575f732300e3ecff1c48f5147c7d0\",\"dweb:/ipfs/QmdDJicRP95ov7hw6kaZCiDs7wA1EcXTax82kfZgXYZZbf\"]}},\"version\":1}"
        }
      },
      "contracts/Account/ECDSA.sol": {
        "ECDSA": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "297:3633:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:3633:1;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080a000a",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "297:3633:1:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Account/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Account/ECDSA.sol\":{\"keccak256\":\"0xab2afc69f30e37bdd93becfb44abc8160e44e7cf9b4ee76fa86b64deac5e173d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://033351d52ff49364a466fba3babb24c8ebf34cddcb6f25069b6c47fa612d7698\",\"dweb:/ipfs/QmVnpr58oTMJdx1tRCJPCABfZCZY75VGo6TztwFM7hPDsQ\"]}},\"version\":1}"
        }
      },
      "contracts/Account/EIP1271Validator.sol": {
        "EIP1271Validator": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides a validation check on a signer contract that implements EIP-1271\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"https://github.com/ethereum/EIPs/issues/1271\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Account/EIP1271Validator.sol\":\"EIP1271Validator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Account/EIP1271Validator.sol\":{\"keccak256\":\"0xf20e72bde23d6b1543e7e79fdf021b65e26967c7d95662b09c6373e01049f476\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b3acec18907293ada18949ead31a020d448f6d8be55f9f8ac08d3be1cd5946d\",\"dweb:/ipfs/QmVWkMttMRxny1hyHoRvtzSdwBbxgTTWjMKck8zAU5h3Sn\"]},\"contracts/Interfaces/IERC1271.sol\":{\"keccak256\":\"0xccdfc04dcee6c5610b9b06deba4b6e55e0c7713b3e3d6277973f84ffd457889e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f866c88c0749f303cb6a68df93df17aa973575f732300e3ecff1c48f5147c7d0\",\"dweb:/ipfs/QmdDJicRP95ov7hw6kaZCiDs7wA1EcXTax82kfZgXYZZbf\"]}},\"version\":1}"
        }
      },
      "contracts/Account/EIP712SignerRecovery.sol": {
        "EIP712SignerRecovery": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides signer address recovery for EIP-712 signed messages\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"https://github.com/ethereum/EIPs/pull/712\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Account/EIP712SignerRecovery.sol\":\"EIP712SignerRecovery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Account/ECDSA.sol\":{\"keccak256\":\"0xab2afc69f30e37bdd93becfb44abc8160e44e7cf9b4ee76fa86b64deac5e173d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://033351d52ff49364a466fba3babb24c8ebf34cddcb6f25069b6c47fa612d7698\",\"dweb:/ipfs/QmVnpr58oTMJdx1tRCJPCABfZCZY75VGo6TztwFM7hPDsQ\"]},\"contracts/Account/EIP712SignerRecovery.sol\":{\"keccak256\":\"0x2348325f509e8292fb37561f6f675ae5dde47da19c31c026b61125cbf2b91f5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d044a3ef8f897bc0e9d7667edbd8070f24b1adbb7f1861ed66c715384c4243ef\",\"dweb:/ipfs/QmfAFNPcqR87cNPZ4z1aamNC1GB3Mkci4nXLJhPxsqjjhM\"]}},\"version\":1}"
        }
      },
      "contracts/Interfaces/IERC1271.sol": {
        "IERC1271": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "_signature",
                  "type": "bytes"
                }
              ],
              "name": "isValidSignature",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "isValidSignature(bytes32,bytes)": "1626ba7e"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IERC1271.sol\":{\"keccak256\":\"0xccdfc04dcee6c5610b9b06deba4b6e55e0c7713b3e3d6277973f84ffd457889e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f866c88c0749f303cb6a68df93df17aa973575f732300e3ecff1c48f5147c7d0\",\"dweb:/ipfs/QmdDJicRP95ov7hw6kaZCiDs7wA1EcXTax82kfZgXYZZbf\"]}},\"version\":1}"
        }
      },
      "contracts/Test/AccountWithTestCalls.sol": {
        "AccountWithTestCalls": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "InvalidSignature",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotDelegateCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "name": "NotOwner",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "ExecutedTestCall",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "MockParamEvent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "mockInt",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "mockAddress",
                  "type": "address"
                }
              ],
              "name": "MockParamsEvent",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "delegateCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "externalCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "unsignedData",
                  "type": "bytes"
                }
              ],
              "name": "metaDelegateCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "unsignedData",
                  "type": "bytes"
                }
              ],
              "name": "metaDelegateCall_EIP1271",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "mockInt",
                  "type": "int24"
                },
                {
                  "internalType": "address",
                  "name": "mockAddress",
                  "type": "address"
                }
              ],
              "name": "testEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "testEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "forceRevert",
                  "type": "bool"
                }
              ],
              "name": "testRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "testStore",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "testTransferETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "delegateCall(address,bytes)": "56e7b7aa",
              "externalCall(uint256,address,bytes)": "bbfeeeb5",
              "metaDelegateCall(address,bytes,bytes,bytes)": "1f6f4202",
              "metaDelegateCall_EIP1271(address,bytes,bytes,bytes)": "2867a68d",
              "testEvent(uint256)": "dcd9c7fa",
              "testEvent(uint256,int24,address)": "6ea4b40d",
              "testRevert(bool)": "29d0bec0",
              "testStore(uint256)": "25a687bc",
              "testTransferETH(uint256,address)": "9e02f294"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDelegateCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ExecutedTestCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"MockParamEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"mockInt\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mockAddress\",\"type\":\"address\"}],\"name\":\"MockParamsEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"unsignedData\",\"type\":\"bytes\"}],\"name\":\"metaDelegateCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"unsignedData\",\"type\":\"bytes\"}],\"name\":\"metaDelegateCall_EIP1271\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"mockInt\",\"type\":\"int24\"},{\"internalType\":\"address\",\"name\":\"mockAddress\",\"type\":\"address\"}],\"name\":\"testEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"testEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"forceRevert\",\"type\":\"bool\"}],\"name\":\"testRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"testStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"testTransferETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidSignature(bytes32,bytes)\":[{\"details\":\"Revert if EIP1271 hash and signature is invalid\",\"params\":{\"hash\":\"Hash of the data to be validated\",\"signature\":\"Signature byte array associated with hash\"}}],\"NotDelegateCall()\":[{\"details\":\"Revert if the Account.sol implementation contract is called directly\"}],\"NotOwner(address)\":[{\"details\":\"Revert if signer of a transaction or EIP712 message signer is not the proxy owner\",\"params\":{\"signer\":\"The address that is not the owner\"}}]},\"kind\":\"dev\",\"methods\":{\"delegateCall(address,bytes)\":{\"details\":\"Makes a delegatecall to an external contract\",\"params\":{\"data\":\"Call data to execute\",\"to\":\"Address of the external contract to delegatecall\"}},\"externalCall(uint256,address,bytes)\":{\"details\":\"Makes a call to an external contractOnly executable directly by the proxy owner\",\"params\":{\"data\":\"Call data to execute\",\"to\":\"Address of the external contract to call\",\"value\":\"Amount of wei to send with the call\"}},\"metaDelegateCall(address,bytes,bytes,bytes)\":{\"details\":\"Allows execution of a delegatecall with a valid signature from the proxyOwner. Uses EIP-712 (https://github.com/ethereum/EIPs/pull/712) signer recovery.\",\"params\":{\"data\":\"Call data to include in the delegatecall, signed by the proxyOwner\",\"signature\":\"Signature of the proxyOwner\",\"to\":\"Address of the external contract to delegatecall, signed by the proxyOwner\",\"unsignedData\":\"Unsigned call data appended to the delegatecall\"}},\"metaDelegateCall_EIP1271(address,bytes,bytes,bytes)\":{\"details\":\"Allows execution of a delegatecall if proxyOwner is a smart contract. Uses EIP-1271 (https://eips.ethereum.org/EIPS/eip-1271) signer validation.\",\"params\":{\"data\":\"Call data to include in the delegatecall, validated by the proxyOwner contract\",\"signature\":\"Signature that will be validated by the proxyOwner contract\",\"to\":\"Address of the external contract to delegatecall, validated by the proxyOwner contract\",\"unsignedData\":\"Unsigned call data appended to the delegatecall\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"metaDelegateCall(address,bytes,bytes,bytes)\":{\"notice\":\"WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded `callData`. If the proxyOwner signs a delegatecall to a malicious contract, this could result in total loss of their account.\"},\"metaDelegateCall_EIP1271(address,bytes,bytes,bytes)\":{\"notice\":\"WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded `callData`. If the proxyOwner contract validates a delegatecall to a malicious contract, this could result in total loss of the account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test/AccountWithTestCalls.sol\":\"AccountWithTestCalls\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Account/Account.sol\":{\"keccak256\":\"0xbe5ec06df0259ff1402de372166ef35f8a6fccf70fdda8e568eb51f266f0a4d7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387fdb06efb55f40c8240d627d743bfbcf7d36148b87a1ed2a9455940a45d69\",\"dweb:/ipfs/QmQ4QR5n5w3zqh4xz8t46kkFRCUcNyKRqM8v9ire8u7ubK\"]},\"contracts/Account/ECDSA.sol\":{\"keccak256\":\"0xab2afc69f30e37bdd93becfb44abc8160e44e7cf9b4ee76fa86b64deac5e173d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://033351d52ff49364a466fba3babb24c8ebf34cddcb6f25069b6c47fa612d7698\",\"dweb:/ipfs/QmVnpr58oTMJdx1tRCJPCABfZCZY75VGo6TztwFM7hPDsQ\"]},\"contracts/Account/EIP1271Validator.sol\":{\"keccak256\":\"0xf20e72bde23d6b1543e7e79fdf021b65e26967c7d95662b09c6373e01049f476\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b3acec18907293ada18949ead31a020d448f6d8be55f9f8ac08d3be1cd5946d\",\"dweb:/ipfs/QmVWkMttMRxny1hyHoRvtzSdwBbxgTTWjMKck8zAU5h3Sn\"]},\"contracts/Account/EIP712SignerRecovery.sol\":{\"keccak256\":\"0x2348325f509e8292fb37561f6f675ae5dde47da19c31c026b61125cbf2b91f5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d044a3ef8f897bc0e9d7667edbd8070f24b1adbb7f1861ed66c715384c4243ef\",\"dweb:/ipfs/QmfAFNPcqR87cNPZ4z1aamNC1GB3Mkci4nXLJhPxsqjjhM\"]},\"contracts/Interfaces/IERC1271.sol\":{\"keccak256\":\"0xccdfc04dcee6c5610b9b06deba4b6e55e0c7713b3e3d6277973f84ffd457889e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f866c88c0749f303cb6a68df93df17aa973575f732300e3ecff1c48f5147c7d0\",\"dweb:/ipfs/QmdDJicRP95ov7hw6kaZCiDs7wA1EcXTax82kfZgXYZZbf\"]},\"contracts/Test/AccountWithTestCalls.sol\":{\"keccak256\":\"0x98d5d935e3222b449b6512a371a66295fd7a437c40a9f590158eb833c31cd425\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6fb1157539cd790370091a29ea63a66f1485c8d25ebd47a022ad4b2ad8e450ed\",\"dweb:/ipfs/QmTsQefxbT8wgn6eCmUSVgNLWRMRw3Wiz6p8nUHc5o1WEv\"]},\"contracts/Test/TestAccountCalls.sol\":{\"keccak256\":\"0xc5791396bbeea3b6ef33cb95d0967d782190d9f3b2b9cf323320dd9781850300\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://591a0b250c9b82a61f5e5e5027237f4a37e153b3f99df2d519d59bbd7eceecda\",\"dweb:/ipfs/QmUEkvWrmW8qPvpQbeWVhkhe2NHKzWFrjg5R7kbWwioq6S\"]}},\"version\":1}"
        }
      },
      "contracts/Test/TestAccountCalls.sol": {
        "TestAccountCalls": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [],
              "name": "ExecutedTestCall",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "MockParamEvent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "mockInt",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "mockAddress",
                  "type": "address"
                }
              ],
              "name": "MockParamsEvent",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "mockInt",
                  "type": "int24"
                },
                {
                  "internalType": "address",
                  "name": "mockAddress",
                  "type": "address"
                }
              ],
              "name": "testEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "testEvent",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "forceRevert",
                  "type": "bool"
                }
              ],
              "name": "testRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "mockUint",
                  "type": "uint256"
                }
              ],
              "name": "testStore",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "testTransferETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610328806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80636ea4b40d116100505780636ea4b40d146100c95780639e02f294146100fe578063dcd9c7fa1461012a57600080fd5b806325a687bc1461006c57806329d0bec0146100aa575b600080fd5b6100a86004803603602081101561008257600080fd5b50357f94a02aa970f44cb624bd9f8f6d45117d09bef87e3b6959977c67468c9517e9c855565b005b6100a8600480360360208110156100c057600080fd5b50351515610147565b6100a8600480360360608110156100df57600080fd5b50803590602081013560020b90604001356001600160a01b03166101d1565b6100a86004803603604081101561011457600080fd5b50803590602001356001600160a01b0316610221565b6100a86004803603602081101561014057600080fd5b50356102b8565b801561019a576040805162461bcd60e51b815260206004820152601a60248201527f546573744163636f756e7443616c6c733a207265766572746564000000000000604482015290519081900360640190fd5b6000805460ff191660011781556040517f662cb85973fdb79e2d2f4eeb5469a9d6d134907eda738447230622ac68d931189190a150565b60408051848152600284900b60208201526001600160a01b0383168183015290517f18755b9299299a84afaa61822309446b04383054bab38fba1511799ac7ac7c709181900360600190a1505050565b6040516000906001600160a01b0383169084908381818185875af1925050503d806000811461026c576040519150601f19603f3d011682016040523d82523d6000602084013e610271565b606091505b505080915050806102b35760405162461bcd60e51b815260040180806020018281038252602d8152602001806102ef602d913960400191505060405180910390fd5b505050565b6040805182815290517f22585f0c30ff0967db7d012d9ce509b18c6b8bc965f5ee791652a1b2c5d292379181900360200190a15056fe546573744163636f756e7443616c6c733a20746573745472616e736665724554482063616c6c206661696c6564a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EA4B40D GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x6EA4B40D EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x9E02F294 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xDCD9C7FA EQ PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x25A687BC EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x29D0BEC0 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0x94A02AA970F44CB624BD9F8F6D45117D09BEF87E3B6959977C67468C9517E9C8 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x147 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 SIGNEXTEND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x221 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546573744163636F756E7443616C6C733A207265766572746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x662CB85973FDB79E2D2F4EEB5469A9D6D134907EDA738447230622AC68D93118 SWAP2 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x2 DUP5 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x18755B9299299A84AFAA61822309446B04383054BAB38FBA1511799AC7AC7C70 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x271 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP2 POP POP DUP1 PUSH2 0x2B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EF PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x22585F0C30FF0967DB7D012D9CE509B18C6B8BC965F5EE791652A1B2C5D29237 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP INVALID SLOAD PUSH6 0x73744163636F PUSH22 0x6E7443616C6C733A20746573745472616E7366657245 SLOAD BASEFEE KECCAK256 PUSH4 0x616C6C20 PUSH7 0x61696C6564A164 PUSH20 0x6F6C634300080A000A0000000000000000000000 ",
              "sourceMap": "91:973:6:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@testEvent_538": {
                  "entryPoint": 696,
                  "id": 538,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@testEvent_554": {
                  "entryPoint": 465,
                  "id": 554,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@testRevert_502": {
                  "entryPoint": 327,
                  "id": 502,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@testStore_567": {
                  "entryPoint": null,
                  "id": 567,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@testTransferETH_528": {
                  "entryPoint": 545,
                  "id": 528,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100675760003560e01c80636ea4b40d116100505780636ea4b40d146100c95780639e02f294146100fe578063dcd9c7fa1461012a57600080fd5b806325a687bc1461006c57806329d0bec0146100aa575b600080fd5b6100a86004803603602081101561008257600080fd5b50357f94a02aa970f44cb624bd9f8f6d45117d09bef87e3b6959977c67468c9517e9c855565b005b6100a8600480360360208110156100c057600080fd5b50351515610147565b6100a8600480360360608110156100df57600080fd5b50803590602081013560020b90604001356001600160a01b03166101d1565b6100a86004803603604081101561011457600080fd5b50803590602001356001600160a01b0316610221565b6100a86004803603602081101561014057600080fd5b50356102b8565b801561019a576040805162461bcd60e51b815260206004820152601a60248201527f546573744163636f756e7443616c6c733a207265766572746564000000000000604482015290519081900360640190fd5b6000805460ff191660011781556040517f662cb85973fdb79e2d2f4eeb5469a9d6d134907eda738447230622ac68d931189190a150565b60408051848152600284900b60208201526001600160a01b0383168183015290517f18755b9299299a84afaa61822309446b04383054bab38fba1511799ac7ac7c709181900360600190a1505050565b6040516000906001600160a01b0383169084908381818185875af1925050503d806000811461026c576040519150601f19603f3d011682016040523d82523d6000602084013e610271565b606091505b505080915050806102b35760405162461bcd60e51b815260040180806020018281038252602d8152602001806102ef602d913960400191505060405180910390fd5b505050565b6040805182815290517f22585f0c30ff0967db7d012d9ce509b18c6b8bc965f5ee791652a1b2c5d292379181900360200190a15056fe546573744163636f756e7443616c6c733a20746573745472616e736665724554482063616c6c206661696c6564a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EA4B40D GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x6EA4B40D EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x9E02F294 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xDCD9C7FA EQ PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x25A687BC EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x29D0BEC0 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0x94A02AA970F44CB624BD9F8F6D45117D09BEF87E3B6959977C67468C9517E9C8 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x147 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 SIGNEXTEND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x221 JUMP JUMPDEST PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546573744163636F756E7443616C6C733A207265766572746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x662CB85973FDB79E2D2F4EEB5469A9D6D134907EDA738447230622AC68D93118 SWAP2 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x2 DUP5 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x18755B9299299A84AFAA61822309446B04383054BAB38FBA1511799AC7AC7C70 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x271 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP2 POP POP DUP1 PUSH2 0x2B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EF PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x22585F0C30FF0967DB7D012D9CE509B18C6B8BC965F5EE791652A1B2C5D29237 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP INVALID SLOAD PUSH6 0x73744163636F PUSH22 0x6E7443616C6C733A20746573745472616E7366657245 SLOAD BASEFEE KECCAK256 PUSH4 0x616C6C20 PUSH7 0x61696C6564A164 PUSH20 0x6F6C634300080A000A0000000000000000000000 ",
              "sourceMap": "91:973:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;920:142;;;;;;;;;;;;;;;;-1:-1:-1;920:142:6;987:21;1031;920:142;;;296:158;;;;;;;;;;;;;;;;-1:-1:-1;296:158:6;;;;:::i;770:146::-;;;;;;;;;;;;;;;;-1:-1:-1;770:146:6;;;;;;;;;;;;;-1:-1:-1;;;;;770:146:6;;:::i;458:217::-;;;;;;;;;;;;;;;;-1:-1:-1;458:217:6;;;;;;-1:-1:-1;;;;;458:217:6;;:::i;679:87::-;;;;;;;;;;;;;;;;-1:-1:-1;679:87:6;;:::i;296:158::-;358:11;357:12;349:51;;;;;-1:-1:-1;;;349:51:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:7;:14;;-1:-1:-1;;406:14:6;416:4;406:14;;;431:18;;;;406:7;431:18;296:158;:::o;770:146::-;864:47;;;;;;;;;;;;;;-1:-1:-1;;;;;864:47:6;;;;;;;;;;;;;;;;;770:146;;;:::o;458:217::-;566:33;;534:12;;-1:-1:-1;;;;;566:14:6;;;588:6;;534:12;566:33;534:12;566:33;588:6;566:14;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;552:47;;;;;613:7;605:65;;;;-1:-1:-1;;;605:65:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;528:147;458:217;;:::o;679:87::-;737:24;;;;;;;;;;;;;;;;;679:87;:::o"
            },
            "methodIdentifiers": {
              "testEvent(uint256)": "dcd9c7fa",
              "testEvent(uint256,int24,address)": "6ea4b40d",
              "testRevert(bool)": "29d0bec0",
              "testStore(uint256)": "25a687bc",
              "testTransferETH(uint256,address)": "9e02f294"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"ExecutedTestCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"MockParamEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"mockInt\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mockAddress\",\"type\":\"address\"}],\"name\":\"MockParamsEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"mockInt\",\"type\":\"int24\"},{\"internalType\":\"address\",\"name\":\"mockAddress\",\"type\":\"address\"}],\"name\":\"testEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"testEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"forceRevert\",\"type\":\"bool\"}],\"name\":\"testRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mockUint\",\"type\":\"uint256\"}],\"name\":\"testStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"testTransferETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test/TestAccountCalls.sol\":\"TestAccountCalls\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Test/TestAccountCalls.sol\":{\"keccak256\":\"0xc5791396bbeea3b6ef33cb95d0967d782190d9f3b2b9cf323320dd9781850300\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://591a0b250c9b82a61f5e5e5027237f4a37e153b3f99df2d519d59bbd7eceecda\",\"dweb:/ipfs/QmUEkvWrmW8qPvpQbeWVhkhe2NHKzWFrjg5R7kbWwioq6S\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/Account/Account.sol": {
        "ast": {
          "absolutePath": "contracts/Account/Account.sol",
          "exportedSymbols": {
            "Account": [
              234
            ],
            "ECDSA": [
              351
            ],
            "EIP1271Validator": [
              388
            ],
            "EIP712SignerRecovery": [
              441
            ],
            "IERC1271": [
              454
            ]
          },
          "id": 235,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:0"
            },
            {
              "id": 2,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:0"
            },
            {
              "absolutePath": "contracts/Account/EIP712SignerRecovery.sol",
              "file": "./EIP712SignerRecovery.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 235,
              "sourceUnit": 442,
              "src": "91:36:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Account/EIP1271Validator.sol",
              "file": "./EIP1271Validator.sol",
              "id": 4,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 235,
              "sourceUnit": 389,
              "src": "128:32:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 6,
                    "name": "EIP712SignerRecovery",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 441,
                    "src": "436:20:0"
                  },
                  "id": 7,
                  "nodeType": "InheritanceSpecifier",
                  "src": "436:20:0"
                },
                {
                  "baseName": {
                    "id": 8,
                    "name": "EIP1271Validator",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 388,
                    "src": "458:16:0"
                  },
                  "id": 9,
                  "nodeType": "InheritanceSpecifier",
                  "src": "458:16:0"
                }
              ],
              "canonicalName": "Account",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 5,
                "nodeType": "StructuredDocumentation",
                "src": "162:254:0",
                "text": "@title Brink account core\n @notice Deployed once and used by many proxy contracts as the implementation contract. External functions in this\n contract are intended to be called by `delegatecall` from proxy contracts deployed by AccountFactory."
              },
              "fullyImplemented": true,
              "id": 234,
              "linearizedBaseContracts": [
                234,
                388,
                441
              ],
              "name": "Account",
              "nameLocation": "425:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 10,
                    "nodeType": "StructuredDocumentation",
                    "src": "479:144:0",
                    "text": "@dev Revert if signer of a transaction or EIP712 message signer is not the proxy owner\n @param signer The address that is not the owner"
                  },
                  "id": 14,
                  "name": "NotOwner",
                  "nameLocation": "632:8:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 12,
                        "mutability": "mutable",
                        "name": "signer",
                        "nameLocation": "649:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "641:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "641:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "640:16:0"
                  },
                  "src": "626:31:0"
                },
                {
                  "documentation": {
                    "id": 15,
                    "nodeType": "StructuredDocumentation",
                    "src": "661:172:0",
                    "text": "@dev Revert if EIP1271 hash and signature is invalid\n @param hash Hash of the data to be validated\n @param signature Signature byte array associated with hash"
                  },
                  "id": 21,
                  "name": "InvalidSignature",
                  "nameLocation": "842:16:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "867:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "859:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "859:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "879:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "873:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "873:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "858:31:0"
                  },
                  "src": "836:54:0"
                },
                {
                  "documentation": {
                    "id": 22,
                    "nodeType": "StructuredDocumentation",
                    "src": "894:77:0",
                    "text": "@dev Revert if the Account.sol implementation contract is called directly"
                  },
                  "id": 24,
                  "name": "NotDelegateCall",
                  "nameLocation": "980:15:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "995:2:0"
                  },
                  "src": "974:24:0"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1002:56:0",
                    "text": "@dev Typehash for signed metaDelegateCall() messages"
                  },
                  "id": 27,
                  "mutability": "immutable",
                  "name": "META_DELEGATE_CALL_TYPEHASH",
                  "nameLocation": "1088:27:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1061:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 28,
                    "nodeType": "StructuredDocumentation",
                    "src": "1120:64:0",
                    "text": "@dev Typehash for signed metaDelegateCall_EIP1271() messages"
                  },
                  "id": 30,
                  "mutability": "immutable",
                  "name": "META_DELEGATE_CALL_EIP1271_TYPEHASH",
                  "nameLocation": "1214:35:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1187:62:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 31,
                    "nodeType": "StructuredDocumentation",
                    "src": "1254:109:0",
                    "text": "@dev Deployment address of the implementation Account.sol contract. Used to enforce onlyDelegateCallable."
                  },
                  "id": 37,
                  "mutability": "immutable",
                  "name": "deploymentAddress",
                  "nameLocation": "1393:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1366:60:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "id": 35,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1421:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Account_$234",
                          "typeString": "contract Account"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Account_$234",
                          "typeString": "contract Account"
                        }
                      ],
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1413:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 33,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1413:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 52,
                    "nodeType": "Block",
                    "src": "1582:96:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 42,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1600:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Account_$234",
                                  "typeString": "contract Account"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Account_$234",
                                  "typeString": "contract Account"
                                }
                              ],
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1592:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 40,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1592:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 43,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1592:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 44,
                            "name": "deploymentAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1609:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1592:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 50,
                        "nodeType": "IfStatement",
                        "src": "1588:79:0",
                        "trueBody": {
                          "id": 49,
                          "nodeType": "Block",
                          "src": "1628:39:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 46,
                                  "name": "NotDelegateCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "1643:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 47,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1643:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 48,
                              "nodeType": "RevertStatement",
                              "src": "1636:24:0"
                            }
                          ]
                        }
                      },
                      {
                        "id": 51,
                        "nodeType": "PlaceholderStatement",
                        "src": "1672:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 38,
                    "nodeType": "StructuredDocumentation",
                    "src": "1431:116:0",
                    "text": "@dev Used by external functions to revert if they are called directly on the implementation Account.sol contract"
                  },
                  "id": 53,
                  "name": "onlyDelegateCallable",
                  "nameLocation": "1559:20:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1579:2:0"
                  },
                  "src": "1550:128:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 69,
                    "nodeType": "Block",
                    "src": "1744:198:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 57,
                            "name": "META_DELEGATE_CALL_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1751:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4d65746144656c656761746543616c6c286164647265737320746f2c6279746573206461746129",
                                "id": 59,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1791:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_023ce5d01636bb12b4ffde3c4f5a66fb1044aa0dbc251394e60f0a26f1591043",
                                  "typeString": "literal_string \"MetaDelegateCall(address to,bytes data)\""
                                },
                                "value": "MetaDelegateCall(address to,bytes data)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_023ce5d01636bb12b4ffde3c4f5a66fb1044aa0dbc251394e60f0a26f1591043",
                                  "typeString": "literal_string \"MetaDelegateCall(address to,bytes data)\""
                                }
                              ],
                              "id": 58,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1781:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1781:52:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1751:82:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "1751:82:0"
                      },
                      {
                        "expression": {
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63,
                            "name": "META_DELEGATE_CALL_EIP1271_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1839:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4d65746144656c656761746543616c6c5f45495031323731286164647265737320746f2c6279746573206461746129",
                                "id": 65,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1887:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1d3b50d88adeb95016e86033ab418b64b7ecd66b70783b0dca7b0afc8bfb8a1e",
                                  "typeString": "literal_string \"MetaDelegateCall_EIP1271(address to,bytes data)\""
                                },
                                "value": "MetaDelegateCall_EIP1271(address to,bytes data)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_1d3b50d88adeb95016e86033ab418b64b7ecd66b70783b0dca7b0afc8bfb8a1e",
                                  "typeString": "literal_string \"MetaDelegateCall_EIP1271(address to,bytes data)\""
                                }
                              ],
                              "id": 64,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1877:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1877:60:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1839:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 68,
                        "nodeType": "ExpressionStatement",
                        "src": "1839:98:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 54,
                    "nodeType": "StructuredDocumentation",
                    "src": "1682:45:0",
                    "text": "@dev Constructor sets immutable constants"
                  },
                  "id": 70,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 55,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:0"
                  },
                  "returnParameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1744:0:0"
                  },
                  "scope": 234,
                  "src": "1730:212:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "2306:369:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 82,
                              "name": "proxyOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "2316:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2316:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 84,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2332:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2332:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2316:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 93,
                        "nodeType": "IfStatement",
                        "src": "2312:74:0",
                        "trueBody": {
                          "id": 92,
                          "nodeType": "Block",
                          "src": "2344:42:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 88,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2368:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 89,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2368:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 87,
                                  "name": "NotOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14,
                                  "src": "2359:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 90,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2359:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 91,
                              "nodeType": "RevertStatement",
                              "src": "2352:27:0"
                            }
                          ]
                        }
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2401:270:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2409:72:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "2428:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2428:5:0"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "2435:2:0"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2439:5:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "2450:4:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2456:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2446:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2446:15:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "2469:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2463:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2463:11:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2476:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2479:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "2423:4:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2423:58:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "2413:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2503:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2506:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "2509:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2509:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2488:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2488:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2488:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2560:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2577:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "2580:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2580:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "2570:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2570:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2570:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "2553:52:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2558:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2620:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2637:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "2640:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2640:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "2630:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2630:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2630:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "2612:53:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "2540:6:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "2533:132:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 77,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2450:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 77,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2469:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 75,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2435:2:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 73,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2439:5:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 94,
                        "nodeType": "InlineAssembly",
                        "src": "2392:279:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 71,
                    "nodeType": "StructuredDocumentation",
                    "src": "1946:251:0",
                    "text": "@dev Makes a call to an external contract\n @dev Only executable directly by the proxy owner\n @param value Amount of wei to send with the call\n @param to Address of the external contract to call\n @param data Call data to execute"
                  },
                  "functionSelector": "bbfeeeb5",
                  "id": 96,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 80,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 79,
                        "name": "onlyDelegateCallable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "2285:20:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2285:20:0"
                    }
                  ],
                  "name": "externalCall",
                  "nameLocation": "2209:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2230:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2222:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2222:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 75,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2245:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2237:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 77,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2262:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2249:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2249:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2221:46:0"
                  },
                  "returnParameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2306:0:0"
                  },
                  "scope": 234,
                  "src": "2200:475:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "2930:370:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 106,
                              "name": "proxyOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "2940:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2940:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 108,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2956:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2956:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2940:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 117,
                        "nodeType": "IfStatement",
                        "src": "2936:74:0",
                        "trueBody": {
                          "id": 116,
                          "nodeType": "Block",
                          "src": "2968:42:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 112,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2992:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 113,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2992:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 111,
                                  "name": "NotOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14,
                                  "src": "2983:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2983:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 115,
                              "nodeType": "RevertStatement",
                              "src": "2976:27:0"
                            }
                          ]
                        }
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3025:271:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3033:73:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "3060:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3060:5:0"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "3067:2:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "3075:4:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3081:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3071:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3071:15:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "3094:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3088:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3088:11:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3101:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3104:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nodeType": "YulIdentifier",
                                  "src": "3047:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3047:59:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "3037:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3128:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3131:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "3134:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3134:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3113:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3113:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3113:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3185:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3202:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "3205:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3205:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "3195:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3195:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3195:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "3178:52:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3183:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3245:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3262:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "3265:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3265:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "3255:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3255:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3255:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "3237:53:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "3165:6:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "3158:132:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 101,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3075:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 101,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3094:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 99,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3067:2:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 118,
                        "nodeType": "InlineAssembly",
                        "src": "3016:280:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 97,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:157:0",
                    "text": "@dev Makes a delegatecall to an external contract\n @param to Address of the external contract to delegatecall\n @param data Call data to execute"
                  },
                  "functionSelector": "56e7b7aa",
                  "id": 120,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyDelegateCallable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "2909:20:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2909:20:0"
                    }
                  ],
                  "name": "delegateCall",
                  "nameLocation": "2848:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2869:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "2861:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2861:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2886:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "2873:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2873:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2860:31:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2930:0:0"
                  },
                  "scope": 234,
                  "src": "2839:461:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "4185:576:0",
                    "statements": [
                      {
                        "assignments": [
                          135
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 135,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "4199:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 169,
                            "src": "4191:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 134,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4191:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 149,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 140,
                                      "name": "META_DELEGATE_CALL_TYPEHASH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27,
                                      "src": "4251:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 141,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 123,
                                      "src": "4280:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 143,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 125,
                                          "src": "4294:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                            "typeString": "bytes calldata"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                            "typeString": "bytes calldata"
                                          }
                                        ],
                                        "id": 142,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "4284:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 144,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4284:15:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 138,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "4240:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 139,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "4240:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4240:60:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 137,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "4230:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4230:71:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 147,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "4309:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 136,
                            "name": "_recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "4208:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes calldata) view returns (address)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4208:116:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4191:133:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 150,
                              "name": "proxyOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "4334:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4334:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 152,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "4350:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4334:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 159,
                        "nodeType": "IfStatement",
                        "src": "4330:66:0",
                        "trueBody": {
                          "id": 158,
                          "nodeType": "Block",
                          "src": "4358:38:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 155,
                                    "name": "signer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 135,
                                    "src": "4382:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 154,
                                  "name": "NotOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14,
                                  "src": "4373:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4373:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 157,
                              "nodeType": "RevertStatement",
                              "src": "4366:23:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          161
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 161,
                            "mutability": "mutable",
                            "name": "callData",
                            "nameLocation": "4415:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 169,
                            "src": "4402:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 160,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4402:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 167,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 164,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "4443:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 165,
                              "name": "unsignedData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "4449:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 162,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4426:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "4426:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4426:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4402:60:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4478:279:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4486:81:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "4513:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4513:5:0"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "4520:2:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "callData",
                                        "nodeType": "YulIdentifier",
                                        "src": "4528:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4538:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4524:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4524:19:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "callData",
                                        "nodeType": "YulIdentifier",
                                        "src": "4551:8:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4545:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4545:15:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4562:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4565:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nodeType": "YulIdentifier",
                                  "src": "4500:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4500:67:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "4490:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4589:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4592:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "4595:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4595:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4574:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4574:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4574:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4646:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4663:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "4666:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4666:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "4656:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4656:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4656:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "4639:52:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4644:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4706:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4723:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "4726:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4726:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "4716:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4716:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4716:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "4698:53:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "4626:6:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "4619:132:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 161,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4528:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 161,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4551:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 123,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4520:2:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 168,
                        "nodeType": "InlineAssembly",
                        "src": "4469:288:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 121,
                    "nodeType": "StructuredDocumentation",
                    "src": "3304:718:0",
                    "text": "@dev Allows execution of a delegatecall with a valid signature from the proxyOwner. Uses EIP-712\n (https://github.com/ethereum/EIPs/pull/712) signer recovery.\n @param to Address of the external contract to delegatecall, signed by the proxyOwner\n @param data Call data to include in the delegatecall, signed by the proxyOwner\n @param signature Signature of the proxyOwner\n @param unsignedData Unsigned call data appended to the delegatecall\n @notice WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded\n `callData`. If the proxyOwner signs a delegatecall to a malicious contract, this could result in total loss of\n their account."
                  },
                  "functionSelector": "1f6f4202",
                  "id": 170,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 132,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 131,
                        "name": "onlyDelegateCallable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "4164:20:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4164:20:0"
                    }
                  ],
                  "name": "metaDelegateCall",
                  "nameLocation": "4034:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 123,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4064:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "4056:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4056:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 125,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4083:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "4068:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4068:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "4104:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "4089:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4089:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "unsignedData",
                        "nameLocation": "4130:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "4115:27:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4115:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4050:96:0"
                  },
                  "returnParameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4185:0:0"
                  },
                  "scope": 234,
                  "src": "4025:736:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 220,
                    "nodeType": "Block",
                    "src": "5713:580:0",
                    "statements": [
                      {
                        "assignments": [
                          185
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 185,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "5727:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 220,
                            "src": "5719:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 184,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5719:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 196,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 189,
                                  "name": "META_DELEGATE_CALL_EIP1271_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "5755:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 190,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 173,
                                  "src": "5792:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 192,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 175,
                                      "src": "5806:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    ],
                                    "id": 191,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "5796:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5796:15:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 187,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5744:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "5744:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5744:68:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 186,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5734:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5734:79:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5719:94:0"
                      },
                      {
                        "condition": {
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5822:49:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 198,
                                  "name": "proxyOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 229,
                                  "src": "5841:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5841:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 200,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "5855:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 201,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 177,
                                "src": "5861:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 197,
                              "name": "_isValidSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "5823:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function (address,bytes32,bytes calldata) view returns (bool)"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5823:48:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 210,
                        "nodeType": "IfStatement",
                        "src": "5819:109:0",
                        "trueBody": {
                          "id": 209,
                          "nodeType": "Block",
                          "src": "5873:55:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 205,
                                    "name": "hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 185,
                                    "src": "5905:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 206,
                                    "name": "signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 177,
                                    "src": "5911:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 204,
                                  "name": "InvalidSignature",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "5888:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes32,bytes memory) pure"
                                  }
                                },
                                "id": 207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5888:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 208,
                              "nodeType": "RevertStatement",
                              "src": "5881:40:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          212
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 212,
                            "mutability": "mutable",
                            "name": "callData",
                            "nameLocation": "5947:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 220,
                            "src": "5934:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 211,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5934:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 218,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 215,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 175,
                              "src": "5975:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 216,
                              "name": "unsignedData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "5981:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 213,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5958:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "5958:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5958:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5934:60:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6010:279:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6018:81:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "6045:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6045:5:0"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "6052:2:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "callData",
                                        "nodeType": "YulIdentifier",
                                        "src": "6060:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6070:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6056:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6056:19:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "callData",
                                        "nodeType": "YulIdentifier",
                                        "src": "6083:8:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6077:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6077:15:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6094:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6097:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nodeType": "YulIdentifier",
                                  "src": "6032:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6032:67:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "6022:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6121:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6124:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "6127:14:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6127:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "6106:14:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6106:38:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6106:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "6178:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6195:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "6198:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6198:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "6188:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6188:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "6188:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "6171:52:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6176:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "6238:45:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "6255:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "6258:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6258:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "6248:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6248:27:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "6248:27:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "6230:53:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "6158:6:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "6151:132:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 212,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6060:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 212,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6083:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 173,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6052:2:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 219,
                        "nodeType": "InlineAssembly",
                        "src": "6001:288:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 171,
                    "nodeType": "StructuredDocumentation",
                    "src": "4765:777:0",
                    "text": "@dev Allows execution of a delegatecall if proxyOwner is a smart contract. Uses EIP-1271\n (https://eips.ethereum.org/EIPS/eip-1271) signer validation.\n @param to Address of the external contract to delegatecall, validated by the proxyOwner contract\n @param data Call data to include in the delegatecall, validated by the proxyOwner contract\n @param signature Signature that will be validated by the proxyOwner contract\n @param unsignedData Unsigned call data appended to the delegatecall\n @notice WARNING: The `to` contract is responsible for secure handling of the call provided in the encoded\n `callData`. If the proxyOwner contract validates a delegatecall to a malicious contract, this could result in\n total loss of the account."
                  },
                  "functionSelector": "2867a68d",
                  "id": 221,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 182,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 181,
                        "name": "onlyDelegateCallable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 53,
                        "src": "5692:20:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5692:20:0"
                    }
                  ],
                  "name": "metaDelegateCall_EIP1271",
                  "nameLocation": "5554:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5592:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "5584:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5584:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5611:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "5596:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5596:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "5632:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "5617:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5617:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "unsignedData",
                        "nameLocation": "5658:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 221,
                        "src": "5643:27:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5643:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5578:96:0"
                  },
                  "returnParameters": {
                    "id": 183,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5713:0:0"
                  },
                  "scope": 234,
                  "src": "5545:748:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 228,
                    "nodeType": "Block",
                    "src": "6472:163:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6487:144:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6559:7:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6559:9:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6570:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6573:4:0",
                                    "type": "",
                                    "value": "0x28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6579:4:0",
                                    "type": "",
                                    "value": "0x14"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodecopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "6547:11:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6547:37:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6547:37:0"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6591:34:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6610:4:0",
                                    "type": "",
                                    "value": "0x60"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6622:1:0",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6616:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6616:8:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6606:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6606:19:0"
                              },
                              "variableNames": [
                                {
                                  "name": "_proxyOwner",
                                  "nodeType": "YulIdentifier",
                                  "src": "6591:11:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 225,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6591:11:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 227,
                        "nodeType": "InlineAssembly",
                        "src": "6478:153:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 222,
                    "nodeType": "StructuredDocumentation",
                    "src": "6297:106:0",
                    "text": "@dev Returns the owner address for the proxy\n @return _proxyOwner The owner address for the proxy"
                  },
                  "id": 229,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxyOwner",
                  "nameLocation": "6415:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6425:2:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "_proxyOwner",
                        "nameLocation": "6459:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "6451:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6450:21:0"
                  },
                  "scope": 234,
                  "src": "6406:229:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "6666:3:0",
                    "statements": []
                  },
                  "id": 233,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6646:2:0"
                  },
                  "returnParameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6666:0:0"
                  },
                  "scope": 234,
                  "src": "6639:30:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 235,
              "src": "416:6255:0",
              "usedErrors": [
                14,
                21,
                24
              ]
            }
          ],
          "src": "45:6627:0"
        },
        "id": 0
      },
      "contracts/Account/ECDSA.sol": {
        "ast": {
          "absolutePath": "contracts/Account/ECDSA.sol",
          "exportedSymbols": {
            "ECDSA": [
              351
            ]
          },
          "id": 352,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 236,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:1"
            },
            {
              "id": 237,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ECDSA",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "91:205:1",
                "text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
              },
              "fullyImplemented": true,
              "id": 351,
              "linearizedBaseContracts": [
                351
              ],
              "name": "ECDSA",
              "nameLocation": "305:5:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 275,
                    "nodeType": "Block",
                    "src": "1184:653:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 248,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "1236:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1236:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1256:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "1236:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 257,
                        "nodeType": "IfStatement",
                        "src": "1232:94:1",
                        "trueBody": {
                          "id": 256,
                          "nodeType": "Block",
                          "src": "1260:66:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
                                    "id": 253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1281:33:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
                                      "typeString": "literal_string \"ECDSA: invalid signature length\""
                                    },
                                    "value": "ECDSA: invalid signature length"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
                                      "typeString": "literal_string \"ECDSA: invalid signature length\""
                                    }
                                  ],
                                  "id": 252,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "1274:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1274:41:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 255,
                              "nodeType": "ExpressionStatement",
                              "src": "1274:41:1"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          259
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 259,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "1400:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 275,
                            "src": "1392:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 258,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1392:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 260,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1392:9:1"
                      },
                      {
                        "assignments": [
                          262
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 262,
                            "mutability": "mutable",
                            "name": "s",
                            "nameLocation": "1419:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 275,
                            "src": "1411:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 261,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1411:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 263,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1411:9:1"
                      },
                      {
                        "assignments": [
                          265
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 265,
                            "mutability": "mutable",
                            "name": "v",
                            "nameLocation": "1436:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 275,
                            "src": "1430:7:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 264,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "1430:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 266,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1430:7:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1636:155:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1650:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "signature",
                                        "nodeType": "YulIdentifier",
                                        "src": "1665:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1676:4:1",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1661:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1661:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1655:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1655:27:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "1650:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1695:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "signature",
                                        "nodeType": "YulIdentifier",
                                        "src": "1710:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1721:4:1",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1706:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1706:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1700:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1700:27:1"
                              },
                              "variableNames": [
                                {
                                  "name": "s",
                                  "nodeType": "YulIdentifier",
                                  "src": "1695:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1740:41:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1750:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "signature",
                                            "nodeType": "YulIdentifier",
                                            "src": "1763:9:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1774:4:1",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1759:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1759:20:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1753:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1753:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "byte",
                                  "nodeType": "YulIdentifier",
                                  "src": "1745:4:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1745:36:1"
                              },
                              "variableNames": [
                                {
                                  "name": "v",
                                  "nodeType": "YulIdentifier",
                                  "src": "1740:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 259,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1650:1:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 262,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1695:1:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 243,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1665:9:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 243,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1710:9:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 243,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1763:9:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 265,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1740:1:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 267,
                        "nodeType": "InlineAssembly",
                        "src": "1627:164:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 269,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "1816:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 270,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "1822:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 271,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "1825:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 272,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "1828:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 268,
                            "name": "recover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              276,
                              333
                            ],
                            "referencedDeclaration": 333,
                            "src": "1808:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 247,
                        "id": 274,
                        "nodeType": "Return",
                        "src": "1801:29:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "317:775:1",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
                  },
                  "id": 276,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "1106:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "1122:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "1114:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "1141:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "1128:22:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1128:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1113:38:1"
                  },
                  "returnParameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "1175:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1175:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1174:9:1"
                  },
                  "scope": 351,
                  "src": "1097:740:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 332,
                    "nodeType": "Block",
                    "src": "2079:1320:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 293,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 285,
                                    "src": "2979:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2971:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 291,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2971:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2971:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                                "id": 295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2985:66:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...7168"
                                },
                                "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                              },
                              "src": "2971:80:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3053:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
                                "typeString": "literal_string \"ECDSA: invalid signature 's' value\""
                              },
                              "value": "ECDSA: invalid signature 's' value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
                                "typeString": "literal_string \"ECDSA: invalid signature 's' value\""
                              }
                            ],
                            "id": 290,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2963:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2963:127:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 299,
                        "nodeType": "ExpressionStatement",
                        "src": "2963:127:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 301,
                                  "name": "v",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "3108:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3237",
                                  "id": 302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3113:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_27_by_1",
                                    "typeString": "int_const 27"
                                  },
                                  "value": "27"
                                },
                                "src": "3108:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 304,
                                  "name": "v",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "3119:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3238",
                                  "id": 305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3124:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_28_by_1",
                                    "typeString": "int_const 28"
                                  },
                                  "value": "28"
                                },
                                "src": "3119:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3108:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c7565",
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3128:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
                                "typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
                              },
                              "value": "ECDSA: invalid signature 'v' value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4",
                                "typeString": "literal_string \"ECDSA: invalid signature 'v' value\""
                              }
                            ],
                            "id": 300,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3100:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3100:65:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "3100:65:1"
                      },
                      {
                        "assignments": [
                          312
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 312,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "3268:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 332,
                            "src": "3260:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 311,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3260:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 319,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 314,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "3287:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 315,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "3293:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 316,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "3296:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 317,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "3299:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 313,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "3277:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3277:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3260:41:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 321,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "3319:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3337:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3329:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 322,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3329:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3329:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3319:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45434453413a20696e76616c6964207369676e6174757265",
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3341:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                                "typeString": "literal_string \"ECDSA: invalid signature\""
                              },
                              "value": "ECDSA: invalid signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                                "typeString": "literal_string \"ECDSA: invalid signature\""
                              }
                            ],
                            "id": 320,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3311:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3311:57:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 329,
                        "nodeType": "ExpressionStatement",
                        "src": "3311:57:1"
                      },
                      {
                        "expression": {
                          "id": 330,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 312,
                          "src": "3386:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 289,
                        "id": 331,
                        "nodeType": "Return",
                        "src": "3379:13:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "1843:137:1",
                    "text": " @dev Overload of {ECDSA-recover-bytes32-bytes-} that receives the `v`,\n `r` and `s` signature fields separately."
                  },
                  "id": 333,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "1994:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "2010:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "2002:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2002:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "2022:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "2016:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2016:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2033:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "2025:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "2044:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "2036:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2036:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2001:45:1"
                  },
                  "returnParameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "2070:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2070:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2069:9:1"
                  },
                  "scope": 351,
                  "src": "1985:1414:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 349,
                    "nodeType": "Block",
                    "src": "3741:187:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                  "id": 344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3879:34:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  "value": "\u0019Ethereum Signed Message:\n32"
                                },
                                {
                                  "id": 345,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 336,
                                  "src": "3915:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 342,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3862:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3862:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3862:58:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 341,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3852:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3852:69:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 340,
                        "id": 348,
                        "nodeType": "Return",
                        "src": "3845:76:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 334,
                    "nodeType": "StructuredDocumentation",
                    "src": "3405:253:1",
                    "text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n replicates the behavior of the\n https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\n JSON-RPC method.\n See {recover}."
                  },
                  "id": 350,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toEthSignedMessageHash",
                  "nameLocation": "3672:22:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "3703:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "3695:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3695:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3694:14:1"
                  },
                  "returnParameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "3732:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3732:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3731:9:1"
                  },
                  "scope": 351,
                  "src": "3663:265:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 352,
              "src": "297:3633:1",
              "usedErrors": []
            }
          ],
          "src": "45:3886:1"
        },
        "id": 1
      },
      "contracts/Account/EIP1271Validator.sol": {
        "ast": {
          "absolutePath": "contracts/Account/EIP1271Validator.sol",
          "exportedSymbols": {
            "EIP1271Validator": [
              388
            ],
            "IERC1271": [
              454
            ]
          },
          "id": 389,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 353,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:2"
            },
            {
              "id": 354,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:2"
            },
            {
              "absolutePath": "contracts/Interfaces/IERC1271.sol",
              "file": "../Interfaces/IERC1271.sol",
              "id": 355,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 389,
              "sourceUnit": 455,
              "src": "91:36:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "EIP1271Validator",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 356,
                "nodeType": "StructuredDocumentation",
                "src": "129:142:2",
                "text": "@title Provides a validation check on a signer contract that implements EIP-1271\n @notice https://github.com/ethereum/EIPs/issues/1271"
              },
              "fullyImplemented": true,
              "id": 388,
              "linearizedBaseContracts": [
                388
              ],
              "name": "EIP1271Validator",
              "nameLocation": "289:16:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 364,
                  "mutability": "constant",
                  "name": "MAGICVALUE",
                  "nameLocation": "336:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "311:90:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "697356616c69645369676e617475726528627974657333322c627974657329",
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "366:33:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1626ba7e356f5979dd355a3d2bfb43e80420a480c3b854edce286a82d7496869",
                              "typeString": "literal_string \"isValidSignature(bytes32,bytes)\""
                            },
                            "value": "isValidSignature(bytes32,bytes)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1626ba7e356f5979dd355a3d2bfb43e80420a480c3b854edce286a82d7496869",
                              "typeString": "literal_string \"isValidSignature(bytes32,bytes)\""
                            }
                          ],
                          "id": 360,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "356:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "356:44:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "349:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "349:6:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 386,
                    "nodeType": "Block",
                    "src": "797:82:2",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 380,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 369,
                                "src": "844:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 381,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 371,
                                "src": "850:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 377,
                                    "name": "signer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 367,
                                    "src": "819:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 376,
                                  "name": "IERC1271",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 454,
                                  "src": "810:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC1271_$454_$",
                                    "typeString": "type(contract IERC1271)"
                                  }
                                },
                                "id": 378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "810:16:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC1271_$454",
                                  "typeString": "contract IERC1271"
                                }
                              },
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isValidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 453,
                              "src": "810:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                              }
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "810:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 383,
                            "name": "MAGICVALUE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "864:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "810:64:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 375,
                        "id": 385,
                        "nodeType": "Return",
                        "src": "803:71:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 365,
                    "nodeType": "StructuredDocumentation",
                    "src": "406:275:2",
                    "text": " @dev Should return whether the signature provided is valid for the provided hash\n @param signer Address of a contract that implements EIP-1271\n @param hash Hash of the data to be validated\n @param signature Signature byte array associated with hash"
                  },
                  "id": 387,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isValidSignature",
                  "nameLocation": "694:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "signer",
                        "nameLocation": "720:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "712:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "712:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "736:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "728:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "757:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "742:24:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "742:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "711:56:2"
                  },
                  "returnParameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "791:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "791:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "790:6:2"
                  },
                  "scope": 388,
                  "src": "685:194:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 389,
              "src": "271:610:2",
              "usedErrors": []
            }
          ],
          "src": "45:837:2"
        },
        "id": 2
      },
      "contracts/Account/EIP712SignerRecovery.sol": {
        "ast": {
          "absolutePath": "contracts/Account/EIP712SignerRecovery.sol",
          "exportedSymbols": {
            "ECDSA": [
              351
            ],
            "EIP712SignerRecovery": [
              441
            ]
          },
          "id": 442,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 390,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:3"
            },
            {
              "id": 391,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:3"
            },
            {
              "absolutePath": "contracts/Account/ECDSA.sol",
              "file": "./ECDSA.sol",
              "id": 392,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 442,
              "sourceUnit": 352,
              "src": "91:21:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "EIP712SignerRecovery",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 393,
                "nodeType": "StructuredDocumentation",
                "src": "114:126:3",
                "text": "@title Provides signer address recovery for EIP-712 signed messages\n @notice https://github.com/ethereum/EIPs/pull/712"
              },
              "fullyImplemented": true,
              "id": 441,
              "linearizedBaseContracts": [
                441
              ],
              "name": "EIP712SignerRecovery",
              "nameLocation": "258:20:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 439,
                    "nodeType": "Block",
                    "src": "559:561:3",
                    "statements": [
                      {
                        "assignments": [
                          404
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 404,
                            "mutability": "mutable",
                            "name": "messageHash",
                            "nameLocation": "621:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 439,
                            "src": "613:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 403,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "613:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 432,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "1901",
                                  "id": 408,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "669:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  "value": "\u0019\u0001"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                              "id": 413,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "769:84:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                                "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                              },
                                              "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                                "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                              }
                                            ],
                                            "id": 412,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "759:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 414,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "759:95:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "4272696e6b4163636f756e74",
                                              "id": 416,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "874:14:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_977bbc96a0db0d97b4b08241f0db5937a7503966a121e611507f9a616f95651f",
                                                "typeString": "literal_string \"BrinkAccount\""
                                              },
                                              "value": "BrinkAccount"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_977bbc96a0db0d97b4b08241f0db5937a7503966a121e611507f9a616f95651f",
                                                "typeString": "literal_string \"BrinkAccount\""
                                              }
                                            ],
                                            "id": 415,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "864:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 417,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "864:25:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "31",
                                              "id": 419,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "909:3:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                                "typeString": "literal_string \"1\""
                                              },
                                              "value": "1"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                                "typeString": "literal_string \"1\""
                                              }
                                            ],
                                            "id": 418,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "899:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 420,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "899:14:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 421,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "923:5:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 422,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "chainid",
                                          "nodeType": "MemberAccess",
                                          "src": "923:13:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 425,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "954:4:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_EIP712SignerRecovery_$441",
                                                "typeString": "contract EIP712SignerRecovery"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_EIP712SignerRecovery_$441",
                                                "typeString": "contract EIP712SignerRecovery"
                                              }
                                            ],
                                            "id": 424,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "946:7:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 423,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "946:7:3",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 426,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "946:13:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 410,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "739:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 411,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encode",
                                        "nodeType": "MemberAccess",
                                        "src": "739:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 427,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "739:228:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 409,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "729:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "729:239:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 429,
                                  "name": "dataHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 396,
                                  "src": "976:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 406,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "645:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "645:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "645:345:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 405,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "635:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "635:356:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "613:378:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 435,
                              "name": "messageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 404,
                              "src": "1092:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 436,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "1105:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 433,
                              "name": "ECDSA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "1078:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ECDSA_$351_$",
                                "typeString": "type(library ECDSA)"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recover",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 276,
                            "src": "1078:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1078:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 402,
                        "id": 438,
                        "nodeType": "Return",
                        "src": "1071:44:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 394,
                    "nodeType": "StructuredDocumentation",
                    "src": "283:173:3",
                    "text": "@dev Recovers the signer address for an EIP-712 signed message\n @param dataHash Hash of the data included in the message\n @param signature An EIP-712 signature"
                  },
                  "id": 440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_recoverSigner",
                  "nameLocation": "468:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "dataHash",
                        "nameLocation": "491:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "483:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "483:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "516:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "501:24:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "482:44:3"
                  },
                  "returnParameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 401,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "550:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "550:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "549:9:3"
                  },
                  "scope": 441,
                  "src": "459:661:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 442,
              "src": "240:882:3",
              "usedErrors": []
            }
          ],
          "src": "45:1078:3"
        },
        "id": 3
      },
      "contracts/Interfaces/IERC1271.sol": {
        "ast": {
          "absolutePath": "contracts/Interfaces/IERC1271.sol",
          "exportedSymbols": {
            "IERC1271": [
              454
            ]
          },
          "id": 455,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 443,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:4"
            },
            {
              "id": 444,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1271",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 454,
              "linearizedBaseContracts": [
                454
              ],
              "name": "IERC1271",
              "nameLocation": "101:8:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "1626ba7e",
                  "id": 453,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isValidSignature",
                  "nameLocation": "123:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "_hash",
                        "nameLocation": "148:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "140:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "140:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "_signature",
                        "nameLocation": "168:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "155:23:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "155:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "139:40:4"
                  },
                  "returnParameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "210:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "203:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "203:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "202:19:4"
                  },
                  "scope": 454,
                  "src": "114:108:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 455,
              "src": "91:133:4",
              "usedErrors": []
            }
          ],
          "src": "45:180:4"
        },
        "id": 4
      },
      "contracts/Test/AccountWithTestCalls.sol": {
        "ast": {
          "absolutePath": "contracts/Test/AccountWithTestCalls.sol",
          "exportedSymbols": {
            "Account": [
              234
            ],
            "AccountWithTestCalls": [
              464
            ],
            "ECDSA": [
              351
            ],
            "EIP1271Validator": [
              388
            ],
            "EIP712SignerRecovery": [
              441
            ],
            "IERC1271": [
              454
            ],
            "TestAccountCalls": [
              568
            ]
          },
          "id": 465,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 456,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:5"
            },
            {
              "id": 457,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:5"
            },
            {
              "absolutePath": "contracts/Account/Account.sol",
              "file": "../Account/Account.sol",
              "id": 458,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 465,
              "sourceUnit": 235,
              "src": "91:32:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/Test/TestAccountCalls.sol",
              "file": "./TestAccountCalls.sol",
              "id": 459,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 465,
              "sourceUnit": 569,
              "src": "124:32:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 460,
                    "name": "Account",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 234,
                    "src": "200:7:5"
                  },
                  "id": 461,
                  "nodeType": "InheritanceSpecifier",
                  "src": "200:7:5"
                },
                {
                  "baseName": {
                    "id": 462,
                    "name": "TestAccountCalls",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 568,
                    "src": "209:16:5"
                  },
                  "id": 463,
                  "nodeType": "InheritanceSpecifier",
                  "src": "209:16:5"
                }
              ],
              "canonicalName": "AccountWithTestCalls",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 464,
              "linearizedBaseContracts": [
                464,
                568,
                234,
                388,
                441
              ],
              "name": "AccountWithTestCalls",
              "nameLocation": "176:20:5",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 465,
              "src": "158:72:5",
              "usedErrors": [
                14,
                21,
                24
              ]
            }
          ],
          "src": "45:186:5"
        },
        "id": 5
      },
      "contracts/Test/TestAccountCalls.sol": {
        "ast": {
          "absolutePath": "contracts/Test/TestAccountCalls.sol",
          "exportedSymbols": {
            "TestAccountCalls": [
              568
            ]
          },
          "id": 569,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 466,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:6"
            },
            {
              "id": 467,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TestAccountCalls",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 568,
              "linearizedBaseContracts": [
                568
              ],
              "name": "TestAccountCalls",
              "nameLocation": "100:16:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "_called",
                  "nameLocation": "134:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "121:20:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "121:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 471,
                  "name": "ExecutedTestCall",
                  "nameLocation": "152:16:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "168:2:6"
                  },
                  "src": "146:25:6"
                },
                {
                  "anonymous": false,
                  "id": 475,
                  "name": "MockParamEvent",
                  "nameLocation": "180:14:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 474,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 473,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "203:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "195:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "194:18:6"
                  },
                  "src": "174:39:6"
                },
                {
                  "anonymous": false,
                  "id": 483,
                  "name": "MockParamsEvent",
                  "nameLocation": "222:15:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 477,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "246:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 483,
                        "src": "238:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "238:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 479,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mockInt",
                        "nameLocation": "262:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 483,
                        "src": "256:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "256:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 481,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "mockAddress",
                        "nameLocation": "279:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 483,
                        "src": "271:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "271:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "237:54:6"
                  },
                  "src": "216:76:6"
                },
                {
                  "body": {
                    "id": 501,
                    "nodeType": "Block",
                    "src": "343:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "357:12:6",
                              "subExpression": {
                                "id": 489,
                                "name": "forceRevert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "358:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546573744163636f756e7443616c6c733a207265766572746564",
                              "id": 491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "371:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c4d7b23023a41f11a4bf30c4d02bb77d578a091a668126c52ae526738091c81a",
                                "typeString": "literal_string \"TestAccountCalls: reverted\""
                              },
                              "value": "TestAccountCalls: reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c4d7b23023a41f11a4bf30c4d02bb77d578a091a668126c52ae526738091c81a",
                                "typeString": "literal_string \"TestAccountCalls: reverted\""
                              }
                            ],
                            "id": 488,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "349:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "349:51:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 493,
                        "nodeType": "ExpressionStatement",
                        "src": "349:51:6"
                      },
                      {
                        "expression": {
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 494,
                            "name": "_called",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "406:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "416:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "406:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 497,
                        "nodeType": "ExpressionStatement",
                        "src": "406:14:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 498,
                            "name": "ExecutedTestCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "431:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "431:18:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 500,
                        "nodeType": "EmitStatement",
                        "src": "426:23:6"
                      }
                    ]
                  },
                  "functionSelector": "29d0bec0",
                  "id": 502,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testRevert",
                  "nameLocation": "305:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "forceRevert",
                        "nameLocation": "321:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 502,
                        "src": "316:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "316:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "315:18:6"
                  },
                  "returnParameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "343:0:6"
                  },
                  "scope": 568,
                  "src": "296:158:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 527,
                    "nodeType": "Block",
                    "src": "528:147:6",
                    "statements": [
                      {
                        "assignments": [
                          510
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 510,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "539:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 527,
                            "src": "534:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 509,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "534:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 511,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "534:12:6"
                      },
                      {
                        "expression": {
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 512,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "553:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 513,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "552:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "596:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "id": 514,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 506,
                                  "src": "566:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "566:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 516,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 504,
                                  "src": "588:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "566:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "566:33:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "552:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "552:47:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "613:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546573744163636f756e7443616c6c733a20746573745472616e736665724554482063616c6c206661696c6564",
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "622:47:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ad16999ef30c82414110933fbf23fabd21290437ee5d7b84fbd170da4d252c7",
                                "typeString": "literal_string \"TestAccountCalls: testTransferETH call failed\""
                              },
                              "value": "TestAccountCalls: testTransferETH call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ad16999ef30c82414110933fbf23fabd21290437ee5d7b84fbd170da4d252c7",
                                "typeString": "literal_string \"TestAccountCalls: testTransferETH call failed\""
                              }
                            ],
                            "id": 522,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "605:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "605:65:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 526,
                        "nodeType": "ExpressionStatement",
                        "src": "605:65:6"
                      }
                    ]
                  },
                  "functionSelector": "9e02f294",
                  "id": 528,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testTransferETH",
                  "nameLocation": "467:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "492:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "484:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "484:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "508:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "500:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "500:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "483:35:6"
                  },
                  "returnParameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "528:0:6"
                  },
                  "scope": 568,
                  "src": "458:217:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 537,
                    "nodeType": "Block",
                    "src": "726:40:6",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 534,
                              "name": "mockUint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "752:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 533,
                            "name": "MockParamEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "737:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "737:24:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 536,
                        "nodeType": "EmitStatement",
                        "src": "732:29:6"
                      }
                    ]
                  },
                  "functionSelector": "dcd9c7fa",
                  "id": 538,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testEvent",
                  "nameLocation": "688:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "707:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "699:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "698:18:6"
                  },
                  "returnParameters": {
                    "id": 532,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "726:0:6"
                  },
                  "scope": 568,
                  "src": "679:87:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 553,
                    "nodeType": "Block",
                    "src": "853:63:6",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 548,
                              "name": "mockUint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "880:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 549,
                              "name": "mockInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "890:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 550,
                              "name": "mockAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "899:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 547,
                            "name": "MockParamsEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 483,
                            "src": "864:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_int24_$_t_address_$returns$__$",
                              "typeString": "function (uint256,int24,address)"
                            }
                          },
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "864:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 552,
                        "nodeType": "EmitStatement",
                        "src": "859:52:6"
                      }
                    ]
                  },
                  "functionSelector": "6ea4b40d",
                  "id": 554,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testEvent",
                  "nameLocation": "779:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 540,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "798:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "790:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 542,
                        "mutability": "mutable",
                        "name": "mockInt",
                        "nameLocation": "814:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "808:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 544,
                        "mutability": "mutable",
                        "name": "mockAddress",
                        "nameLocation": "831:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 554,
                        "src": "823:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 543,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:54:6"
                  },
                  "returnParameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "853:0:6"
                  },
                  "scope": 568,
                  "src": "770:146:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "967:95:6",
                    "statements": [
                      {
                        "assignments": [
                          560
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 560,
                            "mutability": "mutable",
                            "name": "ptr",
                            "nameLocation": "981:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 566,
                            "src": "973:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 559,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "973:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 564,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "6d6f636b55696e74",
                              "id": 562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "997:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94a02aa970f44cb624bd9f8f6d45117d09bef87e3b6959977c67468c9517e9c8",
                                "typeString": "literal_string \"mockUint\""
                              },
                              "value": "mockUint"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_94a02aa970f44cb624bd9f8f6d45117d09bef87e3b6959977c67468c9517e9c8",
                                "typeString": "literal_string \"mockUint\""
                              }
                            ],
                            "id": 561,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "987:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "987:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "973:35:6"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1023:35:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1038:3:6"
                                  },
                                  {
                                    "name": "mockUint",
                                    "nodeType": "YulIdentifier",
                                    "src": "1043:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1031:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1031:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1031:21:6"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 556,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1043:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 560,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1038:3:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 565,
                        "nodeType": "InlineAssembly",
                        "src": "1014:44:6"
                      }
                    ]
                  },
                  "functionSelector": "25a687bc",
                  "id": 567,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "testStore",
                  "nameLocation": "929:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 556,
                        "mutability": "mutable",
                        "name": "mockUint",
                        "nameLocation": "948:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "940:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 555,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:18:6"
                  },
                  "returnParameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "967:0:6"
                  },
                  "scope": 568,
                  "src": "920:142:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 569,
              "src": "91:973:6",
              "usedErrors": []
            }
          ],
          "src": "45:1019:6"
        },
        "id": 6
      }
    }
  }
}
