{
  "id": "84ecbd333b7e62d6dbde583c73ad6c3a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Account/AccountFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\n/// @title Brink account factory\n/// @notice This is a factory contract used for deployment of Brink proxy accounts\ncontract AccountFactory {\n  error DeployFailed();\n\n  /// @dev Deploys a Proxy account for the given owner\n  /// @param owner Owner of the Proxy account\n  /// @return account Address of the deployed Proxy account\n  /// @notice This deploys a \"minimal proxy\" contract with the proxy owner address added to the deployed bytecode. The\n  /// owner address can be read within a delegatecall by using `extcodecopy`. Minimal proxy bytecode is from\n  /// https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48 and https://eips.ethereum.org/EIPS/eip-1167. It\n  /// utilizes the \"vanity address optimization\" from EIP 1167\n  function deployAccount(address owner) external returns (address account) {\n    bytes memory initCode = abi.encodePacked(\n      //  [* constructor **] [** minimal proxy ***] [******* implementation *******] [**** minimal proxy *****]\n      hex'603c3d8160093d39f3_3d3d3d3d363d3d37363d6f_afcbce78c080f96032a5c1cb1b832d7b_5af43d3d93803e602657fd5bf3',\n      owner\n    );\n    assembly {\n      account := create2(0, add(initCode, 0x20), mload(initCode), 0)\n    }\n    if(account == address(0)) {\n      revert DeployFailed();\n    }\n  }\n}\n"
      },
      "contracts/Batched/DeployAndCall.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"../Account/AccountFactory.sol\";\n\n/// @title DeployAndCall\n/// @notice This contract contains a function to batch account deploy and call into one transaction\ncontract DeployAndCall {\n  /// @dev The AccountFactory to use for account deployments\n  AccountFactory constant ACCOUNT_FACTORY = AccountFactory(0xe925f84cA9Dd5b3844fC424861D7bDf9485761B6);\n\n  /// @dev Deploys an account for the given owner and executes callData on the account\n  /// @param owner Address of the account owner\n  /// @param callData The call to execute on the account after deployment\n  function deployAndCall(address owner, bytes memory callData) external payable {\n    address account = ACCOUNT_FACTORY.deployAccount(owner);\n\n    if (callData.length > 0) {\n      assembly {\n        let result := call(gas(), account, callvalue(), add(callData, 0x20), mload(callData), 0, 0)\n        returndatacopy(0, 0, returndatasize())\n        switch result\n        case 0 {\n          revert(0, returndatasize())\n        }\n        default {\n          return(0, returndatasize())\n        }\n      }\n    }\n  }\n}\n"
      },
      "contracts/Test/DeployAndCallWrapper.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity =0.8.10;\npragma abicoder v1;\n\nimport \"../Batched/DeployAndCall.sol\";\n\ncontract DeployAndCallWrapper is DeployAndCall {\n  function accountFactory() external pure returns (address) {\n    return address(ACCOUNT_FACTORY);\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Account/AccountFactory.sol": {
        "AccountFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "DeployFailed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "deployAccount",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610126806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da9fc1ae14610030575b600080fd5b6100566004803603602081101561004657600080fd5b50356001600160a01b0316610072565b604080516001600160a01b039092168252519081900360200190f35b6000808260405160200180806100e960319139603101826001600160a01b031660601b8152601401915050604051602081830303815290604052905060008151602083016000f591506001600160a01b0382166100e25760405163b4f5411160e01b815260040160405180910390fd5b5091905056fe603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA9FC1AE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0xE9 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x31 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE2 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB4F54111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x3C RETURNDATASIZE DUP2 PUSH1 0x9 RETURNDATASIZE CODECOPY RETURN RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATACOPY CALLDATASIZE RETURNDATASIZE PUSH16 0xAFCBCE78C080F96032A5C1CB1B832D7B GAS DELEGATECALL RETURNDATASIZE RETURNDATASIZE SWAP4 DUP1 RETURNDATACOPY PUSH1 0x26 JUMPI REVERT JUMPDEST RETURN LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "207:1152:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@deployAccount_34": {
                  "entryPoint": 114,
                  "id": 34,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da9fc1ae14610030575b600080fd5b6100566004803603602081101561004657600080fd5b50356001600160a01b0316610072565b604080516001600160a01b039092168252519081900360200190f35b6000808260405160200180806100e960319139603101826001600160a01b031660601b8152601401915050604051602081830303815290604052905060008151602083016000f591506001600160a01b0382166100e25760405163b4f5411160e01b815260040160405180910390fd5b5091905056fe603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3a164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA9FC1AE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0xE9 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x31 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE2 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB4F54111 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x3C RETURNDATASIZE DUP2 PUSH1 0x9 RETURNDATASIZE CODECOPY RETURN RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATACOPY CALLDATASIZE RETURNDATASIZE PUSH16 0xAFCBCE78C080F96032A5C1CB1B832D7B GAS DELEGATECALL RETURNDATASIZE RETURNDATASIZE SWAP4 DUP1 RETURNDATACOPY PUSH1 0x26 JUMPI REVERT JUMPDEST RETURN LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "207:1152:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:526;;;;;;;;;;;;;;;;-1:-1:-1;831:526:0;-1:-1:-1;;;;;831:526:0;;:::i;:::-;;;;-1:-1:-1;;;;;831:526:0;;;;;;;;;;;;;;;887:15;910:21;1184:5;934:261;;;;;;;;;;;;;-1:-1:-1;;;;;934:261:0;;;;;;;;;;;;;;;;;;;;;;910:285;;1278:1;1267:8;1261:15;1254:4;1244:8;1240:19;1237:1;1229:51;1218:62;-1:-1:-1;;;;;;1294:21:0;;1291:62;;1332:14;;-1:-1:-1;;;1332:14:0;;;;;;;;;;;1291:62;904:453;831:526;;;:::o"
            },
            "methodIdentifiers": {
              "deployAccount(address)": "da9fc1ae"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DeployFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deployAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deployAccount(address)\":{\"details\":\"Deploys a Proxy account for the given owner\",\"params\":{\"owner\":\"Owner of the Proxy account\"},\"returns\":{\"account\":\"Address of the deployed Proxy account\"}}},\"title\":\"Brink account factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployAccount(address)\":{\"notice\":\"This deploys a \\\"minimal proxy\\\" contract with the proxy owner address added to the deployed bytecode. The owner address can be read within a delegatecall by using `extcodecopy`. Minimal proxy bytecode is from https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48 and https://eips.ethereum.org/EIPS/eip-1167. It utilizes the \\\"vanity address optimization\\\" from EIP 1167\"}},\"notice\":\"This is a factory contract used for deployment of Brink proxy accounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Account/AccountFactory.sol\":\"AccountFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Account/AccountFactory.sol\":{\"keccak256\":\"0xecc5b2bb62c369f0184e32d50453e279a79535c44164ae88bf7516c7d6b14568\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://41c9dbc0613e63f14177b9f6ce9040db44fb7ac250a1bd2b624e938b5096808e\",\"dweb:/ipfs/QmWCZidpP7Jx692hpF2qcsUnSQCKxCdSg5nbCSqeZm933j\"]}},\"version\":1}"
        }
      },
      "contracts/Batched/DeployAndCall.sol": {
        "DeployAndCall": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ],
              "name": "deployAndCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506101c3806100206000396000f3fe60806040526004361061001e5760003560e01c8063ade8090514610023575b600080fd5b6100e66004803603604081101561003957600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561007157600080fd5b82018360208201111561008357600080fd5b803590602001918460018302840111640100000000831117156100a557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100e8945050505050565b005b600073e925f84ca9dd5b3844fc424861d7bdf9485761b673ffffffffffffffffffffffffffffffffffffffff1663da9fc1ae846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1681526020019150506020604051808303816000875af115801561016c573d6000803e3d6000fd5b505050506040513d602081101561018257600080fd5b50518251909150156101b15760008083516020850134855af13d6000803e8080156101ac573d6000f35b3d6000fd5b50505056fea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADE80905 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xE8 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xE925F84CA9DD5B3844FC424861D7BDF9485761B6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA9FC1AE DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x20 DUP6 ADD CALLVALUE DUP6 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x1AC JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "257:910:1:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@deployAndCall_70": {
                  "entryPoint": 232,
                  "id": 70,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361061001e5760003560e01c8063ade8090514610023575b600080fd5b6100e66004803603604081101561003957600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561007157600080fd5b82018360208201111561008357600080fd5b803590602001918460018302840111640100000000831117156100a557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100e8945050505050565b005b600073e925f84ca9dd5b3844fc424861d7bdf9485761b673ffffffffffffffffffffffffffffffffffffffff1663da9fc1ae846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1681526020019150506020604051808303816000875af115801561016c573d6000803e3d6000fd5b505050506040513d602081101561018257600080fd5b50518251909150156101b15760008083516020850134855af13d6000803e8080156101ac573d6000f35b3d6000fd5b50505056fea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADE80905 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xE8 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xE925F84CA9DD5B3844FC424861D7BDF9485761B6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA9FC1AE DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x20 DUP6 ADD CALLVALUE DUP6 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x1AC JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "257:910:1:-:0;;;;;;;;;;;;;;;;;;;;;659:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:506:1;;-1:-1:-1;659:506:1;;-1:-1:-1;;;;;659:506:1:i;:::-;;;743:15;402:42;761:29;;;791:5;761:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;761:36:1;808:15;;761:36;;-1:-1:-1;808:19:1;804:357;;945:1;942;931:8;925:15;918:4;908:8;904:19;891:11;882:7;875:5;870:77;977:16;974:1;971;956:38;1010:6;1025:56;;;;1120:16;1117:1;1110:27;1025:56;1054:16;1051:1;1044:27;804:357;737:428;659:506;;:::o"
            },
            "methodIdentifiers": {
              "deployAndCall(address,bytes)": "ade80905"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"deployAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deployAndCall(address,bytes)\":{\"details\":\"Deploys an account for the given owner and executes callData on the account\",\"params\":{\"callData\":\"The call to execute on the account after deployment\",\"owner\":\"Address of the account owner\"}}},\"stateVariables\":{\"ACCOUNT_FACTORY\":{\"details\":\"The AccountFactory to use for account deployments\"}},\"title\":\"DeployAndCall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract contains a function to batch account deploy and call into one transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Batched/DeployAndCall.sol\":\"DeployAndCall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Account/AccountFactory.sol\":{\"keccak256\":\"0xecc5b2bb62c369f0184e32d50453e279a79535c44164ae88bf7516c7d6b14568\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://41c9dbc0613e63f14177b9f6ce9040db44fb7ac250a1bd2b624e938b5096808e\",\"dweb:/ipfs/QmWCZidpP7Jx692hpF2qcsUnSQCKxCdSg5nbCSqeZm933j\"]},\"contracts/Batched/DeployAndCall.sol\":{\"keccak256\":\"0x20bfdf03211a73d35aa3e727e8381fdbda57aa7ff6088bae16df47b7559cf99e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5aedf897ca48ba714e941444f7e9914ef1fd58209b03d15788b4f04a44dcf4bf\",\"dweb:/ipfs/QmTXPaGR2yJ66a9BjHh877J1rqxS7g8NeM4p52G3PPFtWL\"]}},\"version\":1}"
        }
      },
      "contracts/Test/DeployAndCallWrapper.sol": {
        "DeployAndCallWrapper": {
          "abi": [
            {
              "inputs": [],
              "name": "accountFactory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ],
              "name": "deployAndCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506101e5806100206000396000f3fe6080604052600436106100295760003560e01c8063687cd9c11461002e578063ade809051461006c575b600080fd5b34801561003a57600080fd5b5073e925f84ca9dd5b3844fc424861d7bdf9485761b6604080516001600160a01b039092168252519081900360200190f35b6101226004803603604081101561008257600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100ad57600080fd5b8201836020820111156100bf57600080fd5b803590602001918460018302840111640100000000831117156100e157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610124945050505050565b005b600073e925f84ca9dd5b3844fc424861d7bdf9485761b66001600160a01b031663da9fc1ae846040518263ffffffff1660e01b815260040180826001600160a01b031681526020019150506020604051808303816000875af115801561018e573d6000803e3d6000fd5b505050506040513d60208110156101a457600080fd5b50518251909150156101d35760008083516020850134855af13d6000803e8080156101ce573d6000f35b3d6000fd5b50505056fea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x687CD9C1 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xADE80905 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xE925F84CA9DD5B3844FC424861D7BDF9485761B6 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x124 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xE925F84CA9DD5B3844FC424861D7BDF9485761B6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA9FC1AE DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x20 DUP6 ADD CALLVALUE DUP6 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x1CE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "131:153:2:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@accountFactory_88": {
                  "entryPoint": null,
                  "id": 88,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@deployAndCall_70": {
                  "entryPoint": 292,
                  "id": 70,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100295760003560e01c8063687cd9c11461002e578063ade809051461006c575b600080fd5b34801561003a57600080fd5b5073e925f84ca9dd5b3844fc424861d7bdf9485761b6604080516001600160a01b039092168252519081900360200190f35b6101226004803603604081101561008257600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100ad57600080fd5b8201836020820111156100bf57600080fd5b803590602001918460018302840111640100000000831117156100e157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610124945050505050565b005b600073e925f84ca9dd5b3844fc424861d7bdf9485761b66001600160a01b031663da9fc1ae846040518263ffffffff1660e01b815260040180826001600160a01b031681526020019150506020604051808303816000875af115801561018e573d6000803e3d6000fd5b505050506040513d60208110156101a457600080fd5b50518251909150156101d35760008083516020850134855af13d6000803e8080156101ce573d6000f35b3d6000fd5b50505056fea164736f6c634300080a000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x687CD9C1 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xADE80905 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xE925F84CA9DD5B3844FC424861D7BDF9485761B6 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x124 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xE925F84CA9DD5B3844FC424861D7BDF9485761B6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA9FC1AE DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x20 DUP6 ADD CALLVALUE DUP6 GAS CALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x1CE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP EXP ",
              "sourceMap": "131:153:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;182:100;;;;;;;;;;-1:-1:-1;402:42:1;182:100:2;;;-1:-1:-1;;;;;182:100:2;;;;;;;;;;;;;;659:506:1;;;;;;;;;;;;;;;;-1:-1:-1;;;;;659:506:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;659:506:1;;-1:-1:-1;659:506:1;;-1:-1:-1;;;;;659:506:1:i;:::-;;;743:15;402:42;-1:-1:-1;;;;;761:29:1;;791:5;761:36;;;;;;;;;;;;;-1:-1:-1;;;;;761:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;761:36:1;808:15;;761:36;;-1:-1:-1;808:19:1;804:357;;945:1;942;931:8;925:15;918:4;908:8;904:19;891:11;882:7;875:5;870:77;977:16;974:1;971;956:38;1010:6;1025:56;;;;1120:16;1117:1;1110:27;1025:56;1054:16;1051:1;1044:27;804:357;737:428;659:506;;:::o"
            },
            "methodIdentifiers": {
              "accountFactory()": "687cd9c1",
              "deployAndCall(address,bytes)": "ade80905"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"accountFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"deployAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deployAndCall(address,bytes)\":{\"details\":\"Deploys an account for the given owner and executes callData on the account\",\"params\":{\"callData\":\"The call to execute on the account after deployment\",\"owner\":\"Address of the account owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Test/DeployAndCallWrapper.sol\":\"DeployAndCallWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Account/AccountFactory.sol\":{\"keccak256\":\"0xecc5b2bb62c369f0184e32d50453e279a79535c44164ae88bf7516c7d6b14568\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://41c9dbc0613e63f14177b9f6ce9040db44fb7ac250a1bd2b624e938b5096808e\",\"dweb:/ipfs/QmWCZidpP7Jx692hpF2qcsUnSQCKxCdSg5nbCSqeZm933j\"]},\"contracts/Batched/DeployAndCall.sol\":{\"keccak256\":\"0x20bfdf03211a73d35aa3e727e8381fdbda57aa7ff6088bae16df47b7559cf99e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5aedf897ca48ba714e941444f7e9914ef1fd58209b03d15788b4f04a44dcf4bf\",\"dweb:/ipfs/QmTXPaGR2yJ66a9BjHh877J1rqxS7g8NeM4p52G3PPFtWL\"]},\"contracts/Test/DeployAndCallWrapper.sol\":{\"keccak256\":\"0xb2d70aec9878f42968fbdf4a4c8be801145cae6ef0deef1742eff2fa2067a1f8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://21fbca2f8c83085c71f6569f4e9d01bdddb0470b6cc2ed4c5f1e850c47857ca6\",\"dweb:/ipfs/QmfCF9ziZ36JyZG3k6uAmg4AydbLX1LmcLp28KSdLa2sP8\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/Account/AccountFactory.sol": {
        "ast": {
          "absolutePath": "contracts/Account/AccountFactory.sol",
          "exportedSymbols": {
            "AccountFactory": [
              35
            ]
          },
          "id": 36,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:0"
            },
            {
              "id": 2,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AccountFactory",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "91:116:0",
                "text": "@title Brink account factory\n @notice This is a factory contract used for deployment of Brink proxy accounts"
              },
              "fullyImplemented": true,
              "id": 35,
              "linearizedBaseContracts": [
                35
              ],
              "name": "AccountFactory",
              "nameLocation": "216:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 5,
                  "name": "DeployFailed",
                  "nameLocation": "241:12:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "253:2:0"
                  },
                  "src": "235:21:0"
                },
                {
                  "body": {
                    "id": 33,
                    "nodeType": "Block",
                    "src": "904:453:0",
                    "statements": [
                      {
                        "assignments": [
                          14
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 14,
                            "mutability": "mutable",
                            "name": "initCode",
                            "nameLocation": "923:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 33,
                            "src": "910:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 13,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "910:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 20,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3",
                              "id": 17,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "hexString",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1070:106:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7c0bb3be518c0243aa17da2c3d54b85a4c7a7261ba4ce138fc2b8feaf0105560",
                                "typeString": "literal_string hex\"603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3\""
                              }
                            },
                            {
                              "id": 18,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1184:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7c0bb3be518c0243aa17da2c3d54b85a4c7a7261ba4ce138fc2b8feaf0105560",
                                "typeString": "literal_string hex\"603c3d8160093d39f33d3d3d3d363d3d37363d6fafcbce78c080f96032a5c1cb1b832d7b5af43d3d93803e602657fd5bf3\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 15,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "934:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 16,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "934:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "934:261:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "910:285:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1210:76:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1218:62:0",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1237:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "initCode",
                                        "nodeType": "YulIdentifier",
                                        "src": "1244:8:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1254:4:0",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1240:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1240:19:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "initCode",
                                        "nodeType": "YulIdentifier",
                                        "src": "1267:8:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1261:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1261:15:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1278:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1229:7:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1229:51:0"
                              },
                              "variableNames": [
                                {
                                  "name": "account",
                                  "nodeType": "YulIdentifier",
                                  "src": "1218:7:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 11,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1218:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 14,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1244:8:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 14,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1267:8:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 21,
                        "nodeType": "InlineAssembly",
                        "src": "1201:85:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 22,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1294:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 25,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1313:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 24,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1305:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 23,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1305:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1305:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1294:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 32,
                        "nodeType": "IfStatement",
                        "src": "1291:62:0",
                        "trueBody": {
                          "id": 31,
                          "nodeType": "Block",
                          "src": "1317:36:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 28,
                                  "name": "DeployFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5,
                                  "src": "1332:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 29,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1332:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 30,
                              "nodeType": "RevertStatement",
                              "src": "1325:21:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 6,
                    "nodeType": "StructuredDocumentation",
                    "src": "260:568:0",
                    "text": "@dev Deploys a Proxy account for the given owner\n @param owner Owner of the Proxy account\n @return account Address of the deployed Proxy account\n @notice This deploys a \"minimal proxy\" contract with the proxy owner address added to the deployed bytecode. The\n owner address can be read within a delegatecall by using `extcodecopy`. Minimal proxy bytecode is from\n https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48 and https://eips.ethereum.org/EIPS/eip-1167. It\n utilizes the \"vanity address optimization\" from EIP 1167"
                  },
                  "functionSelector": "da9fc1ae",
                  "id": 34,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployAccount",
                  "nameLocation": "840:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "862:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "854:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "854:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "853:15:0"
                  },
                  "returnParameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "895:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "887:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "887:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "886:17:0"
                  },
                  "scope": 35,
                  "src": "831:526:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 36,
              "src": "207:1152:0",
              "usedErrors": [
                5
              ]
            }
          ],
          "src": "45:1315:0"
        },
        "id": 0
      },
      "contracts/Batched/DeployAndCall.sol": {
        "ast": {
          "absolutePath": "contracts/Batched/DeployAndCall.sol",
          "exportedSymbols": {
            "AccountFactory": [
              35
            ],
            "DeployAndCall": [
              71
            ]
          },
          "id": 72,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 37,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:1"
            },
            {
              "id": 38,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:1"
            },
            {
              "absolutePath": "contracts/Account/AccountFactory.sol",
              "file": "../Account/AccountFactory.sol",
              "id": 39,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 72,
              "sourceUnit": 36,
              "src": "91:39:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "DeployAndCall",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 40,
                "nodeType": "StructuredDocumentation",
                "src": "132:125:1",
                "text": "@title DeployAndCall\n @notice This contract contains a function to batch account deploy and call into one transaction"
              },
              "fullyImplemented": true,
              "id": 71,
              "linearizedBaseContracts": [
                71
              ],
              "name": "DeployAndCall",
              "nameLocation": "266:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:58:1",
                    "text": "@dev The AccountFactory to use for account deployments"
                  },
                  "id": 47,
                  "mutability": "constant",
                  "name": "ACCOUNT_FACTORY",
                  "nameLocation": "369:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "345:100:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AccountFactory_$35",
                    "typeString": "contract AccountFactory"
                  },
                  "typeName": {
                    "id": 43,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42,
                      "name": "AccountFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35,
                      "src": "345:14:1"
                    },
                    "referencedDeclaration": 35,
                    "src": "345:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AccountFactory_$35",
                      "typeString": "contract AccountFactory"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307865393235663834634139446435623338343466433432343836314437624466393438353736314236",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "402:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xe925f84cA9Dd5b3844fC424861D7bDf9485761B6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44,
                      "name": "AccountFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "387:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AccountFactory_$35_$",
                        "typeString": "type(contract AccountFactory)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "387:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AccountFactory_$35",
                      "typeString": "contract AccountFactory"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 69,
                    "nodeType": "Block",
                    "src": "737:428:1",
                    "statements": [
                      {
                        "assignments": [
                          56
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 56,
                            "mutability": "mutable",
                            "name": "account",
                            "nameLocation": "751:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 69,
                            "src": "743:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 55,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "743:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 61,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 59,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "791:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 57,
                              "name": "ACCOUNT_FACTORY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "761:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AccountFactory_$35",
                                "typeString": "contract AccountFactory"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deployAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34,
                            "src": "761:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) external returns (address)"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "761:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "743:54:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 62,
                              "name": "callData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "808:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "808:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "826:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "808:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 68,
                        "nodeType": "IfStatement",
                        "src": "804:357:1",
                        "trueBody": {
                          "id": 67,
                          "nodeType": "Block",
                          "src": "829:332:1",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "846:309:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "856:91:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "gas",
                                            "nodeType": "YulIdentifier",
                                            "src": "875:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "875:5:1"
                                        },
                                        {
                                          "name": "account",
                                          "nodeType": "YulIdentifier",
                                          "src": "882:7:1"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "callvalue",
                                            "nodeType": "YulIdentifier",
                                            "src": "891:9:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "891:11:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "callData",
                                              "nodeType": "YulIdentifier",
                                              "src": "908:8:1"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "918:4:1",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "904:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "904:19:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "callData",
                                              "nodeType": "YulIdentifier",
                                              "src": "931:8:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "925:5:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "925:15:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "942:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "945:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "call",
                                        "nodeType": "YulIdentifier",
                                        "src": "870:4:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "870:77:1"
                                    },
                                    "variables": [
                                      {
                                        "name": "result",
                                        "nodeType": "YulTypedName",
                                        "src": "860:6:1",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "971:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "974:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nodeType": "YulIdentifier",
                                            "src": "977:14:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "977:16:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "956:14:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "956:38:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "956:38:1"
                                  },
                                  {
                                    "cases": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "1032:49:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1051:1:1",
                                                    "type": "",
                                                    "value": "0"
                                                  },
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1054:14:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1054:16:1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1044:6:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1044:27:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "1044:27:1"
                                            }
                                          ]
                                        },
                                        "nodeType": "YulCase",
                                        "src": "1025:56:1",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1030:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "1098:49:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1117:1:1",
                                                    "type": "",
                                                    "value": "0"
                                                  },
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1120:14:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "1120:16:1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "return",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1110:6:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1110:27:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "1110:27:1"
                                            }
                                          ]
                                        },
                                        "nodeType": "YulCase",
                                        "src": "1090:57:1",
                                        "value": "default"
                                      }
                                    ],
                                    "expression": {
                                      "name": "result",
                                      "nodeType": "YulIdentifier",
                                      "src": "1010:6:1"
                                    },
                                    "nodeType": "YulSwitch",
                                    "src": "1003:144:1"
                                  }
                                ]
                              },
                              "evmVersion": "london",
                              "externalReferences": [
                                {
                                  "declaration": 56,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "882:7:1",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 52,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "908:8:1",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 52,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "931:8:1",
                                  "valueSize": 1
                                }
                              ],
                              "id": 66,
                              "nodeType": "InlineAssembly",
                              "src": "837:318:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 48,
                    "nodeType": "StructuredDocumentation",
                    "src": "450:206:1",
                    "text": "@dev Deploys an account for the given owner and executes callData on the account\n @param owner Address of the account owner\n @param callData The call to execute on the account after deployment"
                  },
                  "functionSelector": "ade80905",
                  "id": 70,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployAndCall",
                  "nameLocation": "668:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "690:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "682:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "682:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "callData",
                        "nameLocation": "710:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "697:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "697:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "681:38:1"
                  },
                  "returnParameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "737:0:1"
                  },
                  "scope": 71,
                  "src": "659:506:1",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 72,
              "src": "257:910:1",
              "usedErrors": []
            }
          ],
          "src": "45:1123:1"
        },
        "id": 1
      },
      "contracts/Test/DeployAndCallWrapper.sol": {
        "ast": {
          "absolutePath": "contracts/Test/DeployAndCallWrapper.sol",
          "exportedSymbols": {
            "AccountFactory": [
              35
            ],
            "DeployAndCall": [
              71
            ],
            "DeployAndCallWrapper": [
              89
            ]
          },
          "id": 90,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 73,
              "literals": [
                "solidity",
                "=",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:2"
            },
            {
              "id": 74,
              "literals": [
                "abicoder",
                "v1"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:2"
            },
            {
              "absolutePath": "contracts/Batched/DeployAndCall.sol",
              "file": "../Batched/DeployAndCall.sol",
              "id": 75,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 90,
              "sourceUnit": 72,
              "src": "91:38:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 76,
                    "name": "DeployAndCall",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 71,
                    "src": "164:13:2"
                  },
                  "id": 77,
                  "nodeType": "InheritanceSpecifier",
                  "src": "164:13:2"
                }
              ],
              "canonicalName": "DeployAndCallWrapper",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 89,
              "linearizedBaseContracts": [
                89,
                71
              ],
              "name": "DeployAndCallWrapper",
              "nameLocation": "140:20:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 87,
                    "nodeType": "Block",
                    "src": "240:42:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84,
                              "name": "ACCOUNT_FACTORY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "261:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AccountFactory_$35",
                                "typeString": "contract AccountFactory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AccountFactory_$35",
                                "typeString": "contract AccountFactory"
                              }
                            ],
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "253:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "253:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "253:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 81,
                        "id": 86,
                        "nodeType": "Return",
                        "src": "246:31:2"
                      }
                    ]
                  },
                  "functionSelector": "687cd9c1",
                  "id": 88,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "accountFactory",
                  "nameLocation": "191:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "205:2:2"
                  },
                  "returnParameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "231:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "231:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "230:9:2"
                  },
                  "scope": 89,
                  "src": "182:100:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 90,
              "src": "131:153:2",
              "usedErrors": []
            }
          ],
          "src": "45:240:2"
        },
        "id": 2
      }
    }
  }
}
